{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Signal Processing","text":"<p>Welcome to our website on Signal Processing with AI.</p> <p>Table of Contents</p> <p>This is a new innovative  signal processing course that leverages the latest generative AI technologies to create a fun and engaging content for a wide audience of students with various math backgrounds.</p> <p>See our About.</p> <p>All content is licensed under Creative Commons Attribution NonCommercial ShareAlike.</p> <p>Please use the GitHub Discussions for questions or comments.</p> <p>Please contact me on LinkedIn if you would like to join our group.</p> <p>Thanks! - Dan</p>"},{"location":"#change-log","title":"Change Log","text":"<ul> <li>January 11, 2024 - Added 100 Signal Processing Equations</li> </ul>"},{"location":"about/","title":"About the Signal Processing Website","text":"<p>This website is designed as a proof of concept site to help both instructors and students who are interested in learning about how AI can be used to teach signal processing.  This website uses generative AI to create content around a learning graph and encourages both instructors and students to use generative AI to create and modify content such as simulations and animations of signal processing concepts.</p> <p>We have used the following workflow to generate much of this website.</p>"},{"location":"checklist/","title":"Site Checklist","text":"<ol> <li>Customize the fields in your mkdocs.yml file</li> <li>Configure Google Analytics to use the right site ID</li> <li>Make sure that your .gitignore file includes the <code>site</code> directory</li> <li>Test the build</li> <li>Make sure the Edit button appears</li> <li>Make sure that code color heightening renders correctly</li> <li>run <code>git config advice.addIgnoredFile false</code></li> </ol>"},{"location":"contact/","title":"Contact","text":"<p>Please contact me on LinkedIn</p> <p>Thanks! - Dan</p>"},{"location":"course-description/","title":"Course Description","text":""},{"location":"course-description/#microsims-course-description","title":"MicroSims Course Description","text":"<p>Title: Creating and Customizing MicroSims</p> <p>This 10-week course empowers both teachers and students to leverage generative AI for creating small interactive simulations, known as MicroSims, designed to simplify the understanding of complex topics.</p> <p>While the course introduces a variety of interactive libraries, it emphasizes the use of Processing and p5.js as key development tools.</p> <p>Participants will learn how to craft precise AI prompts that, when paired with carefully designed templates, result in high-quality, user-friendly MicroSims with consistent interfaces.</p>"},{"location":"course-description/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this course, participants will:</p> <ol> <li>Understand what MicroSims are and how they enhance classroom learning.</li> <li>Observe how Generative AI tools can create and modify MicroSims.</li> <li>Utilize p5.js development tools to build, test, and refine MicroSims.</li> <li>Develop skills in writing clear prompts that yield accurate AI-generated results.</li> <li>Experience how pre-defined p5.js templates ensure consistency and reproducibility in MicroSim creation.</li> <li>Gain practical experience providing feedback to generative AI to correct errors.</li> <li>Learn the foundational concepts of p5.js, including the setup and draw functions.</li> <li>Understand how to publish and share MicroSims using GitHub, including free hosting via GitHub Pages.</li> <li>Explore advanced p5.js features such as animation, complex drawing, function libraries, and sound integration.</li> </ol>"},{"location":"course-description/#prerequisites","title":"Prerequisites","text":"<p>Participants must have access to a computer with a keyboard. A mobile device or tablet without command-line access will not be sufficient for the course activities.</p>"},{"location":"glossary/","title":"Signal Processing Glossary of Terms","text":""},{"location":"glossary/#adaptive-filtering","title":"Adaptive filtering","text":"<p>Adaptive filtering is a type of digital filter that self-adjusts its parameters based on the input signal to minimize a certain error criterion. It is used in environments where signal characteristics change over time.</p> <p>Example: In the course, students implement an adaptive filter to cancel noise in real-time audio recordings by continuously adjusting the filter coefficients to match the changing noise profile.</p>"},{"location":"glossary/#amplitude-modulation-am","title":"Amplitude Modulation (AM)","text":"<p>Amplitude Modulation is a modulation technique where the amplitude of a carrier wave is varied in proportion to the instantaneous amplitude of the input signal. It is widely used in radio broadcasting.</p> <p>Example: Students explore AM by transmitting audio signals over simulated radio waves, observing how changes in amplitude affect signal transmission and reception.</p>"},{"location":"glossary/#autoencoders","title":"Autoencoders","text":"<p>Autoencoders are a type of artificial neural network used to learn efficient codings of input data by compressing and then reconstructing the input. They are commonly used for dimensionality reduction and feature learning.</p> <p>Example: In assignments, students use autoencoders to compress image data, demonstrating how the network can learn to retain essential features while reducing data size.</p>"},{"location":"glossary/#band-pass-filter-bpf","title":"Band-pass filter (BPF)","text":"<p>A Band-pass filter allows frequencies within a specific range to pass through while attenuating frequencies outside that range. It is used to isolate desired frequency components in a signal.</p> <p>Example: Students design a BPF to isolate specific frequency bands in an EEG signal, enabling the analysis of particular brain wave activities.</p>"},{"location":"glossary/#band-stop-filter-bsf","title":"Band-stop filter (BSF)","text":"<p>A Band-stop filter attenuates frequencies within a specific range while allowing frequencies outside that range to pass. It is used to eliminate unwanted frequency components from a signal.</p> <p>Example: In lab sessions, students apply a BSF to remove power line interference from a biomedical signal, improving the clarity of the data.</p>"},{"location":"glossary/#bessel-filter","title":"Bessel filter","text":"<p>A Bessel filter is a type of analog or digital filter with a maximally flat group delay, ensuring minimal signal distortion in the time domain. It is ideal for applications requiring linear phase response.</p> <p>Example: Students compare different filter types and observe how Bessel filters preserve the waveform shape of transient signals compared to other filters.</p>"},{"location":"glossary/#big-data-analytics","title":"Big data analytics","text":"<p>Big data analytics involves examining large and complex data sets to uncover hidden patterns, correlations, and other insights. It leverages advanced computational techniques to process and analyze data efficiently.</p> <p>Example: In projects, students use big data analytics to process large datasets from sensor networks, extracting meaningful trends and patterns relevant to signal processing applications.</p>"},{"location":"glossary/#bilinear-transform","title":"Bilinear transform","text":"<p>The Bilinear transform is a mathematical technique used to convert analog filter designs into digital filters while preserving the frequency response characteristics. It maps the s-plane to the z-plane in filter design.</p> <p>Example: Students apply the Bilinear transform to convert an analog prototype filter into a digital filter, ensuring the digital filter maintains the desired frequency response.</p>"},{"location":"glossary/#butterworth-filter","title":"Butterworth filter","text":"<p>A Butterworth filter is a type of analog or digital filter with a maximally flat frequency response in the passband, ensuring no ripples. It provides a smooth transition from passband to stopband.</p> <p>Example: Students design Butterworth filters and compare their frequency responses to other filter types, analyzing the trade-offs between smoothness and transition sharpness.</p>"},{"location":"glossary/#calculus","title":"Calculus","text":"<p>Calculus is a branch of mathematics focused on limits, functions, derivatives, integrals, and infinite series. It is fundamental for analyzing and modeling dynamic systems in signal processing.</p> <p>Example: Students apply calculus to derive the continuous-time Fourier transform, understanding how differentiation and integration affect signal representations.</p>"},{"location":"glossary/#causality","title":"Causality","text":"<p>Causality refers to a property of systems where the output at any time depends only on past and present inputs, not on future inputs. It is essential for real-time signal processing applications.</p> <p>Example: In system analysis, students ensure that their designed filters are causal to guarantee that they can be implemented in real-time processing scenarios.</p>"},{"location":"glossary/#channel-coding","title":"Channel coding","text":"<p>Channel coding involves adding redundancy to transmitted information to protect against errors during transmission. It is essential for reliable communication in noisy channels.</p> <p>Example: Students implement error-correcting codes like Hamming codes to improve data integrity in simulated digital communication systems.</p>"},{"location":"glossary/#chebyshev-filter","title":"Chebyshev filter","text":"<p>A Chebyshev filter is a type of analog or digital filter characterized by a steeper roll-off and ripple in either the passband or stopband. It offers a sharper transition between passband and stopband compared to Butterworth filters.</p> <p>Example: Students design Chebyshev filters and analyze the trade-offs between passband ripple and filter sharpness in different signal processing applications.</p>"},{"location":"glossary/#classification","title":"Classification","text":"<p>Classification is a machine learning task where the goal is to assign input data into predefined categories based on learned patterns. It is widely used in signal processing for tasks like speech recognition and image classification.</p> <p>Example: In a project, students develop a classifier to categorize audio signals into different genres based on their spectral features extracted using FFT.</p>"},{"location":"glossary/#cognitive-signal-processing","title":"Cognitive signal processing","text":"<p>Cognitive signal processing integrates principles from cognitive science to develop intelligent systems that can adapt and learn from their environment. It focuses on creating signal processing techniques that mimic human cognitive abilities.</p> <p>Example: Students explore cognitive signal processing by designing systems that can adaptively recognize and respond to changing signal patterns in real-time applications.</p>"},{"location":"glossary/#colored-noise","title":"Colored noise","text":"<p>Colored noise refers to noise signals with a power spectral density that varies with frequency, unlike white noise which has a constant power spectral density. Examples include pink noise and brown noise.</p> <p>Example: Students simulate colored noise in their signal processing experiments to study its impact on filter performance and signal detection algorithms.</p>"},{"location":"glossary/#complex-numbers","title":"Complex numbers","text":"<p>Complex numbers are numbers that have both a real and an imaginary component, typically expressed in the form \\(a + bi\\). They are essential in signal processing for representing and analyzing oscillatory signals and transformations.</p> <p>Example: Students use complex numbers to represent phasors in AC circuit analysis, facilitating the calculation of impedances and signal interactions.</p>"},{"location":"glossary/#continuous-wavelet-transform-cwt","title":"Continuous Wavelet Transform (CWT)","text":"<p>The Continuous Wavelet Transform is a signal processing technique that decomposes a signal into wavelets, providing both time and frequency information. It is useful for analyzing non-stationary signals.</p> <p>Example: Students use CWT to analyze transient features in biomedical signals, such as detecting spikes in EEG data.</p>"},{"location":"glossary/#continuous-time-signals","title":"Continuous-time signals","text":"<p>Continuous-time signals are defined for every instant of time and can take any value within a range. They are represented mathematically as functions of a continuous variable.</p> <p>Example: In lectures, students work with continuous-time signals like sine waves and analog audio signals to understand fundamental signal properties before discretization.</p>"},{"location":"glossary/#convolution","title":"Convolution","text":"<p>Convolution is a mathematical operation that combines two signals to produce a third signal, representing the amount of overlap between one signal as it is shifted over another. It is fundamental in system analysis and filter design.</p> <p>Example: In assignments, students perform convolution of a signal with an impulse response to determine the output of a linear time-invariant (LTI) system.</p>"},{"location":"glossary/#cross-correlation","title":"Cross-correlation","text":"<p>Cross-correlation measures the similarity between two signals as a function of the time lag applied to one of them. It is used for signal alignment and pattern detection.</p> <p>Example: Students use cross-correlation to identify the time delay between two sensor signals, aiding in applications like radar and sonar.</p>"},{"location":"glossary/#deep-learning-dl","title":"Deep Learning (DL)","text":"<p>Deep Learning is a subset of machine learning that uses neural networks with many layers to model complex patterns in data. It is applied in signal processing for tasks like image and speech recognition.</p> <p>Example: In projects, students implement deep learning models to classify speech signals into different spoken words based on their spectral features.</p>"},{"location":"glossary/#differential-equations","title":"Differential equations","text":"<p>Differential equations are mathematical equations involving derivatives of functions. They are used to model the behavior of dynamic systems in signal processing.</p> <p>Example: Students derive the differential equation governing an RLC circuit and analyze its response to different input signals.</p>"},{"location":"glossary/#differentiation","title":"Differentiation","text":"<p>Differentiation is a calculus operation that computes the derivative of a function, representing the rate of change of the function with respect to a variable. It is used in signal analysis to determine signal slopes and rates.</p> <p>Example: In lab exercises, students differentiate a signal to find its velocity from position data, applying numerical differentiation techniques.</p>"},{"location":"glossary/#digital-signal-processing-dsp","title":"Digital Signal Processing (DSP)","text":"<p>Digital Signal Processing involves the manipulation of digital signals using computational algorithms. It encompasses filtering, analysis, compression, and transformation of signals.</p> <p>Example: Students implement digital filters in MATLAB to process and enhance audio signals, applying concepts learned in lectures to practical scenarios.</p>"},{"location":"glossary/#digital-modulation","title":"Digital modulation","text":"<p>Digital modulation involves varying one or more properties of a carrier signal (such as amplitude, frequency, or phase) to encode digital information. It is fundamental in digital communication systems.</p> <p>Example: Students implement various digital modulation schemes like QAM and PSK in simulated communication systems, analyzing their performance under different noise conditions.</p>"},{"location":"glossary/#digital-signals","title":"Digital signals","text":"<p>Digital signals are discrete-time signals that have quantized amplitude levels. They are essential for digital communication and processing systems.</p> <p>Example: In assignments, students convert analog audio signals into digital form through sampling and quantization, then process them using digital filters.</p>"},{"location":"glossary/#discrete-fourier-transform-dft","title":"Discrete Fourier Transform (DFT)","text":"<p>The Discrete Fourier Transform is a mathematical transform that converts a finite sequence of time-domain samples into a sequence of frequency-domain components. It is fundamental for digital signal processing.</p> <p>Example: Students compute the DFT of a sampled audio signal to analyze its frequency content and identify dominant frequencies.</p>"},{"location":"glossary/#discrete-wavelet-transform-dwt","title":"Discrete Wavelet Transform (DWT)","text":"<p>The Discrete Wavelet Transform is a wavelet-based transform that analyzes discrete signals at different frequency bands with different resolutions. It is useful for signal compression and denoising.</p> <p>Example: Students apply DWT to compress image data, observing how different wavelet levels capture various image features.</p>"},{"location":"glossary/#discrete-time-signals","title":"Discrete-time signals","text":"<p>Discrete-time signals are defined only at discrete time intervals and are typically obtained by sampling continuous-time signals. They are essential for digital signal processing.</p> <p>Example: In assignments, students sample a continuous-time sine wave to create a discrete-time signal for further digital analysis using FFT.</p>"},{"location":"glossary/#edge-detection","title":"Edge detection","text":"<p>Edge detection is an image processing technique used to identify and locate sharp discontinuities in intensity within an image. It is crucial for feature extraction and image analysis.</p> <p>Example: In projects, students apply edge detection algorithms like the Sobel filter to identify boundaries in grayscale images, facilitating object recognition tasks.</p>"},{"location":"glossary/#elliptic-filter","title":"Elliptic filter","text":"<p>An Elliptic filter, also known as a Cauer filter, is a type of analog or digital filter with equalized ripple in both the passband and stopband. It provides the steepest transition between passband and stopband for a given filter order.</p> <p>Example: Students design an Elliptic filter to achieve a specific cutoff frequency with minimal filter order, comparing its performance to other filter types.</p>"},{"location":"glossary/#energy-spectral-density-esd","title":"Energy Spectral Density (ESD)","text":"<p>Energy Spectral Density represents the distribution of signal energy over frequency. It is used to analyze how energy is distributed across different frequency components of a signal.</p> <p>Example: Students calculate the ESD of a vibration signal to identify dominant frequencies associated with mechanical resonances.</p>"},{"location":"glossary/#ergodicity","title":"Ergodicity","text":"<p>Ergodicity is a property of a stochastic process where time averages are equal to ensemble averages. It implies that a single, sufficiently long realization of the process can represent the entire statistical behavior.</p> <p>Example: In signal analysis, students assess whether a given noise signal is ergodic by comparing its time-averaged statistics to theoretical ensemble averages.</p>"},{"location":"glossary/#error-correction","title":"Error correction","text":"<p>Error correction involves adding redundancy to transmitted information to protect against errors during transmission. It is essential for reliable communication in noisy channels.</p> <p>Example: Students implement Reed-Solomon codes to correct burst errors in a simulated digital transmission system, enhancing data reliability.</p>"},{"location":"glossary/#error-detection","title":"Error detection","text":"<p>Error detection is the process of identifying errors in transmitted or stored data. It ensures data integrity by identifying corrupted information.</p> <p>Example: In lab sessions, students use parity checks and CRC (Cyclic Redundancy Check) methods to detect errors in data packets during transmission.</p>"},{"location":"glossary/#eulers-formula","title":"Euler's formula","text":"<p>Euler's formula establishes a fundamental relationship between complex exponentials and trigonometric functions, expressed as \\(e^{j\\theta} = \\cos(\\theta) + j\\sin(\\theta)\\). It is essential for analyzing sinusoidal signals and phasors in signal processing.</p> <p>Example: Students use Euler's formula to convert time-domain sinusoidal signals into their phasor representations, simplifying the analysis of AC circuits.</p>"},{"location":"glossary/#fir-filters","title":"FIR filters","text":"<p>Finite Impulse Response filters are a type of digital filter with a finite number of coefficients. They are inherently stable and can have linear phase characteristics.</p> <p>Example: Students design FIR filters using the window method to create low-pass filters for audio signal processing applications.</p>"},{"location":"glossary/#fast-fourier-transform-fft","title":"Fast Fourier Transform (FFT)","text":"<p>The Fast Fourier Transform is an efficient algorithm that computes the discrete Fourier transform (DFT) and its inverse, reducing the computational complexity from \\(O(N^2)\\) to \\(O(N \\log N)\\) for a sequence of \\(N\\) points. This transformation decomposes a time-domain signal into its constituent frequencies, enabling rapid analysis and processing of frequency components.</p> <p>Example: We use the FFT to analyze audio signals by converting a time-domain recording into its frequency spectrum. This allows them to identify dominant frequencies, filter out noise, and visualize the signal's frequency content for applications such as music analysis or noise reduction.</p>"},{"location":"glossary/#feature-extraction","title":"Feature extraction","text":"<p>Feature extraction involves transforming raw data into a set of characteristics that capture essential information for analysis. It is a crucial step in pattern recognition and machine learning.</p> <p>Example: Students extract Mel-frequency cepstral coefficients (MFCCs) from audio signals to use as features for speech recognition tasks.</p>"},{"location":"glossary/#filter-banks","title":"Filter banks","text":"<p>Filter banks consist of multiple filters that decompose a signal into different frequency bands. They are used in applications like audio processing and image compression to analyze and process signals in parallel frequency channels.</p> <p>Example: Students design filter banks to separate an audio signal into various frequency bands, allowing independent processing and manipulation of each band for effects like equalization.</p>"},{"location":"glossary/#filter-design","title":"Filter design","text":"<p>Filter design is the process of creating filters with specific frequency responses to achieve desired signal processing objectives. It involves selecting appropriate filter types, orders, and parameters.</p> <p>Example: Students engage in filter design projects where they create low-pass, high-pass, and band-pass filters tailored to remove specific noise frequencies from sensor data.</p>"},{"location":"glossary/#fourier-transform-ft","title":"Fourier Transform (FT)","text":"<p>The Fourier Transform is a mathematical transform that decomposes a continuous-time signal into its constituent frequencies. It provides a frequency-domain representation of time-domain signals.</p> <p>Example: Students apply the FT to analyze the frequency content of an analog signal, understanding how different frequency components contribute to the overall signal.</p>"},{"location":"glossary/#fourier-series","title":"Fourier series","text":"<p>Fourier series decompose periodic signals into sums of sine and cosine functions with discrete frequencies. It is fundamental for analyzing periodic signals in both time and frequency domains.</p> <p>Example: Students represent a square wave using Fourier series, analyzing how adding higher harmonics affects the signal's approximation to the ideal waveform.</p>"},{"location":"glossary/#frequency-modulation-fm","title":"Frequency Modulation (FM)","text":"<p>Frequency Modulation is a modulation technique where the frequency of the carrier wave is varied in accordance with the input signal. It is widely used in radio broadcasting and communication systems.</p> <p>Example: In experiments, students generate FM signals and demodulate them to recover the original audio, studying the effects of modulation index on signal quality.</p>"},{"location":"glossary/#frequency-response","title":"Frequency response","text":"<p>Frequency response describes how a system or filter responds to different frequency components of an input signal. It characterizes the gain and phase shift introduced by the system across frequencies.</p> <p>Example: Students plot the frequency response of designed filters to evaluate their effectiveness in attenuating unwanted frequencies and preserving desired ones.</p>"},{"location":"glossary/#generative-adversarial-networks-gans","title":"Generative Adversarial Networks (GANs)","text":"<p>Generative Adversarial Networks are a class of machine learning frameworks where two neural networks, a generator and a discriminator, compete to produce realistic data. GANs are used for tasks like image generation and data augmentation.</p> <p>Example: In advanced projects, students use GANs to generate synthetic audio signals, exploring their applications in data augmentation for training signal processing models.</p>"},{"location":"glossary/#gradient-descent","title":"Gradient descent","text":"<p>Gradient descent is an optimization algorithm used to minimize the loss function by iteratively moving in the direction of the steepest descent as defined by the negative of the gradient. It is widely used in training machine learning models.</p> <p>Example: Students implement gradient descent to train a neural network for signal classification, observing how learning rates and iterations affect convergence and accuracy.</p>"},{"location":"glossary/#high-pass-filter-hpf","title":"High-pass filter (HPF)","text":"<p>A High-pass filter allows frequencies above a certain cutoff frequency to pass through while attenuating lower frequencies. It is used to remove low-frequency noise or to isolate high-frequency components.</p> <p>Example: Students design an HPF to eliminate baseline wander in ECG signals, enhancing the detection of heartbeats by removing slow-varying trends.</p>"},{"location":"glossary/#iir-filters","title":"IIR filters","text":"<p>Infinite Impulse Response filters are a type of digital filter that, unlike FIR filters, have feedback and an infinite impulse response. They are capable of achieving sharp frequency cutoffs with fewer coefficients but may have stability concerns.</p> <p>Example: Students design IIR filters using the bilinear transform method, comparing their performance and computational efficiency to FIR filters in real-time audio processing.</p>"},{"location":"glossary/#iso-definition","title":"ISO Definition","text":"<p>A term definition is considered to be consistent with ISO metadata registry guideline 11179 if it meets the following criteria:</p> <ol> <li>Precise</li> <li>Concise</li> <li>Distinct</li> <li>Non-circular</li> <li>Unencumbered with business rules</li> </ol>"},{"location":"glossary/#integration","title":"Integration","text":"<p>Integration is a calculus operation that computes the area under a curve defined by a function. It is used in signal processing for tasks such as finding signal energy and performing convolution.</p> <p>Example: In assignments, students integrate the squared magnitude of a signal over time to calculate its total energy, applying numerical integration techniques.</p>"},{"location":"glossary/#interpolation","title":"Interpolation","text":"<p>Interpolation is the process of estimating unknown values between known data points. In signal processing, it is used to reconstruct continuous signals from discrete samples or to increase the sampling rate.</p> <p>Example: Students apply interpolation techniques to upsample a discrete-time signal, filling in additional samples to achieve a higher resolution representation.</p>"},{"location":"glossary/#inverse-fourier-transform-ift","title":"Inverse Fourier Transform (IFT)","text":"<p>The Inverse Fourier Transform converts a frequency-domain representation of a signal back into its time-domain form. It is essential for reconstructing time-domain signals from their frequency components.</p> <p>Example: Students perform IFT on a frequency spectrum obtained via FFT to verify the accuracy of the signal reconstruction process.</p>"},{"location":"glossary/#kalman-filter","title":"Kalman filter","text":"<p>The Kalman filter is an algorithm that provides estimates of unknown variables by predicting a system's future states and updating them based on new measurements. It is widely used in navigation and tracking systems.</p> <p>Example: Students implement a Kalman filter to estimate the position and velocity of a moving object using noisy sensor data, demonstrating its effectiveness in real-time tracking.</p>"},{"location":"glossary/#least-mean-squares-lms-algorithm","title":"Least Mean Squares (LMS) algorithm","text":"<p>The Least Mean Squares algorithm is an adaptive filter algorithm that iteratively adjusts filter coefficients to minimize the mean square error between the desired and actual outputs. It is simple and widely used in adaptive filtering applications.</p> <p>Example: In lab exercises, students apply the LMS algorithm to develop an adaptive noise canceller, effectively reducing background noise in audio signals.</p>"},{"location":"glossary/#linear-algebra","title":"Linear algebra","text":"<p>Linear algebra is a branch of mathematics dealing with vectors, matrices, and linear transformations. It is fundamental for understanding and implementing signal processing algorithms.</p> <p>Example: Students use linear algebra concepts to solve systems of equations arising in filter design and to perform operations like matrix multiplication in signal transformations.</p>"},{"location":"glossary/#low-pass-filter-lpf","title":"Low-pass filter (LPF)","text":"<p>A Low-pass filter allows frequencies below a certain cutoff frequency to pass through while attenuating higher frequencies. It is used to remove high-frequency noise or to smooth signals.</p> <p>Example: Students design an LPF to eliminate high-frequency components from a sensor signal, ensuring that only the relevant low-frequency information is retained for analysis.</p>"},{"location":"glossary/#machine-learning-ml","title":"Machine Learning (ML)","text":"<p>Machine Learning is a field of artificial intelligence focused on developing algorithms that enable computers to learn patterns from data and make decisions. It is applied in signal processing for tasks like classification, regression, and prediction.</p> <p>Example: In projects, students train machine learning models to classify different types of heartbeats from ECG data, utilizing features extracted through signal processing techniques.</p>"},{"location":"glossary/#matrices","title":"Matrices","text":"<p>Matrices are rectangular arrays of numbers arranged in rows and columns. They are used in signal processing for operations like transformations, system representations, and solving linear equations.</p> <p>Example: Students use matrix multiplication to perform transformations in multi-dimensional signal spaces, such as rotating image data in computer vision applications.</p>"},{"location":"glossary/#mean","title":"Mean","text":"<p>Mean is a statistical measure representing the average value of a set of numbers. It is used to summarize the central tendency of signal data.</p> <p>Example: Students calculate the mean of a noisy signal to understand its baseline level and to use it in normalization procedures.</p>"},{"location":"glossary/#multirate-signal-processing","title":"Multirate signal processing","text":"<p>Multirate signal processing involves the use of different sampling rates within a single system, such as in decimation and interpolation. It is essential for efficient signal representation and processing.</p> <p>Example: Students implement a multirate system to downsample and upsample audio signals, optimizing processing speed while maintaining signal quality.</p>"},{"location":"glossary/#multiresolution-analysis","title":"Multiresolution analysis","text":"<p>Multiresolution analysis decomposes a signal into components at various scales or resolutions. It is fundamental in wavelet transforms and enables detailed analysis of signal features at different levels.</p> <p>Example: In wavelet projects, students perform multiresolution analysis to separate signal components, facilitating the detection of both coarse and fine features in biomedical signals.</p>"},{"location":"glossary/#neural-networks-nn","title":"Neural Networks (NN)","text":"<p>Neural Networks are computational models inspired by the human brain, consisting of interconnected layers of nodes (neurons) that process data. They are used in signal processing for tasks like classification, regression, and pattern recognition.</p> <p>Example: Students build and train neural networks to classify speech signals, learning how network architecture affects performance and accuracy.</p>"},{"location":"glossary/#noise-cancellation","title":"Noise cancellation","text":"<p>Noise cancellation is the process of removing unwanted noise from a signal to enhance the desired information. It is commonly used in audio processing and communication systems.</p> <p>Example: Students develop noise cancellation algorithms to clean up speech recordings, improving clarity by reducing background noise through adaptive filtering techniques.</p>"},{"location":"glossary/#nyquist-theorem","title":"Nyquist theorem","text":"<p>The Nyquist theorem states that to accurately sample a continuous-time signal without aliasing, the sampling rate must be at least twice the highest frequency present in the signal. It sets the foundation for sampling in digital signal processing.</p> <p>Example: Students apply the Nyquist theorem to determine appropriate sampling rates for different audio signals, ensuring accurate digital representation without loss of information.</p>"},{"location":"glossary/#orthogonal-frequency-division-multiplexing-ofdm","title":"Orthogonal Frequency Division Multiplexing (OFDM)","text":"<p>OFDM is a digital modulation technique that splits a signal into multiple orthogonal subcarriers, each carrying a portion of the data. It is widely used in modern communication systems like Wi-Fi and LTE.</p> <p>Example: Students simulate an OFDM-based communication system, analyzing how subcarriers are multiplexed and demultiplexed to achieve high data rates and robustness against multipath fading.</p>"},{"location":"glossary/#pattern-recognition","title":"Pattern recognition","text":"<p>Pattern recognition involves identifying patterns and regularities in data, enabling classification and prediction based on learned models. It is essential in applications like speech and image recognition.</p> <p>Example: In assignments, students develop pattern recognition systems to identify specific gestures from motion sensor data, applying feature extraction and classification algorithms.</p>"},{"location":"glossary/#phase-modulation-pm","title":"Phase Modulation (PM)","text":"<p>Phase Modulation is a modulation technique where the phase of the carrier wave is varied in accordance with the input signal. It is used in various communication systems for transmitting information.</p> <p>Example: Students generate and demodulate PM signals, studying how phase variations encode information and affect signal integrity in noisy environments.</p>"},{"location":"glossary/#phase-shift-keying-psk","title":"Phase Shift Keying (PSK)","text":"<p>Phase Shift Keying is a digital modulation scheme where the phase of the carrier signal is varied to represent data symbols. It is widely used in wireless and digital communication systems.</p> <p>Example: Students implement PSK modulation and demodulation schemes, analyzing bit error rates under different noise conditions to evaluate system performance.</p>"},{"location":"glossary/#phasors","title":"Phasors","text":"<p>Phasors are complex numbers representing sinusoidal functions with amplitude and phase, simplifying the analysis of linear time-invariant systems in the frequency domain. They are used to analyze AC circuits and signal interactions.</p> <p>Example: Students use phasors to solve AC circuit problems, representing voltage and current as rotating vectors to easily calculate impedances and power factors.</p>"},{"location":"glossary/#polyphase-filters","title":"Polyphase filters","text":"<p>Polyphase filters are filter structures that decompose filtering operations into multiple phases, improving efficiency in multirate signal processing applications. They are used in implementations like interpolation and decimation.</p> <p>Example: Students design polyphase filter banks for efficient upsampling and downsampling of audio signals, reducing computational complexity compared to standard filtering approaches.</p>"},{"location":"glossary/#power-spectral-density-psd","title":"Power Spectral Density (PSD)","text":"<p>Power Spectral Density quantifies how the power of a signal is distributed across different frequency components. It is used to analyze the frequency content and energy distribution of signals.</p> <p>Example: Students compute the PSD of vibration data to identify dominant frequencies associated with mechanical faults in rotating machinery.</p>"},{"location":"glossary/#probability","title":"Probability","text":"<p>Probability is a branch of mathematics that deals with the likelihood of events occurring. It is fundamental in signal processing for modeling and analyzing random signals and noise.</p> <p>Example: Students study the probability distributions of noise in communication systems, applying statistical methods to model and mitigate interference.</p>"},{"location":"glossary/#quadrature-amplitude-modulation-qam","title":"Quadrature Amplitude Modulation (QAM)","text":"<p>Quadrature Amplitude Modulation is a modulation scheme that combines both amplitude and phase modulation, allowing the transmission of multiple bits per symbol. It is widely used in digital communication systems for high data rates.</p> <p>Example: Students implement QAM in a simulated communication system, analyzing its capacity and resilience to noise compared to simpler modulation schemes.</p>"},{"location":"glossary/#random-processes","title":"Random processes","text":"<p>Random processes are collections of random variables indexed by time or space, used to model signals that evolve unpredictably. They are fundamental in understanding noise and stochastic signals.</p> <p>Example: Students analyze random processes by modeling wireless channel noise, studying how it affects signal transmission and reception in communication systems.</p>"},{"location":"glossary/#random-variables","title":"Random variables","text":"<p>Random variables are variables that can take on different values based on probabilistic outcomes. They are used to model and analyze stochastic processes and noise in signal processing.</p> <p>Example: Students model thermal noise in electronic circuits as a Gaussian random variable, applying statistical techniques to predict its impact on signal quality.</p>"},{"location":"glossary/#recursive-least-squares-rls-algorithm","title":"Recursive Least Squares (RLS) algorithm","text":"<p>The Recursive Least Squares algorithm is an adaptive filter method that recursively finds the filter coefficients minimizing the weighted linear least squares cost function. It provides faster convergence compared to LMS.</p> <p>Example: In lab projects, students implement the RLS algorithm to adaptively filter out noise from a signal, observing its rapid convergence and performance advantages over LMS.</p>"},{"location":"glossary/#regression","title":"Regression","text":"<p>Regression is a statistical method for modeling the relationship between a dependent variable and one or more independent variables. It is used in signal processing for prediction and trend analysis.</p> <p>Example: Students apply linear regression to predict future signal values based on past observations, evaluating the model's accuracy in time-series forecasting.</p>"},{"location":"glossary/#sampling","title":"Sampling","text":"<p>Sampling is the process of converting a continuous-time signal into a discrete-time signal by taking measurements at regular intervals. It is a fundamental step in digital signal processing.</p> <p>Example: Students sample an analog audio signal at different rates, observing the effects of sampling rate on signal representation and aliasing phenomena.</p>"},{"location":"glossary/#sampling-rate-conversion","title":"Sampling rate conversion","text":"<p>Sampling rate conversion changes the sampling rate of a discrete-time signal, either by upsampling (increasing) or downsampling (decreasing). It is used to match different system requirements or standards.</p> <p>Example: Students implement sampling rate conversion algorithms to adapt audio signals for different playback devices, ensuring compatibility and maintaining quality.</p>"},{"location":"glossary/#short-time-fourier-transform-stft","title":"Short-Time Fourier Transform (STFT)","text":"<p>The Short-Time Fourier Transform is a time-frequency analysis technique that applies the Fourier transform to short, overlapping segments of a signal. It provides localized frequency information over time.</p> <p>Example: Students use STFT to create spectrograms of speech signals, visualizing how frequency content evolves during spoken words for speech recognition tasks.</p>"},{"location":"glossary/#signal-compression","title":"Signal compression","text":"<p>Signal compression reduces the amount of data required to represent a signal by removing redundancies and irrelevant information. It is essential for efficient storage and transmission.</p> <p>Example: Students implement JPEG compression on images, learning how transform coding and quantization reduce file sizes while maintaining visual quality.</p>"},{"location":"glossary/#signal-decomposition","title":"Signal decomposition","text":"<p>Signal decomposition breaks down a complex signal into simpler components, such as fundamental frequencies or wavelets. It is essential for analysis, compression, and feature extraction.</p> <p>Example: In projects, students decompose music signals into harmonic and percussive components, enabling separate processing and enhancement of each part.</p>"},{"location":"glossary/#signal-detection","title":"Signal detection","text":"<p>Signal detection involves identifying the presence of a signal within noisy data. It is critical in applications like radar, communications, and biomedical monitoring.</p> <p>Example: Students design detectors to identify ECG signals amidst physiological noise, applying statistical methods to enhance detection reliability.</p>"},{"location":"glossary/#signal-estimation","title":"Signal estimation","text":"<p>Signal estimation refers to the process of inferring the true signal from observed noisy measurements. It is fundamental in applications requiring accurate signal reconstruction.</p> <p>Example: Students use Wiener filtering techniques to estimate the original speech signal from a noisy recording, evaluating the filter's effectiveness in different noise environments.</p>"},{"location":"glossary/#signal-filtering","title":"Signal filtering","text":"<p>Signal filtering involves manipulating a signal to remove unwanted components or to enhance desired features. It is a core operation in signal processing for noise reduction, feature extraction, and signal shaping.</p> <p>Example: Students apply various filters to biomedical signals to remove artifacts, improving the quality of data used for diagnosis and analysis.</p>"},{"location":"glossary/#signal-prediction","title":"Signal prediction","text":"<p>Signal prediction estimates future values of a signal based on past and present data. It is used in applications like forecasting, control systems, and communication.</p> <p>Example: In assignments, students develop predictive models using autoregressive techniques to forecast stock market trends based on historical price data.</p>"},{"location":"glossary/#signal-reconstruction","title":"Signal reconstruction","text":"<p>Signal reconstruction is the process of rebuilding a continuous-time signal from its discrete samples, typically using interpolation methods. It ensures that the original signal can be accurately recovered from its sampled version.</p> <p>Example: Students reconstruct audio signals from their samples using sinc interpolation, assessing the fidelity of the reconstructed signal compared to the original.</p>"},{"location":"glossary/#sparse-representation","title":"Sparse representation","text":"<p>Sparse representation involves expressing a signal as a linear combination of a few non-zero elements from a dictionary of possible basis functions. It is useful for efficient signal representation and compression.</p> <p>Example: Students apply sparse coding techniques to represent natural images with fewer coefficients, achieving compression without significant loss of detail.</p>"},{"location":"glossary/#stability","title":"Stability","text":"<p>Stability in signal processing systems refers to the ability of a system to produce bounded outputs for bounded inputs. It ensures that the system behaves predictably over time.</p> <p>Example: Students analyze the stability of different filter designs by examining their pole locations, ensuring that all filters used in projects are stable.</p>"},{"location":"glossary/#subband-coding","title":"Subband coding","text":"<p>Subband coding splits a signal into multiple frequency bands and encodes each band separately. It is used in audio and image compression to exploit frequency-specific redundancies.</p> <p>Example: Students implement subband coding for audio signals, achieving compression by encoding each frequency band independently based on its perceptual importance.</p>"},{"location":"glossary/#supervised-learning","title":"Supervised learning","text":"<p>Supervised learning is a machine learning paradigm where models are trained on labeled data, learning to map inputs to desired outputs. It is used in signal processing for classification and regression tasks.</p> <p>Example: Students train supervised learning models to classify different types of signals, using labeled datasets to teach the model to recognize specific patterns.</p>"},{"location":"glossary/#support-vector-machines-svm","title":"Support Vector Machines (SVM)","text":"<p>Support Vector Machines are supervised learning models used for classification and regression tasks by finding the optimal hyperplane that separates data into classes. They are effective in high-dimensional spaces.</p> <p>Example: Students use SVMs to classify EEG signal patterns, distinguishing between different mental states based on their spectral features.</p>"},{"location":"glossary/#time-domain","title":"Time domain","text":"<p>The time domain represents signals as functions of time, focusing on how signal amplitude changes over time. It is one of the primary domains for analyzing and processing signals.</p> <p>Example: Students analyze time-domain waveforms of audio signals to identify temporal features like amplitude envelopes and transient events.</p>"},{"location":"glossary/#time-frequency-analysis","title":"Time-frequency analysis","text":"<p>Time-frequency analysis examines signals in both time and frequency domains simultaneously, providing a more detailed representation of signal characteristics. Techniques include STFT and wavelet transforms.</p> <p>Example: Students apply time-frequency analysis to analyze transient events in biomedical signals, identifying when specific frequency components occur over time.</p>"},{"location":"glossary/#transfer-function","title":"Transfer function","text":"<p>A transfer function describes the relationship between the input and output of a linear time-invariant system in the frequency domain. It characterizes the system's behavior and response to different frequencies.</p> <p>Example: Students derive the transfer function of an electronic filter and analyze its impact on various input signals by examining the system's frequency response.</p>"},{"location":"glossary/#unsupervised-learning","title":"Unsupervised learning","text":"<p>Unsupervised learning is a machine learning paradigm where models find patterns and relationships in unlabeled data without explicit instructions. It is used in signal processing for clustering, dimensionality reduction, and anomaly detection.</p> <p>Example: Students apply unsupervised learning techniques like k-means clustering to group similar signal patterns, identifying underlying structures without predefined labels.</p>"},{"location":"glossary/#variance","title":"Variance","text":"<p>Variance is a statistical measure that quantifies the spread of a set of values around the mean. It is used to assess the variability or dispersion in signal data.</p> <p>Example: Students calculate the variance of a noise signal to understand its power distribution and to design appropriate filters for noise reduction.</p>"},{"location":"glossary/#wavelet-transform-wt","title":"Wavelet Transform (WT)","text":"<p>The Wavelet Transform is a signal processing technique that decomposes a signal into wavelets, allowing for both time and frequency localization. It is useful for analyzing non-stationary signals with transient features.</p> <p>Example: Students apply the Wavelet Transform to analyze heart rate variability data, identifying both slow and rapid changes in heart rhythms.</p>"},{"location":"glossary/#white-noise","title":"White noise","text":"<p>White noise is a random signal with a constant power spectral density across all frequencies. It serves as a fundamental noise model in signal processing and communications.</p> <p>Example: Students simulate white noise to test the robustness of filtering algorithms, ensuring that filters effectively remove noise without distorting the signal.</p>"},{"location":"glossary/#wiener-filter","title":"Wiener filter","text":"<p>The Wiener filter is an optimal linear filter that minimizes the mean square error between the estimated and true signals. It is used for signal restoration and noise reduction.</p> <p>Example: Students implement Wiener filtering to denoise images, comparing the restored images to the original and evaluating the filter's effectiveness.</p>"},{"location":"glossary/#window-functions","title":"Window functions","text":"<p>Window functions are mathematical functions used to select a subset of a signal for analysis, typically in Fourier transforms. They reduce spectral leakage by tapering the signal edges.</p> <p>Example: In FFT assignments, students apply different window functions like Hamming and Hann windows to minimize spectral leakage and improve frequency resolution.</p>"},{"location":"glossary/#z-transform","title":"Z-Transform","text":"<p>The Z-Transform is a mathematical transform that converts discrete-time signals into the complex frequency domain. It is used for analyzing and designing digital filters and systems.</p> <p>Example: Students use the Z-Transform to analyze the stability and frequency response of digital filters, facilitating the design of effective filtering systems.</p>"},{"location":"glossary/#zero-crossing-rate","title":"Zero-crossing rate","text":"<p>Zero-crossing rate is the rate at which a signal changes sign, indicating the number of times the signal crosses the zero amplitude axis. It is used as a feature in signal classification tasks.</p> <p>Example: Students calculate the zero-crossing rate of audio signals to distinguish between different types of sounds, such as voiced and unvoiced speech.</p>"},{"location":"how-we-built-this-site/","title":"How We Built This Site","text":"<p>This page describes how we built this website and some of  the rationale behind why we made various design choices.</p>"},{"location":"how-we-built-this-site/#python","title":"Python","text":"<p>MicroSims are about how we use generative AI to create animations and simulations.  The language of AI is Python.  So we wanted to create a site that could be easily understood by Python developers.</p>"},{"location":"how-we-built-this-site/#mkdocs-vs-docusaurus","title":"Mkdocs vs. Docusaurus","text":"<p>There are two main tools used by Python developers to write documentation: Mkdocs and Docusaurus.  Mkdocs is easier to use and more popular than Docusaurus. Docusaurus is also optimized for single-page applications. Mkdocs also has an extensive library of themes and plugins. None of us are experts in JavaScript or React. Based on our ChatGPT Analysis of the Tradeoffs we chose mkdocs for this site management.</p>"},{"location":"how-we-built-this-site/#github-and-github-pages","title":"GitHub and GitHub Pages","text":"<p>GitHub is a logical choice to store our  site source code and documentation.  GitHub also has a Custom GitHub Action that does auto-deployment if any files on the site change. We don't currently have this action enabled, but other teams can use this feature if they don't have the ability to do a local build with mkdocs.</p> <p>GitHub also has Issues,  Projects and releases that we can use to manage our bugs and tasks.</p> <p>The best practice for low-cost websites that have public-only content is GitHub Pages. Mkdocs has a command (<code>mkdocs gh-deploy</code>) that does deployment directly to GitHub Pages.  This was an easy choice to make.</p>"},{"location":"how-we-built-this-site/#github-clone","title":"GitHub Clone","text":"<p>If you would like to clone this repository, here are the commands:</p> <pre><code>mkdir projects\ncd projects\ngit clone https://github.com/dmccreary/microsims\n</code></pre>"},{"location":"how-we-built-this-site/#after-changes","title":"After Changes","text":"<p>After you make local changes you must do the following:</p> <pre><code># add the new files to a a local commit transaction\ngit add FILES\n# Execute the a local commit with a message about what and why you are doing the commit\ngit commit -m \"comment\"\n# Update the central GitHub repository\ngit push\n</code></pre>"},{"location":"how-we-built-this-site/#material-theme","title":"Material Theme","text":"<p>We had several options when picking a mkdocs theme:</p> <ol> <li>Mkdocs default</li> <li>Readthedocs</li> <li>Third-Party Themes See Ranking</li> </ol> <p>The Material Theme had 16K stars.  No other theme had over a few hundred. This was also an easy design decision.</p> <p>One key criterial was the social Open Graph tags so that when our users post a link to a simulation, the image of the simulation is included in the link.  Since Material supported this, we used the Material theme. You can see our ChatGPT Design Decision Analysis if you want to check our decision process.</p>"},{"location":"how-we-built-this-site/#enable-edit-icon","title":"Enable Edit Icon","text":"<p>To enable the Edit icon on all pages, you must add the edit_uri and the content.action.edit under the theme features area.</p> <pre><code>edit_uri: edit/master/docs/\n</code></pre> <pre><code>    theme:\n        features:\n            - content.action.edit\n</code></pre>"},{"location":"how-we-built-this-site/#conda-vs-venv","title":"Conda vs VENV","text":"<p>There are two choices for virtual environments.  We can use the native Python venv or use Conda.  venv is simle but is only designed for pure Python projects.  We imagine that this site could use JavaScript and other langauges in the future, so we picked Conda. There is nothing on this microsite that prevents you from using one or the other.  See the ChatGPT Analysis Here.</p> <p>Here is the conda script that we ran to create a new mkdocs environment that also supports the material social imaging libraries.</p> <pre><code>conda deactivate\nconda create -n mkdocs python=3\nconda activate mkdocs\npip install mkdocs \"mkdocs-material[imaging]\"\n</code></pre>"},{"location":"how-we-built-this-site/#mkdocs-commands","title":"Mkdocs Commands","text":"<p>There are three simple mkdoc commands we use.</p>"},{"location":"how-we-built-this-site/#local-build","title":"Local Build","text":"<pre><code>mkdocs build\n</code></pre> <p>This builds your website in a folder called <code>site</code>.  Use this to test that the mkdocs.yml site is working and does not have any errors.</p>"},{"location":"how-we-built-this-site/#run-a-local-server","title":"Run a Local Server","text":"<pre><code>mkdocs serve\n</code></pre> <p>This runs a server on <code>http://localhost:8000</code>. Use this to test the display formatting locally before you push your code up to the GitHub repo.</p> <pre><code>mkdoc gh-deploy\n</code></pre> <p>This pushes everything up to the GitHub Pages site. Note that it does not commit your code to GitHub.</p>"},{"location":"how-we-built-this-site/#mkdocs-material-social-tags","title":"Mkdocs Material Social Tags","text":"<p>We are using the Material Social tags.  This is a work in progress!</p> <p>Here is what we have learned.</p> <ol> <li>There are extensive image processing libraries that can't be installed with just pip.  You will need to run a tool like brew on the Mac to get the libraries installed.</li> <li>Even after <code>brew</code> installs the libraries, you have to get your environment to find the libraries.  The only way I could get that to work was to set up a local UNIX environment variable.</li> </ol> <p>Here is the brew command that I ran:</p> <pre><code>brew install cairo freetype libffi libjpeg libpng zlib\n</code></pre> <p>I then had to add the following to my ~/.zshrc file:</p> <pre><code>export DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n</code></pre> <p>Note that I am running on a Mac with Apple silicon.  This means that the image libraries that brew downloads must be specific to the Mac Arm instruction set.</p> <ul> <li>Cover images for blog post #4364</li> <li>Discussion on overriding the Social Card Image</li> </ul>"},{"location":"how-we-built-this-site/#image-generation-and-compression","title":"Image Generation and Compression","text":"<p>I have used ChatGPT to create most of my images.  However, they are too large for most websites.  To compress them down I used  https://tinypng.com/ which is a free tool  for compressing png images without significant loss of quality.  The files created with ChatGPT are typically around 1-2 MB.  After  using the TinyPNG site the size is typically around 200-300KB.</p>"},{"location":"ieee-paper-changes/","title":"IEEE Signal Processing Paper Changes","text":"<ol> <li>Update to reflect the shift from single-prompt LLMs to reasoning models that generate a plan before the return the result</li> <li>Update to reflect the movement from static single-pass use of LLMs to the use of agentic-powered IDE such as Cursor and Windsurfer</li> <li>Update to reflect the use of Agentic IDE that use rules to create precise simulations with consistent UIs.  Give a precise example of how new MicroSims now follow responsive design patterns so that window resize events change relevant user interface elements.</li> <li>Update text to reflect the ability of newer agentic frameworks to use LLMs to manage the context window (MemGPT and Letta open source framework)</li> <li>Update content to reflect the new ability to generate complex charts with interactive infographic hovers and click-through drills for regions of the infographic</li> <li>Include course creation workflow infographic</li> <li>Include a section on the ability to create high-quality graphic-novel story generation</li> <li>Include a revised lists of prompts to bring out the best in LLMs</li> <li>Include a new discussion of new strategies to use rules to generate better circuit layouts</li> <li>Include the development of better JavaScript libraries to do draw circuits</li> <li>Include a case study of how students in a senior design class were all able to generate intelligent textbooks in a 12-week semester.</li> </ol>"},{"location":"license/","title":"Creative Commons License","text":"<p>All content in this repository is governed by the following license agreement:</p>"},{"location":"license/#license-type","title":"License Type","text":"<p>Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0 DEED)</p>"},{"location":"license/#link-to-license-agreement","title":"Link to License Agreement","text":"<p>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en</p>"},{"location":"license/#your-rights","title":"Your Rights","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material</li> </ul> <p>The licensor cannot revoke these freedoms as long as you follow the license terms.</p>"},{"location":"license/#restrictions","title":"Restrictions","text":"<ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial \u2014 You may not use the material for commercial purposes.</li> <li>ShareAlike \u2014 If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.</li> <li>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</li> </ul> <p>Notices</p> <p>You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.</p> <p>No warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.</p> <p>This deed highlights only some of the key features and terms of the actual license. It is not a license and has no legal value. You should carefully review all of the terms and conditions of the actual license before using the licensed material.</p>"},{"location":"references/","title":"Site References","text":"<ol> <li>mkdocs - https://www.mkdocs.org/ - this is our tool for building the website.  It converts Markdown into HTML in the <code>site</code> directory.</li> <li>mkdocs material theme - https://squidfunk.github.io/mkdocs-material/ - this is the theme for our site.  The theme adds the user interface elements that give our site the look and feel.  It also has the features such as social cards.</li> <li>GitHub Pages - https://pages.github.com/ - this is the free tool for hosting public websites created by mkdocs</li> <li>Markdown - https://www.mkdocs.org/user-guide/writing-your-docs/#writing-with-markdown - this is the format we use for text.  It allows us to have headers, lists, tables, links and images without learning HTML.</li> <li>Deploy Mkdocs GitHub Action - https://github.com/marketplace/actions/deploy-mkdocs - this is the tool we use to automatically build our site after edits are checked in with Git.</li> <li>Git Book - https://git-scm.com/book/en/v2 - a useful book on Git.  Just read the first two chapters to learn how to check in new code.</li> <li>Conda - https://conda.io/ - this is a command line tool that keeps our Python libraries organized for each project.</li> <li>VS Code - https://code.visualstudio.com/ - this is the integrated development environment we use to mange the files on our website.</li> <li>Markdown Paste - https://marketplace.visualstudio.com/items?itemName=telesoho.vscode-markdown-paste-image - this is the VS code extension we use to make sure we keep the markdown format generated by ChatGPT.</li> </ol>"},{"location":"chapters/","title":"Signal Processing Table of Contents","text":""},{"location":"chapters/#chapter-1-introduction-to-signal-processing","title":"Chapter 1: Introduction to Signal Processing","text":"<p>This chapter provides an overview of signal processing, its importance in modern technology, and its various applications across different fields.</p> <p>Chapter 1</p>"},{"location":"chapters/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/#what-is-signal-processing","title":"What is Signal Processing?","text":"<ul> <li>Definition of Signals and Systems: Understanding the basic concepts of signals (both continuous and discrete) and systems.</li> <li>Historical Background: Evolution of signal processing from analog to digital.</li> </ul>"},{"location":"chapters/#importance-of-signal-processing","title":"Importance of Signal Processing","text":"<ul> <li>Applications in Daily Life: Communication systems, multimedia, healthcare, etc.</li> <li>Role in Modern Technology: Internet of Things (IoT), autonomous vehicles, and more.</li> </ul>"},{"location":"chapters/#overview-of-the-course","title":"Overview of the Course","text":"<ul> <li>Course Objectives: What students will learn and achieve.</li> <li>Structure and Prerequisites: How the course is organized and foundational knowledge required.</li> </ul>"},{"location":"chapters/#chapter-2-mathematical-foundations","title":"Chapter 2: Mathematical Foundations","text":"<p>Covers the essential mathematical tools required for signal processing, including linear algebra, complex numbers, and probability theory.</p>"},{"location":"chapters/#chapter-sections_1","title":"Chapter Sections","text":""},{"location":"chapters/#linear-algebra-review","title":"Linear Algebra Review","text":"<ul> <li>Vectors and Matrices: Operations, properties, and applications.</li> <li>Eigenvalues and Eigenvectors: Their role in system analysis.</li> </ul>"},{"location":"chapters/#complex-numbers-and-functions","title":"Complex Numbers and Functions","text":"<ul> <li>Complex Arithmetic: Addition, multiplication, and representation.</li> <li>Phasors and Exponentials: Application in signal representation.</li> </ul>"},{"location":"chapters/#probability-and-statistics","title":"Probability and Statistics","text":"<ul> <li>Random Variables: Definitions and properties.</li> <li>Statistical Measures: Mean, variance, and correlations.</li> </ul>"},{"location":"chapters/#chapter-3-continuous-time-signals-and-systems","title":"Chapter 3: Continuous-Time Signals and Systems","text":"<p>--</p> <p>Introduces continuous-time signals and systems, including their classifications and properties.</p>"},{"location":"chapters/#chapter-sections_2","title":"Chapter Sections","text":""},{"location":"chapters/#signal-classification","title":"Signal Classification","text":"<ul> <li>Deterministic vs. Random Signals</li> <li>Periodic vs. Aperiodic Signals</li> </ul>"},{"location":"chapters/#system-properties","title":"System Properties","text":"<ul> <li>Linearity and Time-Invariance</li> <li>Causality and Stability</li> </ul>"},{"location":"chapters/#convolution-in-continuous-time","title":"Convolution in Continuous Time","text":"<ul> <li>Impulse Response</li> <li>System Output Calculation</li> </ul>"},{"location":"chapters/#chapter-4-discrete-time-signals-and-systems","title":"Chapter 4: Discrete-Time Signals and Systems","text":"<p>Focuses on discrete-time signals, systems, and the mathematical tools used to analyze them.</p>"},{"location":"chapters/#chapter-sections_3","title":"Chapter Sections","text":""},{"location":"chapters/#sampling-and-quantization","title":"Sampling and Quantization","text":"<ul> <li>Nyquist-Shannon Sampling Theorem</li> <li>Aliasing Effects</li> </ul>"},{"location":"chapters/#discrete-time-convolution","title":"Discrete-Time Convolution","text":"<ul> <li>Impulse Response in Discrete Systems</li> <li>Difference Equations</li> </ul>"},{"location":"chapters/#z-transform","title":"Z-Transform","text":"<ul> <li>Definition and Properties</li> <li>Region of Convergence</li> </ul>"},{"location":"chapters/#chapter-5-fourier-analysis","title":"Chapter 5: Fourier Analysis","text":"<p>Explores Fourier series and transforms for both continuous and discrete signals.</p>"},{"location":"chapters/#chapter-sections_4","title":"Chapter Sections","text":""},{"location":"chapters/#fourier-series","title":"Fourier Series","text":"<ul> <li>Representation of Periodic Signals</li> <li>Convergence Conditions</li> </ul>"},{"location":"chapters/#continuous-time-fourier-transform-ctft","title":"Continuous-Time Fourier Transform (CTFT)","text":"<ul> <li>Spectrum Analysis</li> <li>Properties of CTFT</li> </ul>"},{"location":"chapters/#discrete-time-fourier-transform-dtft","title":"Discrete-Time Fourier Transform (DTFT)","text":"<ul> <li>Frequency Representation of Discrete Signals</li> <li>Properties and Applications</li> </ul>"},{"location":"chapters/#chapter-6-discrete-fourier-transform-dft-and-fast-fourier-transform-fft","title":"Chapter 6: Discrete Fourier Transform (DFT) and Fast Fourier Transform (FFT)","text":"<p>Delves into the DFT and FFT algorithms used for efficient computation of Fourier transforms.</p>"},{"location":"chapters/#chapter-sections_5","title":"Chapter Sections","text":""},{"location":"chapters/#discrete-fourier-transform","title":"Discrete Fourier Transform","text":"<ul> <li>Definition and Computation</li> <li>Circular Convolution</li> </ul>"},{"location":"chapters/#fast-fourier-transform-algorithms","title":"Fast Fourier Transform Algorithms","text":"<ul> <li>Radix-2 FFT</li> <li>Computational Complexity</li> </ul>"},{"location":"chapters/#applications-of-dft-and-fft","title":"Applications of DFT and FFT","text":"<ul> <li>Signal Filtering</li> <li>Spectral Analysis</li> </ul>"},{"location":"chapters/#chapter-7-the-z-transform-and-its-applications","title":"Chapter 7: The Z-Transform and Its Applications","text":"<p>Introduces the Z-transform as a tool for analyzing discrete-time systems.</p>"},{"location":"chapters/#chapter-sections_6","title":"Chapter Sections","text":""},{"location":"chapters/#z-transform-basics","title":"Z-Transform Basics","text":"<ul> <li>Definition and Inverse Z-Transform</li> <li>Properties and Theorems</li> </ul>"},{"location":"chapters/#pole-zero-analysis","title":"Pole-Zero Analysis","text":"<ul> <li>Stability and Causality</li> <li>Frequency Response from Poles and Zeros</li> </ul>"},{"location":"chapters/#application-in-system-analysis","title":"Application in System Analysis","text":"<ul> <li>Transfer Function Representation</li> <li>System Design Techniques</li> </ul>"},{"location":"chapters/#chapter-8-filter-design-and-implementation","title":"Chapter 8: Filter Design and Implementation","text":"<p>Covers the principles and methods for designing digital filters.</p>"},{"location":"chapters/#chapter-sections_7","title":"Chapter Sections","text":""},{"location":"chapters/#types-of-filters","title":"Types of Filters","text":"<ul> <li>Low-Pass, High-Pass, Band-Pass, Band-Stop</li> <li>FIR vs. IIR Filters</li> </ul>"},{"location":"chapters/#fir-filter-design","title":"FIR Filter Design","text":"<ul> <li>Window Method</li> <li>Frequency Sampling Method</li> </ul>"},{"location":"chapters/#iir-filter-design","title":"IIR Filter Design","text":"<ul> <li>Analog Filter Approximation</li> <li>Bilinear Transformation</li> </ul>"},{"location":"chapters/#implementation-considerations","title":"Implementation Considerations","text":"<ul> <li>Finite Word Length Effects</li> <li>Real-Time Processing Constraints</li> </ul>"},{"location":"chapters/#chapter-9-adaptive-signal-processing","title":"Chapter 9: Adaptive Signal Processing","text":"<p>--</p> <p>Discusses adaptive filtering techniques and their applications in dynamic environments.</p>"},{"location":"chapters/#chapter-sections_8","title":"Chapter Sections","text":""},{"location":"chapters/#introduction-to-adaptive-filters","title":"Introduction to Adaptive Filters","text":"<ul> <li>Need for Adaptation</li> <li>Adaptive Filter Structures</li> </ul>"},{"location":"chapters/#adaptive-algorithms","title":"Adaptive Algorithms","text":"<ul> <li>Least Mean Squares (LMS)</li> <li>Recursive Least Squares (RLS)</li> </ul>"},{"location":"chapters/#applications","title":"Applications","text":"<ul> <li>Noise Cancellation</li> <li>System Identification</li> </ul>"},{"location":"chapters/#chapter-10-stochastic-processes-and-random-signals","title":"Chapter 10: Stochastic Processes and Random Signals","text":"<p>Introduces the statistical treatment of signals and systems.</p>"},{"location":"chapters/#chapter-sections_9","title":"Chapter Sections","text":""},{"location":"chapters/#random-processes","title":"Random Processes","text":"<ul> <li>Classification of Random Processes</li> <li>Stationarity and Ergodicity</li> </ul>"},{"location":"chapters/#statistical-averages","title":"Statistical Averages","text":"<ul> <li>Mean, Autocorrelation, and Autocovariance</li> <li>Cross-Correlation Functions</li> </ul>"},{"location":"chapters/#response-of-linear-systems-to-random-inputs","title":"Response of Linear Systems to Random Inputs","text":"<ul> <li>Output Mean and Variance</li> <li>Spectral Characteristics</li> </ul>"},{"location":"chapters/#chapter-11-spectral-estimation","title":"Chapter 11: Spectral Estimation","text":"<p>Explores techniques for estimating the spectral content of signals.</p>"},{"location":"chapters/#chapter-sections_10","title":"Chapter Sections","text":""},{"location":"chapters/#non-parametric-methods","title":"Non-Parametric Methods","text":"<ul> <li>Periodogram</li> <li>Modified Periodogram</li> </ul>"},{"location":"chapters/#parametric-methods","title":"Parametric Methods","text":"<ul> <li>Autoregressive (AR) Models</li> <li>Model Order Selection</li> </ul>"},{"location":"chapters/#applications_1","title":"Applications","text":"<ul> <li>Power Spectrum Analysis</li> <li>Signal Detection</li> </ul>"},{"location":"chapters/#chapter-12-time-frequency-analysis-and-wavelets","title":"Chapter 12: Time-Frequency Analysis and Wavelets","text":"<p>Introduces methods for analyzing signals in both time and frequency domains simultaneously.</p>"},{"location":"chapters/#chapter-sections_11","title":"Chapter Sections","text":""},{"location":"chapters/#limitations-of-fourier-transform","title":"Limitations of Fourier Transform","text":"<ul> <li>Time-Frequency Trade-Off</li> <li>Non-Stationary Signals</li> </ul>"},{"location":"chapters/#short-time-fourier-transform-stft","title":"Short-Time Fourier Transform (STFT)","text":"<ul> <li>Windowing Concepts</li> <li>Spectrogram Interpretation</li> </ul>"},{"location":"chapters/#wavelet-transform","title":"Wavelet Transform","text":"<ul> <li>Continuous and Discrete Wavelets</li> <li>Multi-Resolution Analysis</li> </ul>"},{"location":"chapters/#applications_2","title":"Applications","text":"<ul> <li>Signal Compression</li> <li>Feature Extraction</li> </ul>"},{"location":"chapters/#chapter-13-multirate-signal-processing","title":"Chapter 13: Multirate Signal Processing","text":"<p>Discusses processing techniques involving multiple sampling rates.</p>"},{"location":"chapters/#chapter-sections_12","title":"Chapter Sections","text":""},{"location":"chapters/#fundamentals-of-multirate-systems","title":"Fundamentals of Multirate Systems","text":"<ul> <li>Upsampling and Downsampling</li> <li>Decimators and Interpolators</li> </ul>"},{"location":"chapters/#polyphase-decomposition","title":"Polyphase Decomposition","text":"<ul> <li>Efficient Filter Implementations</li> <li>Applications in DSP</li> </ul>"},{"location":"chapters/#filter-banks","title":"Filter Banks","text":"<ul> <li>Analysis and Synthesis Banks</li> <li>Applications in Subband Coding</li> </ul>"},{"location":"chapters/#chapter-14-signal-compression-and-coding","title":"Chapter 14: Signal Compression and Coding","text":"<p>Covers methods for reducing the data rate of signals while preserving essential information.</p>"},{"location":"chapters/#chapter-sections_13","title":"Chapter Sections","text":""},{"location":"chapters/#lossless-compression-techniques","title":"Lossless Compression Techniques","text":"<ul> <li>Entropy Coding</li> <li>Huffman and Arithmetic Coding</li> </ul>"},{"location":"chapters/#lossy-compression-techniques","title":"Lossy Compression Techniques","text":"<ul> <li>Transform Coding</li> <li>Quantization Strategies</li> </ul>"},{"location":"chapters/#standards-and-applications","title":"Standards and Applications","text":"<ul> <li>JPEG, MPEG</li> <li>Audio and Video Streaming</li> </ul>"},{"location":"chapters/#chapter-15-machine-learning-in-signal-processing","title":"Chapter 15: Machine Learning in Signal Processing","text":"<p>Integrates machine learning algorithms into signal processing tasks.</p>"},{"location":"chapters/#chapter-sections_14","title":"Chapter Sections","text":""},{"location":"chapters/#overview-of-machine-learning","title":"Overview of Machine Learning","text":"<ul> <li>Basic Concepts</li> <li>Supervised vs. Unsupervised Learning</li> </ul>"},{"location":"chapters/#feature-engineering","title":"Feature Engineering","text":"<ul> <li>Feature Extraction Methods</li> <li>Dimensionality Reduction</li> </ul>"},{"location":"chapters/#classification-and-regression","title":"Classification and Regression","text":"<ul> <li>Support Vector Machines</li> <li>Neural Networks</li> </ul>"},{"location":"chapters/#applications_3","title":"Applications","text":"<ul> <li>Pattern Recognition</li> <li>Anomaly Detection</li> </ul>"},{"location":"chapters/#chapter-16-deep-learning-and-neural-networks","title":"Chapter 16: Deep Learning and Neural Networks","text":"<p>-</p> <p>Focuses on advanced neural network architectures and their applications in signal processing.</p>"},{"location":"chapters/#chapter-sections_15","title":"Chapter Sections","text":""},{"location":"chapters/#deep-learning-basics","title":"Deep Learning Basics","text":"<ul> <li>Introduction to Deep Neural Networks</li> <li>Training Deep Networks</li> </ul>"},{"location":"chapters/#convolutional-neural-networks-cnns","title":"Convolutional Neural Networks (CNNs)","text":"<ul> <li>Architecture Details</li> <li>Application in Image Processing</li> </ul>"},{"location":"chapters/#recurrent-neural-networks-rnns","title":"Recurrent Neural Networks (RNNs)","text":"<ul> <li>Sequence Modeling</li> <li>Applications in Speech Recognition</li> </ul>"},{"location":"chapters/#generative-models","title":"Generative Models","text":"<ul> <li>Autoencoders</li> <li>Generative Adversarial Networks (GANs)</li> </ul>"},{"location":"chapters/#chapter-17-applications-in-communications-and-radar","title":"Chapter 17: Applications in Communications and Radar","text":"<p>Explores signal processing techniques specific to communication systems and radar technology.</p>"},{"location":"chapters/#chapter-sections_16","title":"Chapter Sections","text":""},{"location":"chapters/#digital-communication-systems","title":"Digital Communication Systems","text":"<ul> <li>Modulation and Demodulation Techniques</li> <li>Channel Equalization</li> </ul>"},{"location":"chapters/#signal-detection-in-noise","title":"Signal Detection in Noise","text":"<ul> <li>Detection Theory</li> <li>Matched Filters</li> </ul>"},{"location":"chapters/#radar-signal-processing","title":"Radar Signal Processing","text":"<ul> <li>Pulse Compression</li> <li>Doppler Processing</li> </ul>"},{"location":"chapters/#chapter-18-signal-processing-for-multimedia","title":"Chapter 18: Signal Processing for Multimedia","text":"<p>Discusses the processing of audio, image, and video signals for multimedia applications.</p>"},{"location":"chapters/#chapter-sections_17","title":"Chapter Sections","text":""},{"location":"chapters/#audio-signal-processing","title":"Audio Signal Processing","text":"<ul> <li>Speech Synthesis and Recognition</li> <li>Audio Effects and Enhancements</li> </ul>"},{"location":"chapters/#image-processing","title":"Image Processing","text":"<ul> <li>Filtering and Edge Detection</li> <li>Segmentation and Morphology</li> </ul>"},{"location":"chapters/#video-processing","title":"Video Processing","text":"<ul> <li>Motion Estimation</li> <li>Video Stabilization</li> </ul>"},{"location":"chapters/#virtual-and-augmented-reality","title":"Virtual and Augmented Reality","text":"<ul> <li>Signal Processing Challenges</li> <li>Immersive Technologies</li> </ul>"},{"location":"chapters/#chapter-19-emerging-topics-in-signal-processing","title":"Chapter 19: Emerging Topics in Signal Processing","text":"<p>Introduces cutting-edge areas in signal processing research and development.</p>"},{"location":"chapters/#chapter-sections_18","title":"Chapter Sections","text":""},{"location":"chapters/#compressed-sensing","title":"Compressed Sensing","text":"<ul> <li>Theory and Principles</li> <li>Recovery Algorithms</li> </ul>"},{"location":"chapters/#cognitive-signal-processing","title":"Cognitive Signal Processing","text":"<ul> <li>Adaptive Learning Systems</li> <li>Applications in Smart Devices</li> </ul>"},{"location":"chapters/#quantum-signal-processing","title":"Quantum Signal Processing","text":"<ul> <li>Quantum Computing Basics</li> <li>Potential Signal Processing Applications</li> </ul>"},{"location":"chapters/#chapter-20-integration-of-ai-and-education-in-signal-processing","title":"Chapter 20: Integration of AI and Education in Signal Processing","text":"<p>Explores the role of AI in revolutionizing signal processing education, including curriculum development and innovative teaching methods.</p>"},{"location":"chapters/#chapter-sections_19","title":"Chapter Sections","text":""},{"location":"chapters/#ai-in-curriculum-development","title":"AI in Curriculum Development","text":"<ul> <li>Incorporating AI Modules</li> <li>Interdisciplinary Approaches</li> </ul>"},{"location":"chapters/#gamification-in-education","title":"Gamification in Education","text":"<ul> <li>Educational Games for Signal Processing</li> <li>Engagement and Motivation Strategies</li> </ul>"},{"location":"chapters/#large-language-models-llms","title":"Large Language Models (LLMs)","text":"<ul> <li>Using LLMs as Educational Tools</li> <li>Automated Tutoring Systems</li> </ul>"},{"location":"chapters/#future-directions","title":"Future Directions","text":"<ul> <li>Lifelong Learning Paradigms</li> <li>Ethical Considerations in AI Education</li> </ul> <p>This structured outline provides a comprehensive college-level course in signal processing, integrating traditional topics with modern advancements such as AI and machine learning, as reflected in the IEEE Signal Processing Magazine. Each chapter builds upon the previous ones, ensuring a cohesive learning journey.</p>"},{"location":"chapters/rendering-circuit-diagrams-in-mkdocs/","title":"Rendering Circuit Diagrams","text":"<p>I would like to put circuit diagrams in my class on signal processing.  I am currently using mkdocs material with the MathJax extension to render LaTeX equations.  I love the way I can insert formulas anywhere in a large chapter of my book written in markdown and they render perfectly on the HTML page.  Using mkdocs with the \"serve\" option allows me to quickly preview in seconds after I make a change.</p> <p>Now here is the problem.  When I attempt to add CircuiTikz references in my chapter I can not get the circuit diagrams to render.  Can you propose a solution that would allow CircuiTikz diagrams to render in my existing mkdocs structure?  Can this be done using existing JavaScript libraries such as MathJax or do I need to build a custom extension in Python?</p>"},{"location":"chapters/rendering-circuit-diagrams-in-mkdocs/#response","title":"Response","text":""},{"location":"chapters/rendering-circuit-diagrams-in-mkdocs/#chatgpt-said-o3","title":"ChatGPT Said \u2014 o3","text":""},{"location":"chapters/rendering-circuit-diagrams-in-mkdocs/#why-circuitikz-doesnt-show-up-now","title":"Why CircuiTikz doesn\u2019t show up now","text":"<ul> <li>MathJax only parses math. It ignores <code>\\begin{tikzpicture}</code> blocks entirely, so the raw CircuiTikz code is left in the HTML and the browser never sees a graphic to render. (Stack Overflow)</li> </ul>"},{"location":"chapters/rendering-circuit-diagrams-in-mkdocs/#two-practical-ways-to-make-circuitikz-work-inside-mkdocs-material","title":"Two practical ways to make CircuiTikz work inside MkDocs Material","text":"Approach What you add to <code>mkdocs.yml</code> How you write a diagram in Markdown Pros Cons 1 \u00b7 Client-side compile with TikZJax <code>yaml\\nextra_css:\\n  - https://tikzjax.com/v1/fonts.css\\nextra_javascript:\\n  - https://tikzjax.com/v1/tikzjax.js\\n</code> <code>markdown\\n&lt;script type=\\\"text/tikz\\\"&gt;\\n\\\\usepackage{circuitikz}\\n\\\\begin{circuitikz}\\n\\\\draw (0,0) to[R,l=$1\\\\,\\\\mathrm{k}\\\\Omega$] (3,0) to[C,l=$10\\\\,\\\\mu\\\\text{F}$] (6,0)\\n      (6,0) -- (6,-2) -- (0,-2) -- (0,0);\\n\\\\end{circuitikz}\\n&lt;/script&gt;\\n</code> Nothing to install; live preview still instant with <code>mkdocs serve</code>; diagrams stay as clean SVG First render happens in the reader\u2019s browser \u2192 page load gets slower if you embed dozens of large schematics; needs JS enabled; relies on external CDN (can self-host) (tikzjax.com, GitHub) 2 \u00b7 Pre-compile to SVG during the MkDocs build <code>yaml\\nplugins:\\n  - search\\n  - tikzfig  # custom plugin shown below\\n</code> <code>markdown\\n</code>circuitikz\\n\\draw (0,0) to[sV,l=$V_s$] (0,3) -- (3,3)\\n            to[R,l=$R$]      (3,0) -- (0,0);\\n``` Pages load instantly (SVG already generated); works with JS disabled; assets are cached, so rebuilds after edits are fast You install a TeX engine (<code>tectonic</code>) + <code>dvisvgm</code>; need to drop the tiny plugin file into your repo Minimal custom plugin (<code>plugins/tikzfig.py</code>) for option 2 <pre><code># pip install tectonic\n# pip install mkdocs\nimport hashlib, os, re, subprocess, tempfile, textwrap\nfrom mkdocs.plugins import BasePlugin\n\nclass TikzFigPlugin(BasePlugin):\n    BLOCK = re.compile(r'```circuitikz(.*?)```', re.S)\n\n    def on_page_markdown(self, md, page, cfg, files):\n        def _repl(m):\n            body = m.group(1).strip()\n            digest = hashlib.md5(body.encode()).hexdigest()\n            rel_svg = f'assets/tikz/{digest}.svg'\n            abs_svg = os.path.join(cfg[\"site_dir\"], rel_svg)\n            if not os.path.exists(abs_svg):\n                tex = textwrap.dedent(f\"\"\"\n                \\\\documentclass[border=1pt]{{standalone}}\n                \\\\usepackage{{circuitikz}}\n                \\\\begin{document}\n                \\\\begin{{circuitikz}}[american]\n                {body}\n                \\\\end{{circuitikz}}\n                \\\\end{document}\n                \"\"\")\n                with tempfile.TemporaryDirectory() as d:\n                    tex_file = os.path.join(d, \"fig.tex\")\n                    open(tex_file, \"w\").write(tex)\n                    subprocess.run([\"tectonic\", \"-Z\", \"shell-escape\", tex_file], cwd=d, check=True)\n                    subprocess.run([\"dvisvgm\", \"--no-fonts\", \"fig.dvi\", \"-o\", abs_svg], cwd=d, check=True)\n            return f'![]({{ static }}{rel_svg})'\n        return self.BLOCK.sub(_repl, md)\n</code></pre>"},{"location":"chapters/rendering-circuit-diagrams-in-mkdocs/#which-one-should-you-choose","title":"Which one should you choose?","text":"<ul> <li> <p>Few diagrams per page or you value zero-setup &amp; hot-reload?   Use TikZJax (Option 1). Add the two CDN lines, wrap your circuits in <code>&lt;script type=\"text/tikz\"&gt;</code>, and you\u2019re done.</p> </li> <li> <p>Lots of schematics, need fast page loads, or must work for users with JS blocked?   Spend 20 minutes wiring up Option 2; after that your workflow remains \u201cedit \u2192 <code>mkdocs serve</code> \u2192 refresh\u201d just like with MathJax.</p> </li> </ul>"},{"location":"chapters/rendering-circuit-diagrams-in-mkdocs/#tips-for-both-workflows","title":"Tips for both workflows","text":"<ul> <li>Keep MathJax for equations \u2013 it co-exists happily with TikZJax or with pre-compiled SVGs.</li> <li>Package once, reuse everywhere \u2013 put common <code>\\usepackage{circuitikz}</code> and <code>\\begin{circuitikz}[american]</code> boilerplate in a snippet or markdown include so you don\u2019t repeat yourself.</li> <li>SVG size \u2013 TikZJax auto-sizes; for pre-compiled SVG you control the border with the <code>standalone</code> class\u2019 <code>border</code> option.</li> <li>Offline / air-gapped deliveries \u2013 if students will read the book without internet, self-host the TikZJax JS (Option 1) or pre-compile (Option 2).</li> </ul> <p>Either path lets you keep the rapid-iteration loop you love in MkDocs Material while gaining beautiful LaTeX-quality circuit diagrams right inside your chapters.</p>"},{"location":"chapters/toc/","title":"Signal Processing Table of Contents","text":""},{"location":"chapters/toc/#chapter-1-introduction-to-signal-processing","title":"Chapter 1: Introduction to Signal Processing","text":"<p>This chapter provides an overview of signal processing, its importance in modern technology, and its various applications across different fields.</p>"},{"location":"chapters/toc/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/toc/#what-is-signal-processing","title":"What is Signal Processing?","text":"<ul> <li>Definition of Signals and Systems: Understanding the basic concepts of signals (both continuous and discrete) and systems.</li> <li>Historical Background: Evolution of signal processing from analog to digital.</li> </ul>"},{"location":"chapters/toc/#importance-of-signal-processing","title":"Importance of Signal Processing","text":"<ul> <li>Applications in Daily Life: Communication systems, multimedia, healthcare, etc.</li> <li>Role in Modern Technology: Internet of Things (IoT), autonomous vehicles, and more.</li> </ul>"},{"location":"chapters/toc/#overview-of-the-course","title":"Overview of the Course","text":"<ul> <li>Course Objectives: What students will learn and achieve.</li> <li>Structure and Prerequisites: How the course is organized and foundational knowledge required.</li> </ul>"},{"location":"chapters/toc/#chapter-2-mathematical-foundations","title":"Chapter 2: Mathematical Foundations","text":"<p>Covers the essential mathematical tools required for signal processing, including linear algebra, complex numbers, and probability theory.</p>"},{"location":"chapters/toc/#chapter-sections_1","title":"Chapter Sections","text":""},{"location":"chapters/toc/#linear-algebra-review","title":"Linear Algebra Review","text":"<ul> <li>Vectors and Matrices: Operations, properties, and applications.</li> <li>Eigenvalues and Eigenvectors: Their role in system analysis.</li> </ul>"},{"location":"chapters/toc/#complex-numbers-and-functions","title":"Complex Numbers and Functions","text":"<ul> <li>Complex Arithmetic: Addition, multiplication, and representation.</li> <li>Phasors and Exponentials: Application in signal representation.</li> </ul>"},{"location":"chapters/toc/#probability-and-statistics","title":"Probability and Statistics","text":"<ul> <li>Random Variables: Definitions and properties.</li> <li>Statistical Measures: Mean, variance, and correlations.</li> </ul>"},{"location":"chapters/toc/#chapter-3-continuous-time-signals-and-systems","title":"Chapter 3: Continuous-Time Signals and Systems","text":"<p>Introduces continuous-time signals and systems, including their classifications and properties.</p>"},{"location":"chapters/toc/#chapter-sections_2","title":"Chapter Sections","text":""},{"location":"chapters/toc/#signal-classification","title":"Signal Classification","text":"<ul> <li>Deterministic vs. Random Signals</li> <li>Periodic vs. Aperiodic Signals</li> </ul>"},{"location":"chapters/toc/#system-properties","title":"System Properties","text":"<ul> <li>Linearity and Time-Invariance</li> <li>Causality and Stability</li> </ul>"},{"location":"chapters/toc/#convolution-in-continuous-time","title":"Convolution in Continuous Time","text":"<ul> <li>Impulse Response</li> <li>System Output Calculation</li> </ul>"},{"location":"chapters/toc/#chapter-4-discrete-time-signals-and-systems","title":"Chapter 4: Discrete-Time Signals and Systems","text":"<p>Focuses on discrete-time signals, systems, and the mathematical tools used to analyze them.</p>"},{"location":"chapters/toc/#chapter-sections_3","title":"Chapter Sections","text":""},{"location":"chapters/toc/#sampling-and-quantization","title":"Sampling and Quantization","text":"<ul> <li>Nyquist-Shannon Sampling Theorem</li> <li>Aliasing Effects</li> </ul>"},{"location":"chapters/toc/#discrete-time-convolution","title":"Discrete-Time Convolution","text":"<ul> <li>Impulse Response in Discrete Systems</li> <li>Difference Equations</li> </ul>"},{"location":"chapters/toc/#z-transform","title":"Z-Transform","text":"<ul> <li>Definition and Properties</li> <li>Region of Convergence</li> </ul>"},{"location":"chapters/toc/#chapter-5-fourier-analysis","title":"Chapter 5: Fourier Analysis","text":"<p>Explores Fourier series and transforms for both continuous and discrete signals.</p>"},{"location":"chapters/toc/#chapter-sections_4","title":"Chapter Sections","text":""},{"location":"chapters/toc/#fourier-series","title":"Fourier Series","text":"<ul> <li>Representation of Periodic Signals</li> <li>Convergence Conditions</li> </ul>"},{"location":"chapters/toc/#continuous-time-fourier-transform-ctft","title":"Continuous-Time Fourier Transform (CTFT)","text":"<ul> <li>Spectrum Analysis</li> <li>Properties of CTFT</li> </ul>"},{"location":"chapters/toc/#discrete-time-fourier-transform-dtft","title":"Discrete-Time Fourier Transform (DTFT)","text":"<ul> <li>Frequency Representation of Discrete Signals</li> <li>Properties and Applications</li> </ul>"},{"location":"chapters/toc/#chapter-6-discrete-fourier-transform-dft-and-fast-fourier-transform-fft","title":"Chapter 6: Discrete Fourier Transform (DFT) and Fast Fourier Transform (FFT)","text":"<p>Delves into the DFT and FFT algorithms used for efficient computation of Fourier transforms.</p>"},{"location":"chapters/toc/#chapter-sections_5","title":"Chapter Sections","text":""},{"location":"chapters/toc/#discrete-fourier-transform","title":"Discrete Fourier Transform","text":"<ul> <li>Definition and Computation</li> <li>Circular Convolution</li> </ul>"},{"location":"chapters/toc/#fast-fourier-transform-algorithms","title":"Fast Fourier Transform Algorithms","text":"<ul> <li>Radix-2 FFT</li> <li>Computational Complexity</li> </ul>"},{"location":"chapters/toc/#applications-of-dft-and-fft","title":"Applications of DFT and FFT","text":"<ul> <li>Signal Filtering</li> <li>Spectral Analysis</li> </ul>"},{"location":"chapters/toc/#chapter-7-the-z-transform-and-its-applications","title":"Chapter 7: The Z-Transform and Its Applications","text":"<p>Introduces the Z-transform as a tool for analyzing discrete-time systems.</p>"},{"location":"chapters/toc/#chapter-sections_6","title":"Chapter Sections","text":""},{"location":"chapters/toc/#z-transform-basics","title":"Z-Transform Basics","text":"<ul> <li>Definition and Inverse Z-Transform</li> <li>Properties and Theorems</li> </ul>"},{"location":"chapters/toc/#pole-zero-analysis","title":"Pole-Zero Analysis","text":"<ul> <li>Stability and Causality</li> <li>Frequency Response from Poles and Zeros</li> </ul>"},{"location":"chapters/toc/#application-in-system-analysis","title":"Application in System Analysis","text":"<ul> <li>Transfer Function Representation</li> <li>System Design Techniques</li> </ul>"},{"location":"chapters/toc/#chapter-8-filter-design-and-implementation","title":"Chapter 8: Filter Design and Implementation","text":"<p>Covers the principles and methods for designing digital filters.</p>"},{"location":"chapters/toc/#chapter-sections_7","title":"Chapter Sections","text":""},{"location":"chapters/toc/#types-of-filters","title":"Types of Filters","text":"<ul> <li>Low-Pass, High-Pass, Band-Pass, Band-Stop</li> <li>FIR vs. IIR Filters</li> </ul>"},{"location":"chapters/toc/#fir-filter-design","title":"FIR Filter Design","text":"<ul> <li>Window Method</li> <li>Frequency Sampling Method</li> </ul>"},{"location":"chapters/toc/#iir-filter-design","title":"IIR Filter Design","text":"<ul> <li>Analog Filter Approximation</li> <li>Bilinear Transformation</li> </ul>"},{"location":"chapters/toc/#implementation-considerations","title":"Implementation Considerations","text":"<ul> <li>Finite Word Length Effects</li> <li>Real-Time Processing Constraints</li> </ul>"},{"location":"chapters/toc/#chapter-9-adaptive-signal-processing","title":"Chapter 9: Adaptive Signal Processing","text":"<p>Discusses adaptive filtering techniques and their applications in dynamic environments.</p>"},{"location":"chapters/toc/#chapter-sections_8","title":"Chapter Sections","text":""},{"location":"chapters/toc/#introduction-to-adaptive-filters","title":"Introduction to Adaptive Filters","text":"<ul> <li>Need for Adaptation</li> <li>Adaptive Filter Structures</li> </ul>"},{"location":"chapters/toc/#adaptive-algorithms","title":"Adaptive Algorithms","text":"<ul> <li>Least Mean Squares (LMS)</li> <li>Recursive Least Squares (RLS)</li> </ul>"},{"location":"chapters/toc/#applications","title":"Applications","text":"<ul> <li>Noise Cancellation</li> <li>System Identification</li> </ul>"},{"location":"chapters/toc/#chapter-10-stochastic-processes-and-random-signals","title":"Chapter 10: Stochastic Processes and Random Signals","text":"<p>Introduces the statistical treatment of signals and systems.</p>"},{"location":"chapters/toc/#chapter-sections_9","title":"Chapter Sections","text":""},{"location":"chapters/toc/#random-processes","title":"Random Processes","text":"<ul> <li>Classification of Random Processes</li> <li>Stationarity and Ergodicity</li> </ul>"},{"location":"chapters/toc/#statistical-averages","title":"Statistical Averages","text":"<ul> <li>Mean, Autocorrelation, and Autocovariance</li> <li>Cross-Correlation Functions</li> </ul>"},{"location":"chapters/toc/#response-of-linear-systems-to-random-inputs","title":"Response of Linear Systems to Random Inputs","text":"<ul> <li>Output Mean and Variance</li> <li>Spectral Characteristics</li> </ul>"},{"location":"chapters/toc/#chapter-11-spectral-estimation","title":"Chapter 11: Spectral Estimation","text":"<p>Explores techniques for estimating the spectral content of signals.</p>"},{"location":"chapters/toc/#chapter-sections_10","title":"Chapter Sections","text":""},{"location":"chapters/toc/#non-parametric-methods","title":"Non-Parametric Methods","text":"<ul> <li>Periodogram</li> <li>Modified Periodogram</li> </ul>"},{"location":"chapters/toc/#parametric-methods","title":"Parametric Methods","text":"<ul> <li>Autoregressive (AR) Models</li> <li>Model Order Selection</li> </ul>"},{"location":"chapters/toc/#applications_1","title":"Applications","text":"<ul> <li>Power Spectrum Analysis</li> <li>Signal Detection</li> </ul>"},{"location":"chapters/toc/#chapter-12-time-frequency-analysis-and-wavelets","title":"Chapter 12: Time-Frequency Analysis and Wavelets","text":"<p>Introduces methods for analyzing signals in both time and frequency domains simultaneously.</p>"},{"location":"chapters/toc/#chapter-sections_11","title":"Chapter Sections","text":""},{"location":"chapters/toc/#limitations-of-fourier-transform","title":"Limitations of Fourier Transform","text":"<ul> <li>Time-Frequency Trade-Off</li> <li>Non-Stationary Signals</li> </ul>"},{"location":"chapters/toc/#short-time-fourier-transform-stft","title":"Short-Time Fourier Transform (STFT)","text":"<ul> <li>Windowing Concepts</li> <li>Spectrogram Interpretation</li> </ul>"},{"location":"chapters/toc/#wavelet-transform","title":"Wavelet Transform","text":"<ul> <li>Continuous and Discrete Wavelets</li> <li>Multi-Resolution Analysis</li> </ul>"},{"location":"chapters/toc/#applications_2","title":"Applications","text":"<ul> <li>Signal Compression</li> <li>Feature Extraction</li> </ul>"},{"location":"chapters/toc/#chapter-13-multirate-signal-processing","title":"Chapter 13: Multirate Signal Processing","text":"<p>Discusses processing techniques involving multiple sampling rates.</p>"},{"location":"chapters/toc/#chapter-sections_12","title":"Chapter Sections","text":""},{"location":"chapters/toc/#fundamentals-of-multirate-systems","title":"Fundamentals of Multirate Systems","text":"<ul> <li>Upsampling and Downsampling</li> <li>Decimators and Interpolators</li> </ul>"},{"location":"chapters/toc/#polyphase-decomposition","title":"Polyphase Decomposition","text":"<ul> <li>Efficient Filter Implementations</li> <li>Applications in DSP</li> </ul>"},{"location":"chapters/toc/#filter-banks","title":"Filter Banks","text":"<ul> <li>Analysis and Synthesis Banks</li> <li>Applications in Subband Coding</li> </ul>"},{"location":"chapters/toc/#chapter-14-signal-compression-and-coding","title":"Chapter 14: Signal Compression and Coding","text":"<p>Covers methods for reducing the data rate of signals while preserving essential information.</p>"},{"location":"chapters/toc/#chapter-sections_13","title":"Chapter Sections","text":""},{"location":"chapters/toc/#lossless-compression-techniques","title":"Lossless Compression Techniques","text":"<ul> <li>Entropy Coding</li> <li>Huffman and Arithmetic Coding</li> </ul>"},{"location":"chapters/toc/#lossy-compression-techniques","title":"Lossy Compression Techniques","text":"<ul> <li>Transform Coding</li> <li>Quantization Strategies</li> </ul>"},{"location":"chapters/toc/#standards-and-applications","title":"Standards and Applications","text":"<ul> <li>JPEG, MPEG</li> <li>Audio and Video Streaming</li> </ul>"},{"location":"chapters/toc/#chapter-15-machine-learning-in-signal-processing","title":"Chapter 15: Machine Learning in Signal Processing","text":"<p>Integrates machine learning algorithms into signal processing tasks.</p>"},{"location":"chapters/toc/#chapter-sections_14","title":"Chapter Sections","text":""},{"location":"chapters/toc/#overview-of-machine-learning","title":"Overview of Machine Learning","text":"<ul> <li>Basic Concepts</li> <li>Supervised vs. Unsupervised Learning</li> </ul>"},{"location":"chapters/toc/#feature-engineering","title":"Feature Engineering","text":"<ul> <li>Feature Extraction Methods</li> <li>Dimensionality Reduction</li> </ul>"},{"location":"chapters/toc/#classification-and-regression","title":"Classification and Regression","text":"<ul> <li>Support Vector Machines</li> <li>Neural Networks</li> </ul>"},{"location":"chapters/toc/#applications_3","title":"Applications","text":"<ul> <li>Pattern Recognition</li> <li>Anomaly Detection</li> </ul>"},{"location":"chapters/toc/#chapter-16-deep-learning-and-neural-networks","title":"Chapter 16: Deep Learning and Neural Networks","text":"<p>Focuses on advanced neural network architectures and their applications in signal processing.</p>"},{"location":"chapters/toc/#chapter-sections_15","title":"Chapter Sections","text":""},{"location":"chapters/toc/#deep-learning-basics","title":"Deep Learning Basics","text":"<ul> <li>Introduction to Deep Neural Networks</li> <li>Training Deep Networks</li> </ul>"},{"location":"chapters/toc/#convolutional-neural-networks-cnns","title":"Convolutional Neural Networks (CNNs)","text":"<ul> <li>Architecture Details</li> <li>Application in Image Processing</li> </ul>"},{"location":"chapters/toc/#recurrent-neural-networks-rnns","title":"Recurrent Neural Networks (RNNs)","text":"<ul> <li>Sequence Modeling</li> <li>Applications in Speech Recognition</li> </ul>"},{"location":"chapters/toc/#generative-models","title":"Generative Models","text":"<ul> <li>Autoencoders</li> <li>Generative Adversarial Networks (GANs)</li> </ul>"},{"location":"chapters/toc/#chapter-17-applications-in-communications-and-radar","title":"Chapter 17: Applications in Communications and Radar","text":"<p>Explores signal processing techniques specific to communication systems and radar technology.</p>"},{"location":"chapters/toc/#chapter-sections_16","title":"Chapter Sections","text":""},{"location":"chapters/toc/#digital-communication-systems","title":"Digital Communication Systems","text":"<ul> <li>Modulation and Demodulation Techniques</li> <li>Channel Equalization</li> </ul>"},{"location":"chapters/toc/#signal-detection-in-noise","title":"Signal Detection in Noise","text":"<ul> <li>Detection Theory</li> <li>Matched Filters</li> </ul>"},{"location":"chapters/toc/#radar-signal-processing","title":"Radar Signal Processing","text":"<ul> <li>Pulse Compression</li> <li>Doppler Processing</li> </ul>"},{"location":"chapters/toc/#chapter-18-signal-processing-for-multimedia","title":"Chapter 18: Signal Processing for Multimedia","text":"<p>Discusses the processing of audio, image, and video signals for multimedia applications.</p>"},{"location":"chapters/toc/#chapter-sections_17","title":"Chapter Sections","text":""},{"location":"chapters/toc/#audio-signal-processing","title":"Audio Signal Processing","text":"<ul> <li>Speech Synthesis and Recognition</li> <li>Audio Effects and Enhancements</li> </ul>"},{"location":"chapters/toc/#image-processing","title":"Image Processing","text":"<ul> <li>Filtering and Edge Detection</li> <li>Segmentation and Morphology</li> </ul>"},{"location":"chapters/toc/#video-processing","title":"Video Processing","text":"<ul> <li>Motion Estimation</li> <li>Video Stabilization</li> </ul>"},{"location":"chapters/toc/#virtual-and-augmented-reality","title":"Virtual and Augmented Reality","text":"<ul> <li>Signal Processing Challenges</li> <li>Immersive Technologies</li> </ul>"},{"location":"chapters/toc/#chapter-19-emerging-topics-in-signal-processing","title":"Chapter 19: Emerging Topics in Signal Processing","text":"<p>Introduces cutting-edge areas in signal processing research and development.</p>"},{"location":"chapters/toc/#chapter-sections_18","title":"Chapter Sections","text":""},{"location":"chapters/toc/#compressed-sensing","title":"Compressed Sensing","text":"<ul> <li>Theory and Principles</li> <li>Recovery Algorithms</li> </ul>"},{"location":"chapters/toc/#cognitive-signal-processing","title":"Cognitive Signal Processing","text":"<ul> <li>Adaptive Learning Systems</li> <li>Applications in Smart Devices</li> </ul>"},{"location":"chapters/toc/#quantum-signal-processing","title":"Quantum Signal Processing","text":"<ul> <li>Quantum Computing Basics</li> <li>Potential Signal Processing Applications</li> </ul>"},{"location":"chapters/toc/#chapter-20-integration-of-ai-and-education-in-signal-processing","title":"Chapter 20: Integration of AI and Education in Signal Processing","text":"<p>Explores the role of AI in revolutionizing signal processing education, including curriculum development and innovative teaching methods.</p>"},{"location":"chapters/toc/#chapter-sections_19","title":"Chapter Sections","text":""},{"location":"chapters/toc/#ai-in-curriculum-development","title":"AI in Curriculum Development","text":"<ul> <li>Incorporating AI Modules</li> <li>Interdisciplinary Approaches</li> </ul>"},{"location":"chapters/toc/#gamification-in-education","title":"Gamification in Education","text":"<ul> <li>Educational Games for Signal Processing</li> <li>Engagement and Motivation Strategies</li> </ul>"},{"location":"chapters/toc/#large-language-models-llms","title":"Large Language Models (LLMs)","text":"<ul> <li>Using LLMs as Educational Tools</li> <li>Automated Tutoring Systems</li> </ul>"},{"location":"chapters/toc/#future-directions","title":"Future Directions","text":"<ul> <li>Lifelong Learning Paradigms</li> <li>Ethical Considerations in AI Education</li> </ul>"},{"location":"chapters/toc/#summary","title":"Summary","text":"<p>This structured outline provides a comprehensive college-level course in signal processing, integrating traditional topics with modern advancements such as AI and machine learning, as reflected in the IEEE Signal Processing Magazine. Each chapter builds upon the previous ones, ensuring a cohesive learning journey.</p>"},{"location":"chapters/01-intro-sigproc/","title":"Chapter 1: Introduction to Signal Processing","text":"<p>This chapter provides an overview of signal processing, its importance in modern technology, and its various applications across different fields.</p>"},{"location":"chapters/01-intro-sigproc/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/01-intro-sigproc/#what-is-signal-processing","title":"What is Signal Processing?","text":"<ul> <li>Definition of Signals and Systems: Understanding the basic concepts of signals (both continuous and discrete) and systems.</li> <li>Historical Background: Evolution of signal processing from analog to digital.</li> </ul>"},{"location":"chapters/01-intro-sigproc/#importance-of-signal-processing","title":"Importance of Signal Processing","text":"<ul> <li>Applications in Daily Life: Communication systems, multimedia, healthcare, etc.</li> <li>Role in Modern Technology: Internet of Things (IoT), autonomous vehicles, and more.</li> </ul>"},{"location":"chapters/01-intro-sigproc/#overview-of-the-course","title":"Overview of the Course","text":"<ul> <li>Course Objectives: What students will learn and achieve.</li> <li>Structure and Prerequisites: How the course is organized and foundational knowledge required.</li> </ul>"},{"location":"chapters/02-math-found/","title":"Chapter 2: Mathematical Foundations","text":"<p>Covers the essential mathematical tools required for signal processing, including linear algebra, complex numbers, and probability theory.</p>"},{"location":"chapters/02-math-found/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/02-math-found/#linear-algebra-review","title":"Linear Algebra Review","text":"<ul> <li>Vectors and Matrices: Operations, properties, and applications.</li> <li>Eigenvalues and Eigenvectors: Their role in system analysis.</li> </ul>"},{"location":"chapters/02-math-found/#complex-numbers-and-functions","title":"Complex Numbers and Functions","text":"<ul> <li>Complex Arithmetic: Addition, multiplication, and representation.</li> <li>Phasors and Exponentials: Application in signal representation.</li> </ul>"},{"location":"chapters/02-math-found/#probability-and-statistics","title":"Probability and Statistics","text":"<ul> <li>Random Variables: Definitions and properties.</li> <li>Statistical Measures: Mean, variance, and correlations.</li> </ul>"},{"location":"chapters/02-math-found/#linear-algebra-for-signal-processing","title":"Linear Algebra for Signal Processing","text":""},{"location":"chapters/02-math-found/#41-introduction","title":"4.1 Introduction","text":"<p>Linear algebra is a fundamental mathematical tool that is essential for understanding and analyzing signals. It provides a powerful framework for representing and manipulating signals as vectors and matrices, and for solving systems of linear equations that arise in signal processing applications. In this chapter, we will explore the key concepts of linear algebra that are relevant to signal processing, including vectors, matrices, and their operations, and apply them to various signal processing problems.</p>"},{"location":"chapters/02-math-found/#42-vectors-and-signals","title":"4.2 Vectors and Signals","text":"<p>A signal can be represented as a vector, where each element of the vector corresponds to a sample of the signal. For example, a discrete-time signal can be represented as a column vector, where each element represents the value of the signal at a particular time instant.</p> <p>4.2.1 Vector Operations</p> <p>The same vector operations that we discussed in Chapter 3 can be applied to signals. For example, we can add, subtract, and multiply signals, and we can calculate the dot product of two signals.</p> <p>4.2.2 Signal Representation</p> <ul> <li>Time-Domain Representation: A signal can be represented in the time domain as a vector of samples.</li> <li>Frequency-Domain Representation: A signal can also be represented in the frequency domain using the Fourier transform. The Fourier transform of a signal is a vector whose elements represent the amplitude and phase of the signal at different frequencies.</li> </ul>"},{"location":"chapters/02-math-found/#43-matrices-and-systems-of-linear-equations","title":"4.3 Matrices and Systems of Linear Equations","text":"<p>Matrices are used to represent systems of linear equations, which arise in many signal processing applications.</p> <p>4.3.1 Matrix Representation</p> <p>A system of linear equations can be represented in matrix form as:</p> \\[  &lt;0&gt;mathbf{A} \\mathbf{x} = \\mathbf{b} \\] <p>where A is the coefficient matrix, x is the vector of unknowns, and b is the constant vector.</p> <p>4.3.2 Applications to Signal Processing</p> <ul> <li>Filtering: Filters can be represented as linear systems, and the filter output can be calculated by multiplying the input signal by the filter's impulse response matrix.</li> <li>System Identification: System identification involves determining the parameters of a system based on input and output measurements. This can be formulated as a system of linear equations.</li> </ul>"},{"location":"chapters/02-math-found/#44-eigenvalues-and-eigenvectors","title":"4.4 Eigenvalues and Eigenvectors","text":"<p>Eigenvalues and eigenvectors are important concepts in linear algebra that have applications in signal processing. \u00a0</p> <p>4.4.1 Definition</p> <p>An eigenvalue of a square matrix A is a scalar \u03bb such that there exists a nonzero vector x, called an eigenvector, satisfying the equation:</p> \\[ \\mathbf{A} \\mathbf{x} = \\lambda \\mathbf{x} \\] <p>4.4.2 Applications to Signal Processing</p> <ul> <li>Principal Component Analysis (PCA): PCA is a technique for dimensionality reduction that involves finding the eigenvectors of the covariance matrix of a set of data points.</li> <li>Singular Value Decomposition (SVD): SVD is a matrix decomposition technique that can be used to analyze the structure of a signal or system.</li> </ul>"},{"location":"chapters/02-math-found/#45-convolution","title":"4.5 Convolution","text":"<p>Convolution is a mathematical operation that is fundamental to signal processing. It is used to represent the output of a linear system when the input is a signal.</p> <p>4.5.1 Definition</p> <p>The convolution of two signals, x[n] and h[n], is defined as:</p> \\[ y\\[n\\] = x\\[n\\] \\* h\\[n\\] = \\sum\\_{k=-\\infty}^{\\infty} x\\[k\\] h\\[n-k\\]  \\] <p>4.5.2 Applications to Signal Processing</p> <ul> <li>Filtering: Filters can be implemented using convolution.</li> <li>System Analysis: The impulse response of a system is the output of the system when the input is an impulse. The output of a system can be calculated by convolving the input signal with the system's impulse response.</li> </ul>"},{"location":"chapters/02-math-found/#46-conclusion","title":"4.6 Conclusion","text":"<p>Linear algebra is a powerful tool for analyzing signals and systems. By understanding vectors, matrices, and their operations, we can effectively represent and manipulate signals, and solve systems of linear equations that arise in signal processing applications. In this chapter, we have explored the fundamental concepts of linear algebra that are relevant to signal processing, and applied them to various signal processing problems.</p>"},{"location":"chapters/03-ct-signals-systems/","title":"Chapter 3: Continuous-Time Signals and Systems","text":"<p>Introduces continuous-time signals and systems, including their classifications and properties.</p>"},{"location":"chapters/03-ct-signals-systems/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/03-ct-signals-systems/#signal-classification","title":"Signal Classification","text":"<ul> <li>Deterministic vs. Random Signals</li> <li>Periodic vs. Aperiodic Signals</li> </ul>"},{"location":"chapters/03-ct-signals-systems/#system-properties","title":"System Properties","text":"<ul> <li>Linearity and Time-Invariance</li> <li>Causality and Stability</li> </ul>"},{"location":"chapters/03-ct-signals-systems/#convolution-in-continuous-time","title":"Convolution in Continuous Time","text":"<ul> <li>Impulse Response</li> <li>System Output Calculation</li> </ul>"},{"location":"chapters/04-dt-signals-systems/","title":"Chapter 4: Discrete-Time Signals and Systems","text":"<p>Focuses on discrete-time signals, systems, and the mathematical tools used to analyze them.</p>"},{"location":"chapters/04-dt-signals-systems/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/04-dt-signals-systems/#sampling-and-quantization","title":"Sampling and Quantization","text":"<ul> <li>Nyquist-Shannon Sampling Theorem</li> <li>Aliasing Effects</li> </ul>"},{"location":"chapters/04-dt-signals-systems/#discrete-time-convolution","title":"Discrete-Time Convolution","text":"<ul> <li>Impulse Response in Discrete Systems</li> <li>Difference Equations</li> </ul>"},{"location":"chapters/04-dt-signals-systems/#z-transform","title":"Z-Transform","text":"<ul> <li>Definition and Properties</li> <li>Region of Convergence</li> </ul>"},{"location":"chapters/05-fourier-analysis/","title":"Chapter 5: Fourier Analysis","text":"<p>Explores Fourier series and transforms for both continuous and discrete signals.</p>"},{"location":"chapters/05-fourier-analysis/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/05-fourier-analysis/#fourier-series","title":"Fourier Series","text":"<ul> <li>Representation of Periodic Signals</li> <li>Convergence Conditions</li> </ul>"},{"location":"chapters/05-fourier-analysis/#continuous-time-fourier-transform-ctft","title":"Continuous-Time Fourier Transform (CTFT)","text":"<ul> <li>Spectrum Analysis</li> <li>Properties of CTFT</li> </ul>"},{"location":"chapters/05-fourier-analysis/#discrete-time-fourier-transform-dtft","title":"Discrete-Time Fourier Transform (DTFT)","text":"<ul> <li>Frequency Representation of Discrete Signals</li> <li>Properties and Applications</li> </ul>"},{"location":"chapters/06-dft-fft/","title":"Chapter 6: Discrete Fourier Transform (DFT) and Fast Fourier Transform (FFT)","text":"<p>Delves into the DFT and FFT algorithms used for efficient computation of Fourier transforms.</p>"},{"location":"chapters/06-dft-fft/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/06-dft-fft/#discrete-fourier-transform","title":"Discrete Fourier Transform","text":"<ul> <li>Definition and Computation</li> <li>Circular Convolution</li> </ul>"},{"location":"chapters/06-dft-fft/#fast-fourier-transform-algorithms","title":"Fast Fourier Transform Algorithms","text":"<ul> <li>Radix-2 FFT</li> <li>Computational Complexity</li> </ul>"},{"location":"chapters/06-dft-fft/#applications-of-dft-and-fft","title":"Applications of DFT and FFT","text":"<ul> <li>Signal Filtering</li> <li>Spectral Analysis</li> </ul>"},{"location":"chapters/07-z-transform-apps/","title":"Chapter 7: The Z-Transform and Its Applications","text":"<p>Introduces the Z-transform as a tool for analyzing discrete-time systems.</p>"},{"location":"chapters/07-z-transform-apps/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/07-z-transform-apps/#z-transform-basics","title":"Z-Transform Basics","text":"<ul> <li>Definition and Inverse Z-Transform</li> <li>Properties and Theorems</li> </ul>"},{"location":"chapters/07-z-transform-apps/#pole-zero-analysis","title":"Pole-Zero Analysis","text":"<ul> <li>Stability and Causality</li> <li>Frequency Response from Poles and Zeros</li> </ul>"},{"location":"chapters/07-z-transform-apps/#application-in-system-analysis","title":"Application in System Analysis","text":"<ul> <li>Transfer Function Representation</li> <li>System Design Techniques</li> </ul>"},{"location":"chapters/08-filter-design-impl/","title":"Chapter 8: Filter Design and Implementation","text":"<p>Covers the principles and methods for designing digital filters.</p>"},{"location":"chapters/08-filter-design-impl/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/08-filter-design-impl/#types-of-filters","title":"Types of Filters","text":"<ul> <li>Low-Pass, High-Pass, Band-Pass, Band-Stop</li> <li>FIR vs. IIR Filters</li> </ul>"},{"location":"chapters/08-filter-design-impl/#fir-filter-design","title":"FIR Filter Design","text":"<ul> <li>Window Method</li> <li>Frequency Sampling Method</li> </ul>"},{"location":"chapters/08-filter-design-impl/#iir-filter-design","title":"IIR Filter Design","text":"<ul> <li>Analog Filter Approximation</li> <li>Bilinear Transformation</li> </ul>"},{"location":"chapters/08-filter-design-impl/#implementation-considerations","title":"Implementation Considerations","text":"<ul> <li>Finite Word Length Effects</li> <li>Real-Time Processing Constraints</li> </ul>"},{"location":"chapters/09-adaptive-sigproc/","title":"Chapter 9: Adaptive Signal Processing","text":"<p>Discusses adaptive filtering techniques and their applications in dynamic environments.</p>"},{"location":"chapters/09-adaptive-sigproc/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/09-adaptive-sigproc/#introduction-to-adaptive-filters","title":"Introduction to Adaptive Filters","text":"<ul> <li>Need for Adaptation</li> <li>Adaptive Filter Structures</li> </ul>"},{"location":"chapters/09-adaptive-sigproc/#adaptive-algorithms","title":"Adaptive Algorithms","text":"<ul> <li>Least Mean Squares (LMS)</li> <li>Recursive Least Squares (RLS)</li> </ul>"},{"location":"chapters/09-adaptive-sigproc/#applications","title":"Applications","text":"<ul> <li>Noise Cancellation</li> <li>System Identification</li> </ul>"},{"location":"chapters/10-stoch-proc-rand-sig/","title":"Chapter 10: Stochastic Processes and Random Signals","text":"<p>Introduces the statistical treatment of signals and systems.</p>"},{"location":"chapters/10-stoch-proc-rand-sig/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/10-stoch-proc-rand-sig/#random-processes","title":"Random Processes","text":"<ul> <li>Classification of Random Processes</li> <li>Stationarity and Ergodicity</li> </ul>"},{"location":"chapters/10-stoch-proc-rand-sig/#statistical-averages","title":"Statistical Averages","text":"<ul> <li>Mean, Autocorrelation, and Autocovariance</li> <li>Cross-Correlation Functions</li> </ul>"},{"location":"chapters/10-stoch-proc-rand-sig/#response-of-linear-systems-to-random-inputs","title":"Response of Linear Systems to Random Inputs","text":"<ul> <li>Output Mean and Variance</li> <li>Spectral Characteristics</li> </ul>"},{"location":"chapters/11-spectral-estim/","title":"Chapter 11: Spectral Estimation","text":"<p>Explores techniques for estimating the spectral content of signals.</p>"},{"location":"chapters/11-spectral-estim/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/11-spectral-estim/#non-parametric-methods","title":"Non-Parametric Methods","text":"<ul> <li>Periodogram</li> <li>Modified Periodogram</li> </ul>"},{"location":"chapters/11-spectral-estim/#parametric-methods","title":"Parametric Methods","text":"<ul> <li>Autoregressive (AR) Models</li> <li>Model Order Selection</li> </ul>"},{"location":"chapters/11-spectral-estim/#applications","title":"Applications","text":"<ul> <li>Power Spectrum Analysis</li> <li>Signal Detection</li> </ul>"},{"location":"chapters/12-time-freq-wavelets/","title":"Chapter 12: Time-Frequency Analysis and Wavelets","text":"<p>Introduces methods for analyzing signals in both time and frequency domains simultaneously.</p>"},{"location":"chapters/12-time-freq-wavelets/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/12-time-freq-wavelets/#limitations-of-fourier-transform","title":"Limitations of Fourier Transform","text":"<ul> <li>Time-Frequency Trade-Off</li> <li>Non-Stationary Signals</li> </ul>"},{"location":"chapters/12-time-freq-wavelets/#short-time-fourier-transform-stft","title":"Short-Time Fourier Transform (STFT)","text":"<ul> <li>Windowing Concepts</li> <li>Spectrogram Interpretation</li> </ul>"},{"location":"chapters/12-time-freq-wavelets/#wavelet-transform","title":"Wavelet Transform","text":"<ul> <li>Continuous and Discrete Wavelets</li> <li>Multi-Resolution Analysis</li> </ul>"},{"location":"chapters/12-time-freq-wavelets/#applications","title":"Applications","text":"<ul> <li>Signal Compression</li> <li>Feature Extraction</li> </ul>"},{"location":"chapters/13-multirate-sigproc/","title":"Multirate","text":""},{"location":"chapters/13-multirate-sigproc/#chapter-13-multirate-signal-processing","title":"Chapter 13: Multirate Signal Processing","text":"<p>Discusses processing techniques involving multiple sampling rates.</p>"},{"location":"chapters/13-multirate-sigproc/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/13-multirate-sigproc/#fundamentals-of-multirate-systems","title":"Fundamentals of Multirate Systems","text":"<ul> <li>Upsampling and Downsampling</li> <li>Decimators and Interpolators</li> </ul>"},{"location":"chapters/13-multirate-sigproc/#polyphase-decomposition","title":"Polyphase Decomposition","text":"<ul> <li>Efficient Filter Implementations</li> <li>Applications in DSP</li> </ul>"},{"location":"chapters/13-multirate-sigproc/#filter-banks","title":"Filter Banks","text":"<ul> <li>Analysis and Synthesis Banks</li> <li>Applications in Subband Coding</li> </ul>"},{"location":"chapters/14-sigcomp-coding/","title":"Chapter 14: Signal Compression and Coding","text":"<p>Covers methods for reducing the data rate of signals while preserving essential information.</p>"},{"location":"chapters/14-sigcomp-coding/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/14-sigcomp-coding/#lossless-compression-techniques","title":"Lossless Compression Techniques","text":"<ul> <li>Entropy Coding</li> <li>Huffman and Arithmetic Coding</li> </ul>"},{"location":"chapters/14-sigcomp-coding/#lossy-compression-techniques","title":"Lossy Compression Techniques","text":"<ul> <li>Transform Coding</li> <li>Quantization Strategies</li> </ul>"},{"location":"chapters/14-sigcomp-coding/#standards-and-applications","title":"Standards and Applications","text":"<ul> <li>JPEG, MPEG</li> <li>Audio and Video Streaming</li> </ul>"},{"location":"chapters/15-ml-sigproc/","title":"Chapter 15: Machine Learning in Signal Processing","text":"<p>Integrates machine learning algorithms into signal processing tasks.</p>"},{"location":"chapters/15-ml-sigproc/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/15-ml-sigproc/#overview-of-machine-learning","title":"Overview of Machine Learning","text":"<ul> <li>Basic Concepts</li> <li>Supervised vs. Unsupervised Learning</li> </ul>"},{"location":"chapters/15-ml-sigproc/#feature-engineering","title":"Feature Engineering","text":"<ul> <li>Feature Extraction Methods</li> <li>Dimensionality Reduction</li> </ul>"},{"location":"chapters/15-ml-sigproc/#classification-and-regression","title":"Classification and Regression","text":"<ul> <li>Support Vector Machines</li> <li>Neural Networks</li> </ul>"},{"location":"chapters/15-ml-sigproc/#applications","title":"Applications","text":"<ul> <li>Pattern Recognition</li> <li>Anomaly Detection</li> </ul>"},{"location":"chapters/16-deep-learning-nn/","title":"Chapter 16: Deep Learning and Neural Networks","text":"<p>Focuses on advanced neural network architectures and their applications in signal processing.</p>"},{"location":"chapters/16-deep-learning-nn/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/16-deep-learning-nn/#deep-learning-basics","title":"Deep Learning Basics","text":"<ul> <li>Introduction to Deep Neural Networks</li> <li>Training Deep Networks</li> </ul>"},{"location":"chapters/16-deep-learning-nn/#convolutional-neural-networks-cnns","title":"Convolutional Neural Networks (CNNs)","text":"<ul> <li>Architecture Details</li> <li>Application in Image Processing</li> </ul>"},{"location":"chapters/16-deep-learning-nn/#recurrent-neural-networks-rnns","title":"Recurrent Neural Networks (RNNs)","text":"<ul> <li>Sequence Modeling</li> <li>Applications in Speech Recognition</li> </ul>"},{"location":"chapters/16-deep-learning-nn/#generative-models","title":"Generative Models","text":"<ul> <li>Autoencoders</li> <li>Generative Adversarial Networks (GANs)</li> </ul>"},{"location":"chapters/17-comm-radar-apps/","title":"Chapter 17: Applications in Communications and Radar","text":"<p>Explores signal processing techniques specific to communication systems and radar technology.</p>"},{"location":"chapters/17-comm-radar-apps/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/17-comm-radar-apps/#digital-communication-systems","title":"Digital Communication Systems","text":"<ul> <li>Modulation and Demodulation Techniques</li> <li>Channel Equalization</li> </ul>"},{"location":"chapters/17-comm-radar-apps/#signal-detection-in-noise","title":"Signal Detection in Noise","text":"<ul> <li>Detection Theory</li> <li>Matched Filters</li> </ul>"},{"location":"chapters/17-comm-radar-apps/#radar-signal-processing","title":"Radar Signal Processing","text":"<ul> <li>Pulse Compression</li> <li>Doppler Processing</li> </ul>"},{"location":"chapters/18-sigproc-multimedia/","title":"Chapter 18: Signal Processing for Multimedia","text":"<p>Discusses the processing of audio, image, and video signals for multimedia applications.</p>"},{"location":"chapters/18-sigproc-multimedia/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/18-sigproc-multimedia/#audio-signal-processing","title":"Audio Signal Processing","text":"<ul> <li>Speech Synthesis and Recognition</li> <li>Audio Effects and Enhancements</li> </ul>"},{"location":"chapters/18-sigproc-multimedia/#image-processing","title":"Image Processing","text":"<ul> <li>Filtering and Edge Detection</li> <li>Segmentation and Morphology</li> </ul>"},{"location":"chapters/18-sigproc-multimedia/#video-processing","title":"Video Processing","text":"<ul> <li>Motion Estimation</li> <li>Video Stabilization</li> </ul>"},{"location":"chapters/18-sigproc-multimedia/#virtual-and-augmented-reality","title":"Virtual and Augmented Reality","text":"<ul> <li>Signal Processing Challenges</li> <li>Immersive Technologies</li> </ul>"},{"location":"chapters/19-emerging-sigproc/","title":"Chapter 19: Emerging Topics in Signal Processing","text":"<p>Introduces cutting-edge areas in signal processing research and development.</p>"},{"location":"chapters/19-emerging-sigproc/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/19-emerging-sigproc/#compressed-sensing","title":"Compressed Sensing","text":"<ul> <li>Theory and Principles</li> <li>Recovery Algorithms</li> </ul>"},{"location":"chapters/19-emerging-sigproc/#cognitive-signal-processing","title":"Cognitive Signal Processing","text":"<ul> <li>Adaptive Learning Systems</li> <li>Applications in Smart Devices</li> </ul>"},{"location":"chapters/19-emerging-sigproc/#quantum-signal-processing","title":"Quantum Signal Processing","text":"<ul> <li>Quantum Computing Basics</li> <li>Potential Signal Processing Applications</li> </ul>"},{"location":"chapters/20-ai-edu-sigproc/","title":"Chapter 20: Integration of AI and Education in Signal Processing","text":"<p>Explores the role of AI in revolutionizing signal processing education, including curriculum development and innovative teaching methods.</p>"},{"location":"chapters/20-ai-edu-sigproc/#chapter-sections","title":"Chapter Sections","text":""},{"location":"chapters/20-ai-edu-sigproc/#ai-in-curriculum-development","title":"AI in Curriculum Development","text":"<ul> <li>Incorporating AI Modules</li> <li>Interdisciplinary Approaches</li> </ul>"},{"location":"chapters/20-ai-edu-sigproc/#gamification-in-education","title":"Gamification in Education","text":"<ul> <li>Educational Games for Signal Processing</li> <li>Engagement and Motivation Strategies</li> </ul>"},{"location":"chapters/20-ai-edu-sigproc/#large-language-models-llms","title":"Large Language Models (LLMs)","text":"<ul> <li>Using LLMs as Educational Tools</li> <li>Automated Tutoring Systems</li> </ul>"},{"location":"chapters/20-ai-edu-sigproc/#future-directions","title":"Future Directions","text":"<ul> <li>Lifelong Learning Paradigms</li> <li>Ethical Considerations in AI Education</li> </ul>"},{"location":"circuits/","title":"Signal Processing Circuits","text":"<p>Non-Inverting Operational Amplifier</p>"},{"location":"circuits/non-inverting-opamp/","title":"Non Inverting Operational Amplifier","text":"<p>Prompt</p> <p>Please generate a file of LaTeX and CircuiTikZ elements of a non-inverting operational amplifiers circuit.  The circuit should have an input coming in from the left and the output going out to the right.  The standard symbol for operational amplifier should be placed in the middle of the circuit diagram.</p> <p>Use the following format:</p> <p>\\documentclass[border=2mm]{standalone} \\usepackage{circuitikz} \\begin{document}   \\begin{circuitikz}   % Draw circuit elements here</p> <p>\\end{circuitikz} \\end{document}</p> <p>Non Inverting Operational Amplifier Diagram</p>"},{"location":"prompts/","title":"Generative AI Prompts","text":"<p>Creating a high-quality signal processing textbook is easy if you use high-quality prompts an leverage the project structure of tools such as ChatGPT and Anthropic Claude.  However, creating these high-quality prompts is a non-trivial process and there is a large amount of variation is the quality of the responses generated by different models.</p> <p>There are about a dozen important techniques that we cover in our Prompt Engineering Course that we will use in the generation of our content.  In summary, the more detailed your prompt is and the number of examples of expected output you provide, the higher the probability that even smaller language models will generate suitable output.</p>"},{"location":"prompts/#using-the-costar-framework","title":"Using the COSTAR Framework","text":"<p>If you are not familiar with generating high-quality prompts, you can remember the term \"COSTAR\" which is an acronym for:</p> <ol> <li>Context</li> <li>Objective</li> <li>Style</li> <li>Tone</li> <li>Audience</li> <li>Response</li> </ol> <p>Where these terms mean the following:</p> <ol> <li>Context - Provide relevant background information and any specific constraints or requirements that will help me understand the task better.</li> <li>Objective - Clearly state what you want to achieve with your prompt. Having a well-defined goal helps ensure the response meets your needs.</li> <li>Style - Specify any particular writing style or format you'd like the response to follow (e.g., academic, conversational, technical).</li> <li>Tone - Indicate the desired emotional tone or attitude (e.g., formal, friendly, authoritative).</li> <li>Audience - Identify who the response is intended for, as this helps tailor the content and complexity appropriately.</li> <li>Response - Specify the preferred format, length, or structure of the response (e.g., bullet points, paragraphs, specific word count).</li> </ol> <p>https://dmccreary.github.io/prompt-class/glossary/#costar-framework</p>"},{"location":"prompts/#enumeration-of-concepts","title":"Enumeration of Concepts","text":"<p>Enumeration</p>"},{"location":"prompts/#concept-dependencies","title":"Concept Dependencies","text":"<p>Dependency</p>"},{"location":"prompts/#concept-taxonomies","title":"Concept Taxonomies","text":"<p>Taxonomy</p>"},{"location":"prompts/#visualizing-concepts","title":"Visualizing Concepts","text":"<p>Vis JS Rendering</p> <p>HTML Application</p>"},{"location":"prompts/00-course-desciption/","title":"Generating a Course Description for Signal Process","text":""},{"location":"prompts/00-course-desciption/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Please generate a detailed course description for a\ncollege-level course on signal processing as through\nit would be taught by an electrical engineering\ndepartment at a university and listed in the\ndepartments course catalog online.\n\nThe course description should also have a summary\nas well as a detailed prerequisites and learning\nobjectives.\n\nUse Blooms 2001 taxonomy to generate a detailed\nlist of learning objectives.\n\nFocus on the extensive use of generative AI to\ncreate innovative content and simulations to make\nsignal processing fun and engaging for a wide\nvariety of students with different math backgrounds.\n</code></pre>"},{"location":"prompts/00-course-desciption/#sample-response","title":"Sample Response","text":"<p>Course Title: Introduction to Signal Processing with Generative AI</p>"},{"location":"prompts/00-course-desciption/#course-summary","title":"Course Summary","text":"<p>This course offers an engaging introduction to the field of signal processing, emphasizing practical applications and interactive learning through the use of generative AI. Students will learn the fundamental principles of signal processing, including analysis and manipulation of signals, filtering, Fourier transforms, and digital signal processing (DSP) algorithms. Through innovative simulations, visualizations, and real-world applications powered by AI, the course seeks to make the complexities of signal processing accessible to students with varying backgrounds in mathematics.</p> <p>Course Code: EE-NNNN Credits: 3 Offered: Fall and Spring semesters</p>"},{"location":"prompts/00-course-desciption/#detailed-course-description","title":"Detailed Course Description","text":"<p>This course provides a comprehensive introduction to signal processing, a core area in electrical engineering, with a special focus on real-world applications and accessibility for students with diverse backgrounds. Leveraging the power of generative AI, students will interactively explore key concepts in signal processing, such as signal classification, time and frequency domain representations, Fourier and Laplace transforms, sampling theory, and digital filtering. The curriculum includes AI-powered simulations, hands-on labs, and projects that allow students to visualize and manipulate signals, enhancing their conceptual understanding and confidence.</p> <p>Through AI-generated learning resources and simulations, students will experiment with various signal processing applications, such as audio filtering, image processing, communications, and biomedical signal analysis. The use of AI ensures that content is tailored to individual learning paces and styles, making complex mathematical concepts more intuitive and engaging.</p>"},{"location":"prompts/00-course-desciption/#prerequisites","title":"Prerequisites","text":"<ul> <li>Introductory Electrical Engineering or Physics: Students should have foundational knowledge in electrical circuits and systems.</li> <li>Basic Calculus and Linear Algebra: Comfort with differential and integral calculus and matrix operations is beneficial, though the course provides AI-driven tools to support students with minimal math background.</li> <li>Programming Basics: Familiarity with basic programming concepts in Python or MATLAB is recommended, as assignments involve signal processing simulations.</li> </ul>"},{"location":"prompts/00-course-desciption/#learning-objectives","title":"Learning Objectives","text":""},{"location":"prompts/00-course-desciption/#remembering","title":"Remembering","text":"<ol> <li>Define key signal processing terms and concepts, including signals, systems, noise, filters, and transformations.</li> <li>Recall common signal processing algorithms, including convolution, Fourier transform, and sampling theory.</li> <li>Recognize the types and characteristics of signals (analog, digital, continuous, discrete).</li> </ol>"},{"location":"prompts/00-course-desciption/#understanding","title":"Understanding","text":"<ol> <li>Explain the importance of signal processing in various real-world applications, such as communications, audio engineering, and image processing.</li> <li>Describe the principles of time and frequency domain analysis and their relevance to signal interpretation.</li> <li>Summarize the role of sampling, quantization, and aliasing in digital signal processing.</li> </ol>"},{"location":"prompts/00-course-desciption/#applying","title":"Applying","text":"<ol> <li>Apply Fourier analysis to break down complex signals into frequency components, using AI-driven simulations to aid understanding.</li> <li>Use convolution to understand system response to various input signals.</li> <li>Implement basic filtering techniques on real-world datasets, such as audio or biomedical signals, using generative AI-generated coding examples and templates.</li> </ol>"},{"location":"prompts/00-course-desciption/#analyzing","title":"Analyzing","text":"<ol> <li>Differentiate between types of filters (e.g., low-pass, high-pass, band-pass) and determine their impact on signals.</li> <li>Examine how signal characteristics vary in time and frequency domains using interactive AI simulations.</li> <li>Interpret results from digital filters applied to noisy signals, exploring the effects of different filter parameters.</li> </ol>"},{"location":"prompts/00-course-desciption/#evaluating","title":"Evaluating","text":"<ol> <li>Assess the effectiveness of various filtering techniques for specific applications, such as audio signal processing, image denoising, and communication channel equalization.</li> <li>Compare signal processing outcomes from AI-driven simulations and real-world data, identifying sources of error and noise.</li> <li>Critique the accuracy and limitations of different signal representations and transformations, especially for high-noise or high-complexity signals.</li> </ol>"},{"location":"prompts/00-course-desciption/#creating","title":"Creating","text":"<ol> <li>Design custom signal processing algorithms to address real-world problems, using AI to simulate and test these solutions.</li> <li>Develop simulations that visualize the effects of different processing techniques on signals, customizing for different types of input (e.g., audio, medical data).</li> <li>Construct projects that demonstrate how generative AI can enhance the comprehension and application of signal processing concepts for students from various mathematical backgrounds.</li> </ol>"},{"location":"prompts/00-course-desciption/#course-highlights","title":"Course Highlights","text":"<ul> <li>AI-Powered Simulations: The course employs AI-generated simulations and visualizations that allow students to interactively explore the effects of different signal processing techniques.</li> <li>Project-Based Learning: Students will work on individual and group projects that apply signal processing concepts to real-world challenges, with AI tools helping generate custom content and suggestions.</li> <li>Adaptable Content: The generative AI component provides adaptive exercises, supplementary examples, and explanations, allowing students with varying levels of mathematical knowledge to succeed.</li> <li>Engagement with Real Data: Students will process real-world datasets (e.g., audio files, medical data) to see firsthand how signal processing is used across industries.</li> <li>Career-Relevant Skills: By course completion, students will be equipped with foundational skills in signal processing and practical experience with AI tools, preparing them for roles in engineering, data science, and applied technology.</li> </ul> <p>4o</p> <p>window.__oai_logHTML?window.__oai_logHTML():window.__oai_SSR_HTML=window.__oai_SSR_HTML||Date.now();requestAnimationFrame((function(){window.__oai_logTTI?window.__oai_logTTI():window.__oai_SSR_TTI=window.__oai_SSR_TTI||Date.now()}))</p>"},{"location":"prompts/01-concept-enumeration/","title":"Concept Enumeration","text":""},{"location":"prompts/01-concept-enumeration/#prompt","title":"Prompt","text":"<pre><code>Please create a numbered list of the 150 most essential concepts\nin an undergraduate course in signal processing we have described\nabove. For each concept, just return the concept name and use\nacronyms and abbreviations when appropriate.  They will be used\nto label a network graph.\nMake sure that the concepts are distinct and are not duplicates.\n\nStart with the most basic foundational concepts that are prerequisites\nfor the course, and then proceed from the basic to the most complex\nconcepts. Return the numbered list just one concept per line.\n</code></pre>"},{"location":"prompts/01-concept-enumeration/#response","title":"Response","text":"<p>ChatGPT o1-preview Thought for 51 seconds</p> <ol> <li>Complex numbers</li> <li>Euler's formula</li> <li>Phasors</li> <li>Vectors</li> <li>Matrices</li> <li>Linear algebra</li> <li>Calculus</li> <li>Differential equations</li> <li>Integration</li> <li>Differentiation</li> <li>Probability</li> <li>Random variables</li> <li>Statistics</li> <li>Mean</li> <li>Variance</li> <li>Standard deviation</li> <li>Signals</li> <li>Systems</li> <li>Continuous-time signals</li> <li>Discrete-time signals</li> <li>Analog signals</li> <li>Digital signals</li> <li>Sampling</li> <li>Quantization</li> <li>Aliasing</li> <li>Nyquist theorem</li> <li>Convolution</li> <li>Impulse response</li> <li>LTI systems</li> <li>Causality</li> <li>Stability</li> <li>Frequency response</li> <li>Fourier series</li> <li>Fourier Transform (FT)</li> <li>Inverse Fourier Transform (IFT)</li> <li>Laplace Transform</li> <li>Z-Transform</li> <li>Discrete Fourier Transform (DFT)</li> <li>Fast Fourier Transform (FFT)</li> <li>Window functions</li> <li>Spectral analysis</li> <li>Time domain</li> <li>Frequency domain</li> <li>Signal decomposition</li> <li>Filtering</li> <li>Low-pass filter (LPF)</li> <li>High-pass filter (HPF)</li> <li>Band-pass filter (BPF)</li> <li>Band-stop filter (BSF)</li> <li>FIR filters</li> <li>IIR filters</li> <li>Filter design</li> <li>Bilinear transform</li> <li>Butterworth filter</li> <li>Chebyshev filter</li> <li>Elliptic filter</li> <li>Bessel filter</li> <li>Digital Signal Processing (DSP)</li> <li>Modulation</li> <li>Amplitude Modulation (AM)</li> <li>Frequency Modulation (FM)</li> <li>Phase Modulation (PM)</li> <li>Pulse-Code Modulation (PCM)</li> <li>Adaptive filtering</li> <li>Least Mean Squares (LMS) algorithm</li> <li>Recursive Least Squares (RLS) algorithm</li> <li>Noise cancellation</li> <li>Signal detection</li> <li>Autocorrelation</li> <li>Cross-correlation</li> <li>Power Spectral Density (PSD)</li> <li>Energy Spectral Density (ESD)</li> <li>Random processes</li> <li>Stationarity</li> <li>Ergodicity</li> <li>White noise</li> <li>Colored noise</li> <li>Signal estimation</li> <li>Kalman filter</li> <li>Wiener filter</li> <li>Time-frequency analysis</li> <li>Short-Time Fourier Transform (STFT)</li> <li>Spectrogram</li> <li>Wavelet Transform (WT)</li> <li>Continuous Wavelet Transform (CWT)</li> <li>Discrete Wavelet Transform (DWT)</li> <li>Multiresolution analysis</li> <li>Signal compression</li> <li>Lossless compression</li> <li>Lossy compression</li> <li>Huffman coding</li> <li>Entropy coding</li> <li>Quantization noise</li> <li>Sampling rate conversion</li> <li>Interpolation</li> <li>Decimation</li> <li>Multirate signal processing</li> <li>Polyphase filters</li> <li>Filter banks</li> <li>Subband coding</li> <li>Oversampling</li> <li>Undersampling</li> <li>Compressed sensing</li> <li>Sparse representation</li> <li>Machine Learning (ML)</li> <li>Supervised learning</li> <li>Unsupervised learning</li> <li>Feature extraction</li> <li>Pattern recognition</li> <li>Classification</li> <li>Regression</li> <li>Neural Networks (NN)</li> <li>Deep Learning (DL)</li> <li>Convolutional Neural Networks (CNNs)</li> <li>Recurrent Neural Networks (RNNs)</li> <li>Autoencoders</li> <li>Generative Adversarial Networks (GANs)</li> <li>Signal reconstruction</li> <li>Signal prediction</li> <li>Digital communications</li> <li>Modulation schemes</li> <li>Digital modulation</li> <li>Quadrature Amplitude Modulation (QAM)</li> <li>Phase Shift Keying (PSK)</li> <li>Frequency Shift Keying (FSK)</li> <li>Orthogonal Frequency Division Multiplexing (OFDM)</li> <li>Channel coding</li> <li>Error detection</li> <li>Error correction</li> <li>Communications signal processing</li> <li>Radar signal processing</li> <li>Sonar signal processing</li> <li>Image processing</li> <li>Edge detection</li> <li>Image filtering</li> <li>Image segmentation</li> <li>Audio signal processing</li> <li>Speech recognition</li> <li>Speech synthesis</li> <li>Voice over IP (VoIP)</li> <li>Multimedia signal processing</li> <li>Virtual Reality (VR)</li> <li>Augmented Reality (AR)</li> <li>Cognitive signal processing</li> <li>Quantum signal processing</li> <li>Biosignal processing</li> <li>Brain-Computer Interfaces (BCI)</li> <li>Internet of Things (IoT)</li> <li>Big data analytics</li> <li>Ethical considerations in AI</li> </ol> <p>o1</p> <p>window.__oai_logHTML?window.__oai_logHTML():window.__oai_SSR_HTML=window.__oai_SSR_HTML||Date.now();requestAnimationFrame((function(){window.__oai_logTTI?window.__oai_logTTI():window.__oai_SSR_TTI=window.__oai_SSR_TTI||Date.now()}))</p>"},{"location":"prompts/02-concept-depend/","title":"Concept Dependencies","text":""},{"location":"prompts/02-concept-depend/#prompt","title":"Prompt","text":"<pre><code>Our next step is to create a fully connected\ndependency graph for learning these Concepts.\nIn this step, for each Concept on this list, create a new\nlist of other concepts on which it depends.  If a concept\ndepends on a specific concept that is not listed,\nthen we will need to add it as a new concept.\nThis will help us determine the teaching order of the Concepts.\n\nReturn the new list as a CSV file using the following format:\n\nThe first column in the CSV file is a numeric concept ID\nyou assigned in the list above.  The second column is\nthe concept name.\nThe third column is a pipe-delimited list of the Concept\nIDs that the concept depends upon.\n\nCheck your results to make sure that all concepts\nare connected to at least one other concept.\n\nIf a concept is a Foundational concept,\nthere are no dependency concepts.\n</code></pre>"},{"location":"prompts/02-concept-depend/#response","title":"Response","text":"<pre><code>ID,Concept Name,Dependencies\n1,Complex numbers,\n2,Euler's formula,1\n3,Phasors,1|2\n4,Vectors,\n5,Matrices,4\n6,Linear algebra,4|5\n7,Calculus,\n8,Differential equations,7\n9,Integration,7\n10,Differentiation,7\n11,Probability,\n12,Random variables,11\n13,Statistics,11|12\n14,Mean,13\n15,Variance,13\n16,Standard deviation,13\n17,Signals,1|4|7\n18,Systems,17\n19,Continuous-time signals,17\n20,Discrete-time signals,17\n21,Analog signals,19\n22,Digital signals,20\n23,Sampling,19|20\n24,Quantization,22|23\n25,Aliasing,23|24\n26,Nyquist theorem,23|25\n27,Convolution,9|10\n28,Impulse response,18|27\n29,LTI systems,18|28\n30,Causality,29\n31,Stability,29\n32,Frequency response,29|34\n33,Fourier series,7|17\n34,Fourier Transform (FT),33\n35,Inverse Fourier Transform (IFT),34\n36,Laplace Transform,8\n37,Z-Transform,20|34\n38,Discrete Fourier Transform (DFT),20|34\n39,Fast Fourier Transform (FFT),38\n40,Window functions,38|39\n41,Spectral analysis,34|38\n42,Time domain,17\n43,Frequency domain,34|38\n44,Signal decomposition,33|34\n45,Filtering,27|29\n46,Low-pass filter (LPF),45\n47,High-pass filter (HPF),45\n48,Band-pass filter (BPF),45\n49,Band-stop filter (BSF),45\n50,FIR filters,20|45\n51,IIR filters,20|45\n52,Filter design,50|51\n53,Bilinear transform,36|37\n54,Butterworth filter,52\n55,Chebyshev filter,52\n56,Elliptic filter,52\n57,Bessel filter,52\n58,Digital Signal Processing (DSP),22|38|45\n59,Modulation,17|58\n60,Amplitude Modulation (AM),59\n61,Frequency Modulation (FM),59\n62,Phase Modulation (PM),59\n63,Pulse-Code Modulation (PCM),22|59\n64,Adaptive filtering,52|58\n65,Least Mean Squares (LMS) algorithm,64\n66,Recursive Least Squares (RLS) algorithm,64\n67,Noise cancellation,64|65\n68,Signal detection,41|58\n69,Autocorrelation,13|17\n70,Cross-correlation,13|17\n71,Power Spectral Density (PSD),41|69\n72,Energy Spectral Density (ESD),41|69\n73,Random processes,12|17\n74,Stationarity,73\n75,Ergodicity,73\n76,White noise,73\n77,Colored noise,73\n78,Signal estimation,68|73\n79,Kalman filter,78\n80,Wiener filter,78\n81,Time-frequency analysis,41|42|43\n82,Short-Time Fourier Transform (STFT),81\n83,Spectrogram,82\n84,Wavelet Transform (WT),81\n85,Continuous Wavelet Transform (CWT),84\n86,Discrete Wavelet Transform (DWT),84\n87,Multiresolution analysis,86\n88,Signal compression,58|86\n89,Lossless compression,88\n90,Lossy compression,88\n91,Huffman coding,89\n92,Entropy coding,89\n93,Quantization noise,24|90\n94,Sampling rate conversion,23|97\n95,Interpolation,94\n96,Decimation,94\n97,Multirate signal processing,94|95|96\n98,Polyphase filters,97\n99,Filter banks,97|98\n100,Subband coding,99\n101,Oversampling,23|97\n102,Undersampling,23|97\n103,Compressed sensing,23|104\n104,Sparse representation,88|103\n105,Machine Learning (ML),13|58\n106,Supervised learning,105\n107,Unsupervised learning,105\n108,Feature extraction,58|105\n109,Pattern recognition,108|106\n110,Classification,106|109\n111,Regression,106|109\n112,Neural Networks (NN),105\n113,Deep Learning (DL),112\n114,Convolutional Neural Networks (CNNs),113\n115,Recurrent Neural Networks (RNNs),113\n116,Autoencoders,113\n117,Generative Adversarial Networks (GANs),113\n118,Signal reconstruction,88|104\n119,Signal prediction,73|105\n120,Digital communications,58|59\n121,Modulation schemes,59|120\n122,Digital modulation,22|121\n123,Quadrature Amplitude Modulation (QAM),122\n124,Phase Shift Keying (PSK),122\n125,Frequency Shift Keying (FSK),122\n126,Orthogonal Frequency Division Multiplexing (OFDM),122|38\n127,Channel coding,120\n128,Error detection,127\n129,Error correction,127\n130,Communications signal processing,58|120\n131,Radar signal processing,58|130\n132,Sonar signal processing,58|130\n133,Image processing,58|105\n134,Edge detection,133\n135,Image filtering,133|45\n136,Image segmentation,133|108\n137,Audio signal processing,58|17\n138,Speech recognition,137|105\n139,Speech synthesis,137\n140,Voice over IP (VoIP),137|120\n141,Multimedia signal processing,58|133|137\n142,Virtual Reality (VR),141\n143,Augmented Reality (AR),141\n144,Cognitive signal processing,105|130\n145,Quantum signal processing,58|146\n146,Biosignal processing,58|73\n147,Brain-Computer Interfaces (BCI),146|105\n148,Internet of Things (IoT),58|120|149\n149,Big data analytics,105|58\n150,Ethical considerations in AI,105|149\n</code></pre>"},{"location":"prompts/03-taxonomy/","title":"Creating a Taxonomy","text":""},{"location":"prompts/03-taxonomy/#prompt","title":"Prompt","text":"<p>Next, let's Create a taxonomy to classify these concepts. For the list of concepts, can you suggest a taxonomy of up to ten categories on how to classify each concept? For example: 1. Foundational Concepts (Mathematical Foundations), 2. Types of Signals. 3. Fourier Transforms... 10. Other</p> <p>For each of the categories create a category label and list the concepts under that category.</p>"},{"location":"prompts/03-taxonomy/#response","title":"Response","text":"<p>ChatGPT o1-preview Thought for 34 seconds</p> <p>Sure! Here's a taxonomy of up to ten categories to classify the 150 essential concepts in the undergraduate signal processing course:</p>"},{"location":"prompts/03-taxonomy/#1-mathematical-foundations","title":"1. Mathematical Foundations","text":"<ul> <li>Concepts:<ol> <li>Complex numbers</li> <li>Euler's formula</li> <li>Phasors</li> <li>Vectors</li> <li>Matrices</li> <li>Linear algebra</li> <li>Calculus</li> <li>Differential equations</li> <li>Integration</li> <li>Differentiation</li> <li>Probability</li> <li>Random variables</li> <li>Statistics</li> <li>Mean</li> <li>Variance</li> <li>Standard deviation</li> </ol> </li> </ul>"},{"location":"prompts/03-taxonomy/#2-signals-and-systems","title":"2. Signals and Systems","text":"<ul> <li>Concepts: 17. Signals 18. Systems 19. Continuous-time signals 20. Discrete-time signals 21. Analog signals 22. Digital signals 23. Sampling 24. Quantization 25. Aliasing 26. Nyquist theorem 27. Convolution 28. Impulse response 29. LTI systems 30. Causality 31. Stability 42. Time domain 43. Frequency domain 44. Signal decomposition</li> </ul>"},{"location":"prompts/03-taxonomy/#3-transforms-and-frequency-analysis","title":"3. Transforms and Frequency Analysis","text":"<ul> <li>Concepts: 33. Fourier series 34. Fourier Transform (FT) 35. Inverse Fourier Transform (IFT) 36. Laplace Transform 37. Z-Transform 38. Discrete Fourier Transform (DFT) 39. Fast Fourier Transform (FFT) 40. Window functions 41. Spectral analysis 53. Bilinear transform</li> </ul>"},{"location":"prompts/03-taxonomy/#4-filters-and-filter-design","title":"4. Filters and Filter Design","text":"<ul> <li>Concepts: 45. Filtering 46. Low-pass filter (LPF) 47. High-pass filter (HPF) 48. Band-pass filter (BPF) 49. Band-stop filter (BSF) 50. FIR filters 51. IIR filters 52. Filter design 54. Butterworth filter 55. Chebyshev filter 56. Elliptic filter 57. Bessel filter</li> </ul>"},{"location":"prompts/03-taxonomy/#5-random-processes-and-statistical-signal-processing","title":"5. Random Processes and Statistical Signal Processing","text":"<ul> <li>Concepts: 69. Autocorrelation 70. Cross-correlation 71. Power Spectral Density (PSD) 72. Energy Spectral Density (ESD) 73. Random processes 74. Stationarity 75. Ergodicity 76. White noise 77. Colored noise 78. Signal estimation 79. Kalman filter 80. Wiener filter</li> </ul>"},{"location":"prompts/03-taxonomy/#6-time-frequency-analysis-and-wavelets","title":"6. Time-Frequency Analysis and Wavelets","text":"<ul> <li>Concepts: 81. Time-frequency analysis 82. Short-Time Fourier Transform (STFT) 83. Spectrogram 84. Wavelet Transform (WT) 85. Continuous Wavelet Transform (CWT) 86. Discrete Wavelet Transform (DWT) 87. Multiresolution analysis</li> </ul>"},{"location":"prompts/03-taxonomy/#7-advanced-signal-processing-techniques","title":"7. Advanced Signal Processing Techniques","text":"<ul> <li>Concepts: 64. Adaptive filtering 65. Least Mean Squares (LMS) algorithm 66. Recursive Least Squares (RLS) algorithm 67. Noise cancellation 68. Signal detection 88. Signal compression 89. Lossless compression 90. Lossy compression 91. Huffman coding 92. Entropy coding 93. Quantization noise 94. Sampling rate conversion 95. Interpolation 96. Decimation 97. Multirate signal processing 98. Polyphase filters 99. Filter banks 100. Subband coding 101. Oversampling 102. Undersampling 103. Compressed sensing 104. Sparse representation 118. Signal reconstruction 119. Signal prediction</li> </ul>"},{"location":"prompts/03-taxonomy/#8-machine-learning-and-neural-networks-in-signal-processing","title":"8. Machine Learning and Neural Networks in Signal Processing","text":"<ul> <li>Concepts: 105. Machine Learning (ML) 106. Supervised learning 107. Unsupervised learning 108. Feature extraction 109. Pattern recognition 110. Classification 111. Regression 112. Neural Networks (NN) 113. Deep Learning (DL) 114. Convolutional Neural Networks (CNNs) 115. Recurrent Neural Networks (RNNs) 116. Autoencoders 117. Generative Adversarial Networks (GANs) 144. Cognitive signal processing 149. Big data analytics</li> </ul>"},{"location":"prompts/03-taxonomy/#9-applications-in-communications-and-multimedia","title":"9. Applications in Communications and Multimedia","text":"<ul> <li>Concepts: 58. Digital Signal Processing (DSP) 59. Modulation 60. Amplitude Modulation (AM) 61. Frequency Modulation (FM) 62. Phase Modulation (PM) 63. Pulse-Code Modulation (PCM) 120. Digital communications 121. Modulation schemes 122. Digital modulation 123. Quadrature Amplitude Modulation (QAM) 124. Phase Shift Keying (PSK) 125. Frequency Shift Keying (FSK) 126. Orthogonal Frequency Division Multiplexing (OFDM) 127. Channel coding 128. Error detection 129. Error correction 130. Communications signal processing 131. Radar signal processing 132. Sonar signal processing 133. Image processing 134. Edge detection 135. Image filtering 136. Image segmentation 137. Audio signal processing 138. Speech recognition 139. Speech synthesis 140. Voice over IP (VoIP) 141. Multimedia signal processing 142. Virtual Reality (VR) 143. Augmented Reality (AR) 148. Internet of Things (IoT)</li> </ul>"},{"location":"prompts/03-taxonomy/#10-emerging-and-specialized-topics","title":"10. Emerging and Specialized Topics","text":"<ul> <li>Concepts: 145. Quantum signal processing 146. Biosignal processing 147. Brain-Computer Interfaces (BCI) 150. Ethical considerations in AI</li> </ul>"},{"location":"prompts/03-taxonomy/#note","title":"Note:","text":"<ul> <li>Each concept has been placed in the category that best fits its primary focus.</li> <li>Concepts are unique to one category to avoid duplication.</li> <li>Categories are designed to progress from foundational topics to advanced applications.</li> </ul> <p>This taxonomy should help organize the concepts and determine an effective teaching order, starting from foundational knowledge and building up to specialized topics.</p>"},{"location":"prompts/03-taxonomy/#new-csv-file","title":"New CSV File","text":""},{"location":"prompts/03-taxonomy/#prompt_1","title":"Prompt","text":"<pre><code>Perfect! Now for each category, use the number you\nreturned in the list as a category ID. Please return\na new CSV file with the category ID as a new column in the CSV file.\n\nChatGPT o1-preview Thought for 5 seconds\n\n```csv\nID,Concept Name,Dependencies,Category ID\n1,Complex numbers,,1\n2,Euler's formula,1,1\n3,Phasors,1|2,1\n4,Vectors,,1\n5,Matrices,4,1\n6,Linear algebra,4|5,1\n7,Calculus,,1\n8,Differential equations,7,1\n9,Integration,7,1\n10,Differentiation,7,1\n11,Probability,,1\n12,Random variables,11,1\n13,Statistics,11|12,1\n14,Mean,13,1\n15,Variance,13,1\n16,Standard deviation,13,1\n17,Signals,1|4|7,2\n18,Systems,17,2\n19,Continuous-time signals,17,2\n20,Discrete-time signals,17,2\n21,Analog signals,19,2\n22,Digital signals,20,2\n23,Sampling,19|20,2\n24,Quantization,22|23,2\n25,Aliasing,23|24,2\n26,Nyquist theorem,23|25,2\n27,Convolution,9|10,2\n28,Impulse response,18|27,2\n29,LTI systems,18|28,2\n30,Causality,29,2\n31,Stability,29,2\n32,Frequency response,29|34,2\n33,Fourier series,7|17,3\n34,Fourier Transform (FT),33,3\n35,Inverse Fourier Transform (IFT),34,3\n36,Laplace Transform,8,3\n37,Z-Transform,20|34,3\n38,Discrete Fourier Transform (DFT),20|34,3\n39,Fast Fourier Transform (FFT),38,3\n40,Window functions,38|39,3\n41,Spectral analysis,34|38,3\n42,Time domain,17,2\n43,Frequency domain,34|38,2\n44,Signal decomposition,33|34,2\n45,Filtering,27|29,4\n46,Low-pass filter (LPF),45,4\n47,High-pass filter (HPF),45,4\n48,Band-pass filter (BPF),45,4\n49,Band-stop filter (BSF),45,4\n50,FIR filters,20|45,4\n51,IIR filters,20|45,4\n52,Filter design,50|51,4\n53,Bilinear transform,36|37,3\n54,Butterworth filter,52,4\n55,Chebyshev filter,52,4\n56,Elliptic filter,52,4\n57,Bessel filter,52,4\n58,Digital Signal Processing (DSP),22|38|45,9\n59,Modulation,17|58,9\n60,Amplitude Modulation (AM),59,9\n61,Frequency Modulation (FM),59,9\n62,Phase Modulation (PM),59,9\n63,Pulse-Code Modulation (PCM),22|59,9\n64,Adaptive filtering,52|58,7\n65,Least Mean Squares (LMS) algorithm,64,7\n66,Recursive Least Squares (RLS) algorithm,64,7\n67,Noise cancellation,64|65,7\n68,Signal detection,41|58,7\n69,Autocorrelation,13|17,5\n70,Cross-correlation,13|17,5\n71,Power Spectral Density (PSD),41|69,5\n72,Energy Spectral Density (ESD),41|69,5\n73,Random processes,12|17,5\n74,Stationarity,73,5\n75,Ergodicity,73,5\n76,White noise,73,5\n77,Colored noise,73,5\n78,Signal estimation,68|73,5\n79,Kalman filter,78,5\n80,Wiener filter,78,5\n81,Time-frequency analysis,41|42|43,6\n82,Short-Time Fourier Transform (STFT),81,6\n83,Spectrogram,82,6\n84,Wavelet Transform (WT),81,6\n85,Continuous Wavelet Transform (CWT),84,6\n86,Discrete Wavelet Transform (DWT),84,6\n87,Multiresolution analysis,86,6\n88,Signal compression,58|86,7\n89,Lossless compression,88,7\n90,Lossy compression,88,7\n91,Huffman coding,89,7\n92,Entropy coding,89,7\n93,Quantization noise,24|90,7\n94,Sampling rate conversion,23|97,7\n95,Interpolation,94,7\n96,Decimation,94,7\n97,Multirate signal processing,94|95|96,7\n98,Polyphase filters,97,7\n99,Filter banks,97|98,7\n100,Subband coding,99,7\n101,Oversampling,23|97,7\n102,Undersampling,23|97,7\n103,Compressed sensing,23|104,7\n104,Sparse representation,88|103,7\n105,Machine Learning (ML),13|58,8\n106,Supervised learning,105,8\n107,Unsupervised learning,105,8\n108,Feature extraction,58|105,8\n109,Pattern recognition,108|106,8\n110,Classification,106|109,8\n111,Regression,106|109,8\n112,Neural Networks (NN),105,8\n113,Deep Learning (DL),112,8\n114,Convolutional Neural Networks (CNNs),113,8\n115,Recurrent Neural Networks (RNNs),113,8\n116,Autoencoders,113,8\n117,Generative Adversarial Networks (GANs),113,8\n118,Signal reconstruction,88|104,7\n119,Signal prediction,73|105,8\n120,Digital communications,58|59,9\n121,Modulation schemes,59|120,9\n122,Digital modulation,22|121,9\n123,Quadrature Amplitude Modulation (QAM),122,9\n124,Phase Shift Keying (PSK),122,9\n125,Frequency Shift Keying (FSK),122,9\n126,Orthogonal Frequency Division Multiplexing (OFDM),122|38,9\n127,Channel coding,120,9\n128,Error detection,127,9\n129,Error correction,127,9\n130,Communications signal processing,58|120,9\n131,Radar signal processing,58|130,9\n132,Sonar signal processing,58|130,9\n133,Image processing,58|105,9\n134,Edge detection,133,9\n135,Image filtering,133|45,9\n136,Image segmentation,133|108,9\n137,Audio signal processing,58|17,9\n138,Speech recognition,137|105,9\n139,Speech synthesis,137,9\n140,Voice over IP (VoIP),137|120,9\n141,Multimedia signal processing,58|133|137,9\n142,Virtual Reality (VR),141,9\n143,Augmented Reality (AR),141,9\n144,Cognitive signal processing,105|130,8\n145,Quantum signal processing,58|146,10\n146,Biosignal processing,58|73,10\n147,Brain-Computer Interfaces (BCI),146|105,10\n148,Internet of Things (IoT),58|120|149,9\n149,Big data analytics,105|58,8\n150,Ethical considerations in AI,105|149,10\n</code></pre>"},{"location":"prompts/03-taxonomy/#explanation","title":"Explanation:","text":"<ul> <li> <p>Category IDs:</p> <ul> <li>1. Mathematical Foundations</li> <li>2. Signals and Systems</li> <li>3. Transforms and Frequency Analysis</li> <li>4. Filters and Filter Design</li> <li>5. Random Processes and Statistical Signal Processing</li> <li>6. Time-Frequency Analysis and Wavelets</li> <li>7. Advanced Signal Processing Techniques</li> <li>8. Machine Learning and Neural Networks in Signal Processing</li> <li>9. Applications in Communications and Multimedia</li> <li>10. Emerging and Specialized Topics</li> </ul> </li> <li> <p>Each concept from the original list is assigned to one of these categories based on the taxonomy provided earlier.</p> </li> <li> <p>The CSV file includes:</p> <ul> <li>ID: The concept ID from the original list (1 to 150).</li> <li>Concept Name: The name of the concept.</li> <li>Dependencies: A pipe-delimited list of IDs of concepts it depends on.</li> <li>Category ID: The category number (1 to 10) to which the concept belongs.</li> <li> <p>Notes:</p> </li> <li> <p>The concepts are uniquely assigned to one category to avoid duplication.</p> </li> <li>Foundational concepts without dependencies have an empty Dependencies field.</li> <li>All concepts are connected to at least one other concept through dependencies or category grouping.</li> </ul> </li> </ul>"},{"location":"prompts/03-taxonomy/#how-to-use-this-csv-file","title":"How to Use This CSV File:","text":"<ul> <li> <p>Teaching Order Determination:</p> <ul> <li>By examining the dependencies, educators can determine the prerequisite concepts needed before introducing a new topic.</li> <li>The category IDs help structure the course into modules or sections.</li> <li> <p>Visualization:</p> </li> <li> <p>The CSV file can be used to create a network graph where nodes represent concepts, edges represent dependencies, and colors or groupings represent categories.</p> </li> <li> <p>Curriculum Development:</p> </li> <li> <p>The taxonomy and dependencies assist in curriculum planning, ensuring that foundational topics are covered before advanced concepts.</p> </li> </ul> </li> </ul>"},{"location":"prompts/03-taxonomy/#assumptions-made","title":"Assumptions Made:","text":"<ul> <li> <p>Dependencies:</p> <ul> <li>Dependencies are based on logical prerequisite knowledge required to understand a concept.</li> <li>If a concept depends on multiple concepts, their IDs are separated by a pipe (<code>|</code>).</li> <li> <p>Category Assignment:</p> </li> <li> <p>Each concept is placed in the category that best fits its primary focus, as per the taxonomy provided.</p> </li> </ul> </li> </ul> <p>If you need any further adjustments or have specific requirements for formatting or content, please let me know!</p>"},{"location":"prompts/03b-legend/","title":"Generating a Concept Legend","text":""},{"location":"prompts/03b-legend/#summarize-categories","title":"Summarize Categories","text":"<pre><code>Convert the following list into an HTML table\n\n-   **1. Mathematical Foundations**\n-   **2. Signals and Systems**\n-   **3. Transforms and Frequency Analysis**\n-   **4. Filters and Filter Design**\n-   **5. Random Processes and Statistical Signal Processing**\n-   **6. Time-Frequency Analysis and Wavelets**\n-   **7. Advanced Signal Processing Techniques**\n-   **8. Machine Learning and Neural Networks in Signal Processing**\n-   **9. Applications in Communications and Multimedia**\n-   **10. Emerging and Specialized Topics**\n\nUse the following format:\n\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Mathematical Foundations&lt;/td&gt;\n        &lt;td style=\"background-color: red; color: white;\"&gt;Red&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Signals and Systems&lt;/td&gt;\n        &lt;td style=\"background-color: orange;\"&gt;Orange&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Transforms and Frequency Analysis&lt;/td&gt;\n        &lt;td style=\"background-color: orange;\"&gt;Gold&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Filters and Filter Design&lt;/td&gt;\n        &lt;td style=\"background-color: orange;\"&gt;Green&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;table&gt;\n\nUse the following colors:\n\n1. Red\n2. Orange\n3. Yellow\n4. Lightgreen\n5. Lightblue\n6. Plum\n7. Violet\n8. Silver\n9. Tan\n10. MediumAquamarine\n</code></pre>"},{"location":"prompts/03b-legend/#response","title":"Response","text":"<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Mathematical Foundations&lt;/td&gt;\n        &lt;td style=\"background-color: red; color: white;\"&gt;Red&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Signals and Systems&lt;/td&gt;\n        &lt;td style=\"background-color: orange; color: white;\"&gt;Orange&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Transforms and Frequency Analysis&lt;/td&gt;\n        &lt;td style=\"background-color: yellow;\"&gt;Yellow&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Filters and Filter Design&lt;/td&gt;\n        &lt;td style=\"background-color: lightgreen;\"&gt;Lightgreen&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Random Processes and Statistical Signal Processing&lt;/td&gt;\n        &lt;td style=\"background-color: lightblue;\"&gt;Lightblue&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Time-Frequency Analysis and Wavelets&lt;/td&gt;\n        &lt;td style=\"background-color: plum;\"&gt;Plum&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Advanced Signal Processing Techniques&lt;/td&gt;\n        &lt;td style=\"background-color: violet; color: white;\"&gt;Violet&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Machine Learning and Neural Networks in Signal Processing&lt;/td&gt;\n        &lt;td style=\"background-color: silver;\"&gt;Silver&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Applications in Communications and Multimedia&lt;/td&gt;\n        &lt;td style=\"background-color: tan;\"&gt;Tan&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;Emerging and Specialized Topics&lt;/td&gt;\n        &lt;td style=\"background-color: mediumaquamarine;\"&gt;MediumAquamarine&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre>"},{"location":"prompts/04-vis-js/","title":"Generating a Vis.js Program","text":"<p>Run the Vis.js Visualizer</p> Signal Processing Concepts Network Signal Processing Concepts Network"},{"location":"prompts/07-glossary/","title":"Glossary of Terms","text":""},{"location":"prompts/07-glossary/#prompt","title":"Prompt","text":"<p>```linenums=\"0\" Create a glossary of terms for a class on signal processing. Some terms will also have an abbreviation. The definitions should be precise, concise, distinct and non-circular. Return the results in a single raw markdown file in alphabetical order. The term name is in level 4 markdown heading. For each term use the following format:</p>"},{"location":"prompts/07-glossary/#term-abbreviation","title":"Term (Abbreviation)","text":"<p>Text of the definition of the term.</p> <p>Example: Example of use of the term in the course.</p>"},{"location":"prompts/07-glossary/#fast-fourier-transform-fft","title":"Fast Fourier Transform (FFT)","text":"<p>An efficient algorithm that computes the discrete Fourier transform (DFT) and its inverse, reducing the computational complexity. This transformation decomposes a time-domain signal into its constituent frequencies, enabling rapid analysis and processing of frequency components.</p> <p>Example: We use the FFT to analyze audio signals by converting a time-domain recording into its frequency spectrum. This allows them to identify dominant frequencies, filter out noise, and visualize the signal's frequency content for applications such as music analysis or noise reduction.</p> <p>Include definitions for the following terms:</p> <p>Complex numbers Euler's formula Phasors Vectors Matrices Linear algebra Calculus Differential equations Integration Differentiation Probability Random variables Statistics Mean Variance Standard deviation Signals Systems Continuous-time signals Discrete-time signals Analog signals Digital signals Sampling Quantization Aliasing Nyquist theorem Convolution Impulse response LTI systems Causality Stability Frequency response Fourier series Fourier Transform (FT) Inverse Fourier Transform (IFT) Laplace Transform Z-Transform Discrete Fourier Transform (DFT) Fast Fourier Transform (FFT) Window functions Spectral analysis Time domain Frequency domain Signal decomposition Filtering Low-pass filter (LPF) High-pass filter (HPF) Band-pass filter (BPF) Band-stop filter (BSF) FIR filters IIR filters Filter design Bilinear transform Butterworth filter Chebyshev filter Elliptic filter Bessel filter Digital Signal Processing (DSP) Modulation Amplitude Modulation (AM) Frequency Modulation (FM) Phase Modulation (PM) Pulse-Code Modulation (PCM) Adaptive filtering Least Mean Squares (LMS) algorithm Recursive Least Squares (RLS) algorithm Noise cancellation Signal detection Autocorrelation Cross-correlation Power Spectral Density (PSD) Energy Spectral Density (ESD) Random processes Stationarity Ergodicity White noise Colored noise Signal estimation Kalman filter Wiener filter Time-frequency analysis Short-Time Fourier Transform (STFT) Spectrogram Wavelet Transform (WT) Continuous Wavelet Transform (CWT) Discrete Wavelet Transform (DWT) Multiresolution analysis Signal compression Lossless compression Lossy compression Huffman coding Entropy coding Quantization noise Sampling rate conversion Interpolation Decimation Multirate signal processing Polyphase filters Filter banks Subband coding Oversampling Undersampling Compressed sensing Sparse representation Machine Learning (ML) Supervised learning Unsupervised learning Feature extraction Pattern recognition Classification Regression Neural Networks (NN) Deep Learning (DL) Convolutional Neural Networks (CNNs) Recurrent Neural Networks (RNNs) Autoencoders Generative Adversarial Networks (GANs) Signal reconstruction Signal prediction Digital communications Modulation schemes Digital modulation Quadrature Amplitude Modulation (QAM) Phase Shift Keying (PSK) Frequency Shift Keying (FSK) Orthogonal Frequency Division Multiplexing (OFDM) Channel coding Error detection Error correction Communications signal processing Radar signal processing Sonar signal processing Image processing Edge detection Image filtering Image segmentation Audio signal processing Speech recognition Speech synthesis Voice over IP (VoIP) Multimedia signal processing Virtual Reality (VR) Augmented Reality (AR) Cognitive signal processing Quantum signal processing Biosignal processing Brain-Computer Interfaces (BCI) Internet of Things (IoT) Big data analytics Ethical considerations in AI</p>"},{"location":"prompts/08-timeline/","title":"Timeline of Signal Processing","text":"<p>Timeline Viewer</p>"},{"location":"prompts/08-timeline/#prompt","title":"Prompt","text":"<p>Prompt</p> <p>Create a timeline of the 50 most important milestones in   the history of electronic signal processing.  Use the vis.js   format to store the events in a JSON format.</p>"},{"location":"prompts/08-timeline/#response","title":"Response","text":"<p>Here is a timeline of 50 key milestones in the history of electronic signal processing, represented in the <code>vis.js</code> format:</p> <pre><code>{\n  \"items\": [\n    { \"id\": 1, \"content\": \"Invention of the Telegraph\", \"start\": \"1837\" },\n    { \"id\": 2, \"content\": \"Invention of the Telephone by Alexander Graham Bell\", \"start\": \"1876\" },\n    { \"id\": 3, \"content\": \"First Radio Transmission by Guglielmo Marconi\", \"start\": \"1895\" },\n    { \"id\": 4, \"content\": \"Discovery of the Electron\", \"start\": \"1897\" },\n    { \"id\": 5, \"content\": \"Invention of the Vacuum Tube (Thermionic Valve)\", \"start\": \"1904\" },\n    { \"id\": 6, \"content\": \"Nyquist-Shannon Sampling Theorem\", \"start\": \"1928\" },\n    { \"id\": 7, \"content\": \"First FM Radio Transmission\", \"start\": \"1933\" },\n    { \"id\": 8, \"content\": \"Development of Radar Systems during WWII\", \"start\": \"1939\" },\n    { \"id\": 9, \"content\": \"Invention of the Transistor at Bell Labs\", \"start\": \"1947\" },\n    { \"id\": 10, \"content\": \"Introduction of Pulse Code Modulation (PCM)\", \"start\": \"1948\" },\n    { \"id\": 11, \"content\": \"Invention of the Operational Amplifier (Op-Amp)\", \"start\": \"1960\" },\n    { \"id\": 12, \"content\": \"Introduction of the Fast Fourier Transform (FFT)\", \"start\": \"1965\" },\n    { \"id\": 13, \"content\": \"Development of Digital Filters\", \"start\": \"1966\" },\n    { \"id\": 14, \"content\": \"First Commercial Use of PCM in Telephone Systems\", \"start\": \"1968\" },\n    { \"id\": 15, \"content\": \"Invention of the Charge-Coupled Device (CCD)\", \"start\": \"1969\" },\n    { \"id\": 16, \"content\": \"Advent of Digital Audio Recording\", \"start\": \"1970\" },\n    { \"id\": 17, \"content\": \"First Use of Microprocessors in Signal Processing\", \"start\": \"1971\" },\n    { \"id\": 18, \"content\": \"First Use of Fast Fourier Transform in Computers\", \"start\": \"1974\" },\n    { \"id\": 19, \"content\": \"Introduction of Error-Correcting Codes\", \"start\": \"1977\" },\n    { \"id\": 20, \"content\": \"Introduction of Adaptive Filters\", \"start\": \"1978\" },\n    { \"id\": 21, \"content\": \"First Digital Signal Processor (DSP) Chip (TMS320)\", \"start\": \"1982\" },\n    { \"id\": 22, \"content\": \"Invention of JPEG for Image Compression\", \"start\": \"1986\" },\n    { \"id\": 23, \"content\": \"Introduction of MPEG for Video Compression\", \"start\": \"1988\" },\n    { \"id\": 24, \"content\": \"First CD Player (Digital Audio Format)\", \"start\": \"1982\" },\n    { \"id\": 25, \"content\": \"Development of Wavelet Transform for Signal Analysis\", \"start\": \"1989\" },\n    { \"id\": 26, \"content\": \"Introduction of MP3 Audio Compression\", \"start\": \"1993\" },\n    { \"id\": 27, \"content\": \"Invention of the Discrete Wavelet Transform\", \"start\": \"1992\" },\n    { \"id\": 28, \"content\": \"First Use of OFDM in Wireless Communication\", \"start\": \"1995\" },\n    { \"id\": 29, \"content\": \"Development of Digital Hearing Aids\", \"start\": \"1996\" },\n    { \"id\": 30, \"content\": \"Introduction of HDTV Standards\", \"start\": \"1996\" },\n    { \"id\": 31, \"content\": \"First Software-Defined Radio (SDR)\", \"start\": \"2000\" },\n    { \"id\": 32, \"content\": \"Introduction of Wi-Fi Standards for Wireless Communication\", \"start\": \"1997\" },\n    { \"id\": 33, \"content\": \"Development of the H.264 Video Codec\", \"start\": \"2003\" },\n    { \"id\": 34, \"content\": \"Introduction of 4G LTE for High-Speed Wireless Communication\", \"start\": \"2009\" },\n    { \"id\": 35, \"content\": \"First Use of Deep Learning in Signal Processing\", \"start\": \"2012\" },\n    { \"id\": 36, \"content\": \"Introduction of 5G Standards for Wireless Communication\", \"start\": \"2020\" },\n    { \"id\": 37, \"content\": \"Development of Advanced Audio Coding (AAC)\", \"start\": \"1997\" },\n    { \"id\": 38, \"content\": \"Invention of the Field-Programmable Gate Array (FPGA)\", \"start\": \"1985\" },\n    { \"id\": 39, \"content\": \"Invention of the Kalman Filter for Optimal Estimation\", \"start\": \"1960\" },\n    { \"id\": 40, \"content\": \"Development of Multi-Input Multi-Output (MIMO) for Wireless Communication\", \"start\": \"2000\" },\n    { \"id\": 41, \"content\": \"Introduction of Digital Radio\", \"start\": \"1990\" },\n    { \"id\": 42, \"content\": \"Introduction of Bluetooth Wireless Communication\", \"start\": \"1999\" },\n    { \"id\": 43, \"content\": \"First Digital TV Transmission\", \"start\": \"1996\" },\n    { \"id\": 44, \"content\": \"Invention of Turbo Codes for Error Correction\", \"start\": \"1993\" },\n    { \"id\": 45, \"content\": \"Development of the H.265 Video Codec\", \"start\": \"2013\" },\n    { \"id\": 46, \"content\": \"First Commercial Use of Software-Defined Networking (SDN)\", \"start\": \"2011\" },\n    { \"id\": 47, \"content\": \"First Use of Cognitive Radio\", \"start\": \"2010\" },\n    { \"id\": 48, \"content\": \"Introduction of Low-Power Wide-Area Network (LPWAN)\", \"start\": \"2016\" },\n    { \"id\": 49, \"content\": \"Introduction of the Universal Software Radio Peripheral (USRP)\", \"start\": \"2005\" },\n    { \"id\": 50, \"content\": \"First Commercial Use of Cloud-Based Signal Processing\", \"start\": \"2022\" }\n  ]\n}\n</code></pre> <p>This JSON timeline can be loaded into a <code>vis.js</code> application to visualize the history of electronic signal processing.</p>"},{"location":"prompts/08-timeline/#you-said","title":"You said:","text":"<p>Assume the file above is called events.json. Create a vis.js timeline viewer of these events. Create separate HTML and JavaScript file that will view the events using the vis.js timeline libraries.</p>"},{"location":"prompts/08-timeline/#chatgpt-said","title":"ChatGPT said:","text":"<p>To view the <code>events.json</code> file in a <code>vis.js</code> timeline, you need two files: an HTML file to create the page and include the necessary libraries, and a JavaScript file to load and display the events.</p> <p>Here's how to set it up:</p>"},{"location":"prompts/08-timeline/#1-html-file-indexhtml","title":"1. HTML File (<code>index.html</code>)","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n  &lt;title&gt;Signal Processing Milestones Timeline&lt;/title&gt;\n  &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js\"&gt;&lt;/script&gt;\n  &lt;link href=\"https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css\" rel=\"stylesheet\"&gt;\n  &lt;style&gt;\n    #timeline {\n      width: 100%;\n      height: 600px;\n      border: 1px solid lightgray;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;h1&gt;History of Electronic Signal Processing&lt;/h1&gt;\n  &lt;div id=\"timeline\"&gt;&lt;/div&gt;\n\n  &lt;script src=\"timeline.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"prompts/08-timeline/#2-javascript-file-timelinejs","title":"2. JavaScript File (<code>timeline.js</code>)","text":"<pre><code>// Load the events from the events.json file\nfetch('events.json')\n  .then(response =&gt; response.json())\n  .then(data =&gt; {\n    // Create a DataSet with the events\n    var items = new vis.DataSet(data.items);\n\n    // Configuration for the Timeline\n    var options = {\n      start: '1800',\n      end: '2030',\n      editable: false,\n      margin: {\n        item: 20,\n        axis: 40\n      }\n    };\n\n    // Create a Timeline and link it to the DOM element with id 'timeline'\n    var timeline = new vis.Timeline(document.getElementById('timeline'), items, options);\n  })\n  .catch(error =&gt; console.error('Error loading events:', error));\n</code></pre>"},{"location":"prompts/08-timeline/#3-events-json-file-eventsjson","title":"3. Events JSON File (<code>events.json</code>)","text":"<p>Save the <code>events.json</code> file that you already have in the same directory as the HTML and JavaScript files.</p>"},{"location":"prompts/08-timeline/#steps-to-run","title":"Steps to Run:","text":"<ol> <li>Ensure that you have all three files (<code>index.html</code>, <code>timeline.js</code>, and <code>events.json</code>) in the same directory.</li> <li>Open the <code>index.html</code> file in a web browser.</li> <li>The timeline should load, displaying the milestones in the history of electronic signal processing.</li> </ol> <p>This setup leverages the <code>vis.js</code> timeline library, fetching the <code>events.json</code> file and rendering it in a timeline view.</p>"},{"location":"prompts/08-timeline/#you-said_1","title":"You said:","text":"<p>How can I set the zoom level and keep it fixed?</p>"},{"location":"prompts/08-timeline/#chatgpt-said_1","title":"ChatGPT said:","text":"<p>To set the zoom level and keep it fixed in <code>vis.js</code>, you can adjust the <code>options</code> object. Specifically, you can use the <code>min</code> and <code>max</code> options to define the boundaries of the timeline, and the <code>zoomMin</code> and <code>zoomMax</code> options to prevent users from zooming in or out.</p> <p>Here's how you can modify the <code>options</code> object in your <code>timeline.js</code> file:</p>"},{"location":"prompts/08-timeline/#updated-timelinejs","title":"Updated <code>timeline.js</code>","text":"<pre><code>// Load the events from the events.json file\nfetch('events.json')\n  .then(response =&gt; response.json())\n  .then(data =&gt; {\n    // Create a DataSet with the events\n    var items = new vis.DataSet(data.items);\n\n    // Configuration for the Timeline\n    var options = {\n      start: '1800',\n      end: '2030',\n      min: '1800',  // Set the minimum visible date\n      max: '2030',  // Set the maximum visible date\n      zoomMin: 31536000000,  // Minimum zoom level (e.g., 1 year in milliseconds)\n      zoomMax: 315360000000, // Maximum zoom level (e.g., 10 years in milliseconds)\n      editable: false,\n      margin: {\n        item: 20,\n        axis: 40\n      }\n    };\n\n    // Create a Timeline and link it to the DOM element with id 'timeline'\n    var timeline = new vis.Timeline(document.getElementById('timeline'), items, options);\n  })\n  .catch(error =&gt; console.error('Error loading events:', error));\n</code></pre>"},{"location":"prompts/08-timeline/#explanation","title":"Explanation:","text":"<ol> <li> <p><code>min</code> and <code>max</code>: These options set the minimum and maximum dates that are visible on the timeline. The user cannot pan or scroll beyond these dates.</p> <ul> <li><code>min: '1800'</code>: The earliest visible date is set to 1800.</li> <li><code>max: '2030'</code>: The latest visible date is set to 2030.</li> <li> <p><code>zoomMin</code> and <code>zoomMax</code>: These options control the minimum and maximum zoom levels.</p> </li> <li> <p><code>zoomMin: 31536000000</code>: The minimum zoom level is set to 1 year, which means users can zoom in to view a single year.</p> </li> <li><code>zoomMax: 315360000000</code>: The maximum zoom level is set to 10 years, so users cannot zoom out beyond 10 years in the timeline.</li> </ul> </li> </ol> <p>You can adjust the <code>zoomMin</code> and <code>zoomMax</code> values based on how zoomed in or out you want the timeline to be.</p> <p>This configuration will keep the zoom level fixed and prevent users from zooming beyond the specified levels.</p>"},{"location":"prompts/08-timeline/#you-said_2","title":"You said:","text":"<p>I want the years to be about 1/4 inch apart and I don't want the users to ever zoom in to months. I want the initial view to be 1940 to 1980.</p>"},{"location":"prompts/08-timeline/#chatgpt-said_2","title":"ChatGPT said:","text":"<p>ChatGPT</p> <p>To achieve the following:</p> <ol> <li>Initial view from 1940 to 1980.</li> <li>Year spacing of about 1/4 inch apart.</li> <li>No zooming in to the month level (keep zoom level at the year level or higher).</li> </ol> <p>You can adjust the <code>options</code> for the timeline as follows:</p>"},{"location":"prompts/08-timeline/#updated-timelinejs_1","title":"Updated <code>timeline.js</code>","text":"<pre><code>// Load the events from the events.json file\nfetch('events.json')\n  .then(response =&gt; response.json())\n  .then(data =&gt; {\n    // Create a DataSet with the events\n    var items = new vis.DataSet(data.items);\n\n    // Configuration for the Timeline\n    var options = {\n      start: '1940',  // Set the initial visible start date\n      end: '1980',    // Set the initial visible end date\n      min: '1800',    // Set the minimum visible date\n      max: '2030',    // Set the maximum visible date\n      zoomMin: 31536000000,  // Minimum zoom level (e.g., 1 year in milliseconds)\n      zoomMax: 315360000000, // Maximum zoom level (e.g., 10 years in milliseconds)\n      moveable: false,  // Disable user panning\n      zoomable: true,   // Allow zooming but within bounds defined\n      editable: false,  // Disable editing\n\n      // Configure axis scaling to achieve approximately 1/4 inch per year\n      timeAxis: { scale: 'year', step: 1 },  // Ensure the axis shows year labels only\n      width: '100%',\n      margin: {\n        item: 20,\n        axis: 40\n      }\n    };\n\n    // Create a Timeline and link it to the DOM element with id 'timeline'\n    var timeline = new vis.Timeline(document.getElementById('timeline'), items, options);\n\n    // Ensure that users cannot zoom in past a certain level (e.g., months)\n    timeline.on('rangechange', function (event) {\n      var range = timeline.getWindow();\n      var interval = range.end - range.start;\n\n      // Lock the zoom level to years or more (no zooming into months)\n      if (interval &lt; 31536000000) {  // 1 year in milliseconds\n        timeline.setWindow(range.start, new Date(range.start.getFullYear() + 1, 0, 1));\n      }\n    });\n  })\n  .catch(error =&gt; console.error('Error loading events:', error));\n</code></pre>"},{"location":"prompts/08-timeline/#key-changes-explained","title":"Key Changes Explained:","text":"<ol> <li> <p>Initial view from 1940 to 1980: The <code>start</code> and <code>end</code> parameters are set to <code>'1940'</code> and <code>'1980'</code> respectively to ensure the timeline initially displays this range.</p> </li> <li> <p>Year spacing of 1/4 inch apart: This is handled by setting the <code>timeAxis.scale</code> to <code>'year'</code> and using <code>step: 1</code> to show each year clearly. You can adjust the overall zoom levels if you need the visual spacing to change, but this will ensure consistent year intervals.</p> </li> <li> <p>No zooming in to months: The <code>rangechange</code> event listener checks if the user tries to zoom in below 1 year (which would be months) and automatically resets the view to a yearly scale. The condition <code>interval &lt; 31536000000</code> ensures that if the range becomes less than 1 year, it will lock it back to 1 year.</p> </li> <li> <p>Moveable and zoomable options: You can disable user panning by setting <code>moveable: false</code> but still allow zooming within the specified year ranges.</p> </li> </ol> <p>This configuration will ensure the timeline starts with 1940 to 1980, shows about 1/4 inch between years, and prevents users from zooming in to the month level.</p>"},{"location":"prompts/08-timeline/#you-said_3","title":"You said:","text":"<p>How can I set the initial zoom level to show a 40 year span?</p>"},{"location":"prompts/08-timeline/#chatgpt-said_3","title":"ChatGPT said:","text":"<p>To set the initial zoom level to show a 40-year span when the timeline first loads, you can adjust the <code>start</code> and <code>end</code> properties in the <code>options</code> to cover the 40-year range. You don't need to rely on user interactions or event listeners for this. The <code>start</code> and <code>end</code> properties define the visible date range when the timeline is first rendered.</p> <p>Here's how you can configure it:</p>"},{"location":"prompts/08-timeline/#updated-timelinejs_2","title":"Updated <code>timeline.js</code>","text":"<pre><code>// Load the events from the events.json file\nfetch('events.json')\n  .then(response =&gt; response.json())\n  .then(data =&gt; {\n    // Create a DataSet with the events\n    var items = new vis.DataSet(data.items);\n\n    // Configuration for the Timeline\n    var options = {\n      start: '1940',  // Set the initial visible start date\n      end: '1980',    // Set the initial visible end date (40-year span)\n      min: '1800',    // Set the minimum visible date\n      max: '2030',    // Set the maximum visible date\n      zoomMin: 31536000000,  // Minimum zoom level (1 year in milliseconds)\n      zoomMax: 1261440000000, // Maximum zoom level (40 years in milliseconds)\n      moveable: false,  // Disable user panning\n      zoomable: true,   // Allow zooming but within bounds\n      editable: false,  // Disable editing\n\n      // Configure axis scaling to show the years clearly\n      timeAxis: { scale: 'year', step: 1 },  // Ensure the axis shows year labels only\n      width: '100%',\n      margin: {\n        item: 20,\n        axis: 40\n      }\n    };\n\n    // Create a Timeline and link it to the DOM element with id 'timeline'\n    var timeline = new vis.Timeline(document.getElementById('timeline'), items, options);\n\n    // Ensure that users cannot zoom in past a certain level (no zooming into months)\n    timeline.on('rangechange', function (event) {\n      var range = timeline.getWindow();\n      var interval = range.end - range.start;\n\n      // Lock the zoom level to years or more (no zooming into months)\n      if (interval &lt; 31536000000) {  // 1 year in milliseconds\n        timeline.setWindow(range.start, new Date(range.start.getFullYear() + 1, 0, 1));\n      }\n    });\n  })\n  .catch(error =&gt; console.error('Error loading events:', error));\n</code></pre>"},{"location":"prompts/08-timeline/#explanation_1","title":"Explanation:","text":"<ol> <li> <p>Initial 40-year span (1940 to 1980):</p> <ul> <li>The <code>start</code> is set to <code>'1940'</code>.</li> <li>The <code>end</code> is set to <code>'1980'</code>. This ensures that when the timeline first loads, it shows a 40-year period.</li> <li> <p>Prevent zooming in to months:</p> </li> <li> <p>The <code>rangechange</code> event listener checks if the user zooms in beyond a 1-year level and resets it if necessary.</p> </li> <li> <p>Zoom Levels:</p> </li> <li> <p><code>zoomMin</code> is set to <code>31536000000</code> (1 year in milliseconds) to prevent zooming in closer than a year.</p> </li> <li><code>zoomMax</code> is set to <code>1261440000000</code> (40 years in milliseconds), ensuring that the maximum zoom level covers a larger time span but starts with 40 years initially.</li> </ul> </li> </ol> <p>With this setup, the timeline will load showing the desired 40-year range (from 1940 to 1980), and users won't be able to zoom in closer than the yearly level.</p>"},{"location":"prompts/08-timeline/#references","title":"References","text":"<ul> <li>ChatGPT Dialog History</li> </ul>"},{"location":"prompts/09-wordcloud/","title":"Wordcloud Prompt","text":"<p>This section describes the challenges of using p5.js to create a wordcloud diagram for a signal processing course.  It also shows how the specialized JavaScript library wordcloud2.js does a much better job at placing words on a page.</p>"},{"location":"prompts/09-wordcloud/#p5js-prompt","title":"P5.js Prompt","text":"<pre><code>Create a list of the 50 most important terms in signal processing. \nCreate a JavaScript program that displays a word-cloud of\nthese words using the vis.js application.  Use size the words to\nreflect how often they are mentioned in a typical college-level\ntextbook on signal processing.\n</code></pre>"},{"location":"prompts/09-wordcloud/#chatgpt-response","title":"ChatGPT Response","text":"<p>Here's a list of 50 important terms in signal processing along with their relative frequency of mention in a typical college-level textbook. The words with higher importance will have a larger font size in the word cloud.</p>"},{"location":"prompts/09-wordcloud/#signal-processing-terms-and-frequencies","title":"Signal Processing Terms and Frequencies","text":"<ol> <li>Signal (80)</li> <li>Noise (75)</li> <li>Filter (70)</li> <li>Fourier Transform (65)</li> <li>Sampling (60)</li> <li>Convolution (60)</li> <li>Frequency (58)</li> <li>Time Domain (55)</li> <li>Spectral Analysis (50)</li> <li>Amplitude (48)</li> <li>Discrete Fourier Transform (DFT) (48)</li> <li>Impulse Response (47)</li> <li>Phase (46)</li> <li>Quantization (45)</li> <li>Z-Transform (45)</li> <li>Laplace Transform (42)</li> <li>Modulation (40)</li> <li>Aliasing (40)</li> <li>Bandpass Filter (39)</li> <li>Lowpass Filter (39)</li> <li>Transfer Function (38)</li> <li>Linear Time-Invariant (LTI) Systems (37)</li> <li>Digital Filter (36)</li> <li>Decimation (35)</li> <li>Interpolation (35)</li> <li>Autocorrelation (34)</li> <li>Power Spectrum (33)</li> <li>Windowing (33)</li> <li>Cross-correlation (33)</li> <li>Downsampling (32)</li> <li>Upsampling (32)</li> <li>Sinc Function (30)</li> <li>Butterworth Filter (30)</li> <li>Chebyshev Filter (29)</li> <li>Wavelet Transform (28)</li> <li>Hilbert Transform (27)</li> <li>Nyquist Rate (26)</li> <li>Sampling Theorem (25)</li> <li>Impulse (24)</li> <li>Bandwidth (23)</li> <li>Oversampling (23)</li> <li>Step Response (22)</li> <li>Causal System (22)</li> <li>Non-causal System (21)</li> <li>Bode Plot (20)</li> <li>Frequency Response (19)</li> <li>Zero-Padding (19)</li> <li>Notch Filter (18)</li> <li>Phase Shift (18)</li> <li>Fast Fourier Transform (FFT) (18)</li> </ol>"},{"location":"prompts/09-wordcloud/#javascript-program-to-create-a-word-cloud-using-visjs","title":"JavaScript Program to Create a Word Cloud using <code>vis.js</code>","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Signal Processing Word Cloud&lt;/title&gt;\n    &lt;script type=\"text/javascript\" src=\"https://unpkg.com/vis-network/standalone/umd/vis-network.min.js\"&gt;&lt;/script&gt;\n    &lt;style&gt;\n        #network {\n            width: 100%;\n            height: 100vh;\n            border: 1px solid lightgray;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div id=\"network\"&gt;&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    // Data for the word cloud\n    const words = [\n        {label: \"Signal\", value: 80},\n        {label: \"Noise\", value: 75},\n        {label: \"Filter\", value: 70},\n        {label: \"Fourier Transform\", value: 65},\n        {label: \"Sampling\", value: 60},\n        {label: \"Convolution\", value: 60},\n        {label: \"Frequency\", value: 58},\n        {label: \"Time Domain\", value: 55},\n        {label: \"Spectral Analysis\", value: 50},\n        {label: \"Amplitude\", value: 48},\n        {label: \"Discrete Fourier Transform (DFT)\", value: 48},\n        {label: \"Impulse Response\", value: 47},\n        {label: \"Phase\", value: 46},\n        {label: \"Quantization\", value: 45},\n        {label: \"Z-Transform\", value: 45},\n        {label: \"Laplace Transform\", value: 42},\n        {label: \"Modulation\", value: 40},\n        {label: \"Aliasing\", value: 40},\n        {label: \"Bandpass Filter\", value: 39},\n        {label: \"Lowpass Filter\", value: 39},\n        {label: \"Transfer Function\", value: 38},\n        {label: \"Linear Time-Invariant (LTI) Systems\", value: 37},\n        {label: \"Digital Filter\", value: 36},\n        {label: \"Decimation\", value: 35},\n        {label: \"Interpolation\", value: 35},\n        {label: \"Autocorrelation\", value: 34},\n        {label: \"Power Spectrum\", value: 33},\n        {label: \"Windowing\", value: 33},\n        {label: \"Cross-correlation\", value: 33},\n        {label: \"Downsampling\", value: 32},\n        {label: \"Upsampling\", value: 32},\n        {label: \"Sinc Function\", value: 30},\n        {label: \"Butterworth Filter\", value: 30},\n        {label: \"Chebyshev Filter\", value: 29},\n        {label: \"Wavelet Transform\", value: 28},\n        {label: \"Hilbert Transform\", value: 27},\n        {label: \"Nyquist Rate\", value: 26},\n        {label: \"Sampling Theorem\", value: 25},\n        {label: \"Impulse\", value: 24},\n        {label: \"Bandwidth\", value: 23},\n        {label: \"Oversampling\", value: 23},\n        {label: \"Step Response\", value: 22},\n        {label: \"Causal System\", value: 22},\n        {label: \"Non-causal System\", value: 21},\n        {label: \"Bode Plot\", value: 20},\n        {label: \"Frequency Response\", value: 19},\n        {label: \"Zero-Padding\", value: 19},\n        {label: \"Notch Filter\", value: 18},\n        {label: \"Phase Shift\", value: 18},\n        {label: \"Fast Fourier Transform (FFT)\", value: 18}\n    ];\n\n    // Create nodes for the word cloud\n    const nodes = words.map((word, index) =&gt; ({\n        id: index,\n        label: word.label,\n        font: {\n            size: word.value * 1.5\n        },\n        value: word.value\n    }));\n\n    // Create a network\n    const container = document.getElementById('network');\n    const data = {nodes: new vis.DataSet(nodes)};\n    const options = {\n        nodes: {\n            shape: 'text',\n        },\n        physics: {\n            enabled: false\n        },\n        layout: {\n            randomSeed: 42 // Makes layout deterministic\n        }\n    };\n    const network = new vis.Network(container, data, options);\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"prompts/09-wordcloud/#instructions","title":"Instructions","text":"<ol> <li>Open a new HTML file.</li> <li>Copy and paste the code above.</li> <li>Save and open the file in a web browser.</li> </ol> <p>This will create a word cloud, with larger words reflecting the more frequently mentioned terms in a typical signal processing textbook. The <code>vis.js</code> library uses physics-based layout, but here it is disabled for a word-cloud-like appearance.</p>"},{"location":"prompts/09-wordcloud/#a-better-way-use-the-wordcloud2js-javascript-library","title":"A Better Way: Use the wordcloud2.js JavaScript Library","text":""},{"location":"prompts/09-wordcloud/#sample-wordcloud2-prompt","title":"Sample wordcloud2 Prompt","text":"<pre><code>Create a new javascript program using the wordcloud2.js program here:\n\nhttps://github.com/timdream/wordcloud2.js\n\nAssume that the data is in the file words.json\n</code></pre>"},{"location":"prompts/09-wordcloud/#response","title":"Response","text":"<p>Here\u2019s how you can create a word cloud using the wordcloud2.js library with data from a words.json file. First, ensure you have the wordcloud2.js library included in your project.</p>"},{"location":"prompts/09-wordcloud/#step-1-include-wordcloud2js","title":"Step 1: Include wordcloud2.js","text":"<p>Download or link to the wordcloud2.js library from here or use a CDN link directly in your HTML file.</p>"},{"location":"prompts/09-wordcloud/#step-2-create-the-html-file","title":"Step 2: Create the HTML file","text":"<p>Here\u2019s an HTML file that includes wordcloud2.js and loads the word data from words.json:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Signal Processing Word Cloud&lt;/title&gt;\n    &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/wordcloud2.js/1.0.6/wordcloud2.min.js\"&gt;&lt;/script&gt;\n    &lt;style&gt;\n        #wordcloud {\n            width: 100%;\n            height: 100vh;\n            border: 1px solid lightgray;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div id=\"wordcloud\"&gt;&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    // Load the JSON file\n    fetch('words.json')\n        .then(response =&gt; response.json())\n        .then(data =&gt; {\n            // Convert the data to the format expected by wordcloud2.js\n            const words = data.words.map(word =&gt; [word.label, word.value]);\n\n            // Generate the word cloud\n            WordCloud(document.getElementById('wordcloud'), {\n                list: words,\n                gridSize: Math.round(16 * window.innerWidth / 1024),\n                weightFactor: 0.5,  // Adjusts the size of the words\n                fontFamily: 'Times, serif',\n                color: 'random-dark',\n                rotateRatio: 0.5,\n                rotationSteps: 2,\n                backgroundColor: '#f0f0f0'\n            });\n        })\n        .catch(error =&gt; console.error('Error loading the JSON file:', error));\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"prompts/09-wordcloud/#step-3-json-data-wordsjson","title":"Step 3: JSON Data (words.json)","text":"<p>Here\u2019s the words.json file that contains the word data:</p> <pre><code>{\n  \"words\": [\n    {\"label\": \"Signal\", \"value\": 80},\n    {\"label\": \"Noise\", \"value\": 75},\n    {\"label\": \"Filter\", \"value\": 70},\n    {\"label\": \"Fourier Transform\", \"value\": 65},\n    {\"label\": \"Sampling\", \"value\": 60},\n    {\"label\": \"Convolution\", \"value\": 60},\n    {\"label\": \"Frequency\", \"value\": 58},\n    {\"label\": \"Time Domain\", \"value\": 55},\n    {\"label\": \"Spectral Analysis\", \"value\": 50},\n    {\"label\": \"Amplitude\", \"value\": 48},\n    {\"label\": \"Discrete Fourier Transform (DFT)\", \"value\": 48},\n    {\"label\": \"Impulse Response\", \"value\": 47},\n    {\"label\": \"Phase\", \"value\": 46},\n    {\"label\": \"Quantization\", \"value\": 45},\n    {\"label\": \"Z-Transform\", \"value\": 45},\n    {\"label\": \"Laplace Transform\", \"value\": 42},\n    {\"label\": \"Modulation\", \"value\": 40},\n    {\"label\": \"Aliasing\", \"value\": 40},\n    {\"label\": \"Bandpass Filter\", \"value\": 39},\n    {\"label\": \"Lowpass Filter\", \"value\": 39},\n    {\"label\": \"Transfer Function\", \"value\": 38},\n    {\"label\": \"Linear Time-Invariant (LTI) Systems\", \"value\": 37},\n    {\"label\": \"Digital Filter\", \"value\": 36},\n    {\"label\": \"Decimation\", \"value\": 35},\n    {\"label\": \"Interpolation\", \"value\": 35},\n    {\"label\": \"Autocorrelation\", \"value\": 34},\n    {\"label\": \"Power Spectrum\", \"value\": 33},\n    {\"label\": \"Windowing\", \"value\": 33},\n    {\"label\": \"Cross-correlation\", \"value\": 33},\n    {\"label\": \"Downsampling\", \"value\": 32},\n    {\"label\": \"Upsampling\", \"value\": 32},\n    {\"label\": \"Sinc Function\", \"value\": 30},\n    {\"label\": \"Butterworth Filter\", \"value\": 30},\n    {\"label\": \"Chebyshev Filter\", \"value\": 29},\n    {\"label\": \"Wavelet Transform\", \"value\": 28},\n    {\"label\": \"Hilbert Transform\", \"value\": 27},\n    {\"label\": \"Nyquist Rate\", \"value\": 26},\n    {\"label\": \"Sampling Theorem\", \"value\": 25},\n    {\"label\": \"Impulse\", \"value\": 24},\n    {\"label\": \"Bandwidth\", \"value\": 23},\n    {\"label\": \"Oversampling\", \"value\": 23},\n    {\"label\": \"Step Response\", \"value\": 22},\n    {\"label\": \"Causal System\", \"value\": 22},\n    {\"label\": \"Non-causal System\", \"value\": 21},\n    {\"label\": \"Bode Plot\", \"value\": 20},\n    {\"label\": \"Frequency Response\", \"value\": 19},\n    {\"label\": \"Zero-Padding\", \"value\": 19},\n    {\"label\": \"Notch Filter\", \"value\": 18},\n    {\"label\": \"Phase Shift\", \"value\": 18},\n    {\"label\": \"Fast Fourier Transform (FFT)\", \"value\": 18}\n  ]\n}\n</code></pre>"},{"location":"prompts/09-wordcloud/#explanation-of-the-code","title":"Explanation of the Code","text":"<p>\u2022   HTML: The word cloud is displayed in the #wordcloud div, which fills the entire viewport. \u2022   JavaScript: \u2022   The fetch() function loads the words.json file. \u2022   The words are mapped to the format expected by wordcloud2.js, which is a list of arrays where each array contains a word and its weight (size). \u2022   The WordCloud() function generates the word cloud in the target element (#wordcloud). \u2022   The gridSize and weightFactor properties help control the size and spacing of the words. You can adjust these values to further fine-tune the appearance.</p> <p>Notes:</p> <ol> <li>wordcloud2.js: Ensure you have the library correctly referenced via the CDN link or by downloading it.</li> <li>File Paths: The words.json file should be in the same directory as your HTML file, or modify the fetch() path if it is located elsewhere.</li> </ol> <p>This setup will generate a word cloud based on the word frequencies in the JSON file!</p>"},{"location":"prompts/10-hard-concepts-simulations/","title":"Hard Concept Simulations","text":"<pre><code>What are the most difficult concepts to understand\nin a college level course on signal processing\nthat can be explained by high-quality\ninteractive simulations?\n\nFor each section, return it in a level 3 markdown section.\n</code></pre>"},{"location":"prompts/10-hard-concepts-simulations/#chatgpt-response","title":"ChatGPT Response","text":"<p>o1-preview Thought for 8 seconds.</p> <p>Understanding signal processing at the college level involves grappling with abstract mathematical concepts and their practical implications. High-quality interactive simulations can bridge the gap between theory and practice by visualizing these complex ideas. Here are some of the most challenging concepts that benefit significantly from interactive simulations:</p>"},{"location":"prompts/10-hard-concepts-simulations/#1-sampling-and-aliasing","title":"1. Sampling and Aliasing","text":"<ul> <li>Why It's Difficult: The Nyquist-Shannon sampling theorem and the concept of aliasing involve understanding how continuous signals are represented in discrete form. Grasping how undersampling leads to frequency overlap (aliasing) can be non-intuitive.</li> <li>How Simulations Help: Interactive tools can demonstrate how varying the sampling rate affects the reconstructed signal. By adjusting parameters in real-time, students can visualize aliasing effects and the importance of adhering to the Nyquist rate.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#2-convolution-and-filtering","title":"2. Convolution and Filtering","text":"<ul> <li>Why It's Difficult: Convolution integrates two functions to produce a third, reflecting how the shape of one is modified by the other. The abstract nature of this operation makes it hard to visualize.</li> <li>How Simulations Help: Simulations can animate the convolution process, showing step-by-step how the input signal interacts with the impulse response of a system. Visualizing the overlap and area under the curve at each step clarifies the convolution integral.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#3-fourier-transform-and-frequency-domain-analysis","title":"3. Fourier Transform and Frequency Domain Analysis","text":"<ul> <li>Why It's Difficult: Transitioning between time and frequency domains requires understanding how signals decompose into sinusoidal components, which can be mathematically intensive.</li> <li>How Simulations Help: Interactive Fourier transform tools allow students to see how changes in the time domain affect the frequency domain representation and vice versa. By manipulating signal parameters, they can observe the resulting spectral changes.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#4-z-transform-and-system-analysis","title":"4. Z-Transform and System Analysis","text":"<ul> <li>Why It's Difficult: The Z-transform extends the concept of the Fourier transform to complex frequency domains, which is essential for analyzing digital systems but is abstract.</li> <li>How Simulations Help: Visual tools can map poles and zeros in the Z-plane, helping students understand system stability and frequency response. Interactive plots can show how moving poles and zeros affects the system's behavior.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#5-pole-zero-plots-and-system-stability","title":"5. Pole-Zero Plots and System Stability","text":"<ul> <li>Why It's Difficult: Understanding how the location of poles and zeros influences system characteristics like stability and frequency response requires spatial reasoning in the complex plane.</li> <li>How Simulations Help: Simulations can dynamically illustrate how adjusting poles and zeros alters the system's response. Real-time feedback reinforces the relationship between pole-zero placement and system performance.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#6-time-frequency-analysis-short-time-fourier-transform-and-wavelets","title":"6. Time-Frequency Analysis (Short-Time Fourier Transform and Wavelets)","text":"<ul> <li>Why It's Difficult: Analyzing non-stationary signals requires understanding how frequency components evolve over time, which is more complex than standard Fourier analysis.</li> <li>How Simulations Help: Interactive spectrograms and wavelet transforms allow students to explore how signals behave in both time and frequency domains simultaneously. Adjusting window sizes or wavelet functions shows the trade-offs between time and frequency resolution.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#7-modulation-and-demodulation-techniques","title":"7. Modulation and Demodulation Techniques","text":"<ul> <li>Why It's Difficult: Concepts like amplitude, frequency, and phase modulation involve altering one aspect of a carrier signal, which can be hard to visualize.</li> <li>How Simulations Help: Simulations can animate how modulating signals affect carrier waves. Visual representations of the modulation process help students grasp how information is encoded and retrieved.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#8-multirate-signal-processing-upsampling-and-downsampling","title":"8. Multirate Signal Processing (Upsampling and Downsampling)","text":"<ul> <li>Why It's Difficult: Understanding how changing the sampling rate affects a signal, and the need for anti-aliasing filters, involves complex concepts in both time and frequency domains.</li> <li>How Simulations Help: Interactive tools can show the effects of upsampling and downsampling on signals, including the introduction of aliasing or imaging artifacts. Visualizing filter applications reinforces the theoretical need for them.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#9-quantization-effects-and-finite-word-length","title":"9. Quantization Effects and Finite Word Length","text":"<ul> <li>Why It's Difficult: Quantization introduces errors that can accumulate, affecting system performance in subtle ways that are hard to predict mathematically.</li> <li>How Simulations Help: Simulating quantization allows students to see how reducing bit depth affects signal quality. Visual and auditory feedback can demonstrate the impact of quantization noise.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#10-adaptive-filtering-and-signal-estimation","title":"10. Adaptive Filtering and Signal Estimation","text":"<ul> <li>Why It's Difficult: Adaptive filters adjust their parameters in real-time, which involves complex algorithms like Least Mean Squares (LMS) that can be mathematically intensive.</li> <li>How Simulations Help: Interactive simulations can show how adaptive filters respond to changing signal conditions, visualizing the convergence process and the impact on signal estimation.</li> </ul>"},{"location":"prompts/10-hard-concepts-simulations/#conclusion","title":"Conclusion","text":"<p>Interactive simulations serve as powerful educational tools in signal processing by making abstract concepts tangible. They enable students to experiment with parameters, observe outcomes instantaneously, and develop an intuitive understanding of complex theories. By incorporating these simulations into the curriculum, educators can enhance comprehension and foster a deeper engagement with the subject matter.</p>"},{"location":"prompts/11-electronic-music/","title":"Signal Processing in Electronic Music","text":"<p>Prompt</p> <p>Create a fun and engaging story about how signal processing was used to influence the use of synthesizers in rock and pop music.  Mention some of the key innovators in both the creation of synthesizers and other innovators that used these synthesizers to create innovative music.</p>"},{"location":"prompts/11-electronic-music/#response","title":"Response","text":"<p>In 1964, Bob Moog's basement workshop birthed the first commercial synthesizer. His voltage-controlled oscillator design revolutionized electronic music, catching the ear of Wendy Carlos, who used it to create the groundbreaking \"Switched-On Bach\" in 1968.</p> <p>Meanwhile, Don Buchla was developing his own synthesizer on the West Coast. His abstract approach attracted experimental musicians like Morton Subotnick, who created \"Silver Apples of the Moon\" - the first electronic work commissioned by a classical music label.</p> <p>Keith Emerson brought synthesizers into rock when he ordered one of Moog's first modular systems. His revolutionary use of the Moog in \"Lucky Man\" by Emerson, Lake &amp; Palmer introduced the synth solo to rock music. The instrument's popularity exploded when Moog introduced the portable Minimoog in 1970.</p> <p>Signal processing innovation continued with Dave Smith's Prophet-5 in 1978, the first fully programmable polyphonic synthesizer. Its ability to save patches made it a favorite of artists like Michael Jackson and Madonna. Japanese companies like Roland and Yamaha soon followed with their own innovations, leading to the distinctive sounds of 80s pop through instruments like the iconic Roland TR-808 drum machine and the Yamaha DX7.</p> <p>A full circle moment came when Stevie Wonder, who had helped popularize synthesizers with albums like \"Music of My Mind,\" received the first Kurzweil K250 in 1983. Ray Kurzweil had developed this advanced digital synthesizer specifically for Wonder, using signal processing to accurately recreate acoustic instrument sounds.</p>"},{"location":"prompts/11-electronic-music/#the-moog-synthesizer","title":"The Moog Synthesizer","text":"<p>Bob Moog's breakthrough came from applying his knowledge of electronics and signal processing to musical instruments. His key innovation was voltage-controlled circuits - using voltage changes to control different aspects of sound like pitch, amplitude, and filtering.</p> <p>The Moog synthesizer used subtractive synthesis, starting with rich waveforms from voltage-controlled oscillators (VCOs) and sculpting them through voltage-controlled filters (VCFs) and voltage-controlled amplifiers (VCAs). The distinctive \"Moog sound\" came largely from his ladder filter design, which used cascaded transistor pairs to create a 24 dB/octave low-pass filter with a warm, organic resonance.</p> <p>His modular system let musicians patch these components together in endless combinations. For example, using voltage from one oscillator to control another created frequency modulation effects, while routing control voltages through envelope generators shaped how sounds evolved over time.</p> <p>In 1970, Moog introduced transistor op-amps in the Minimoog Model D, replacing expensive discrete components. This made synthesizers more reliable and affordable while maintaining the warm analog sound. The Minimoog's architecture - three oscillators, noise generator, mixer, filter, and dual envelope generators - became a template for many future synthesizers.</p> <p>His work influenced not just music but signal processing theory. The Moog filter's non-linear behavior and musical qualities sparked research into analog circuit modeling and digital filter design that continues today.</p>"},{"location":"prompts/11-electronic-music/#how-keith-emerson-used-synthesizers-in-innovative-ways","title":"How Keith Emerson used Synthesizers in Innovative Ways","text":"<p>Keith Emerson revolutionized synthesizer performance in several ways:</p> <p>His physical approach to the Moog modular system - twisting knobs aggressively, pushing the instrument to its limits, and even stabbing knives into the keyboard during performances - transformed the synthesizer from a studio tool into a dynamic live instrument.</p> <p>Keith Emerson pioneered techniques like:</p> <ul> <li>Using the ribbon controller for dramatic pitch bends and glides in songs like \"Lucky Man\"</li> <li>Creating complex layered sounds by stacking multiple oscillators with slight detuning</li> <li>Employing the sample-and-hold module for random, bubbly effects in \"Brain Salad Surgery\"</li> <li>Developing rapid filter sweeps that became a signature sound in progressive rock</li> </ul> <p>Emerson's work with ELP demonstrated how synthesizers could take center stage in rock music, particularly in pieces like \"Tarkus\" where he used the Moog as both a lead and textural instrument. This influenced countless progressive rock bands and helped establish synthesizers as serious instruments rather than just novelty devices.</p>"},{"location":"prompts/11-electronic-music/#dave-smiths-prophet-5","title":"Dave Smith's Prophet-5","text":"<p>The Prophet-5's key innovation was memory storage - it could save 40 different sound configurations, called patches. This meant musicians could instantly recall complex sounds during performances instead of manually recreating them.</p> <p>Its polyphonic design allowed playing 5 notes simultaneously, using 5 complete synthesizer voices. Each voice contained:</p> <ul> <li>Two VCOs with multiple waveforms</li> <li>A resonant low-pass filter</li> <li>Two ADSR envelope generators</li> <li>A comprehensive modulation section</li> </ul> <p>Notable users and applications:</p> <ul> <li>ABBA used it extensively on \"The Visitors\"</li> <li>Japan employed it throughout \"Tin Drum\"</li> <li>Peter Gabriel featured it prominently on his third album</li> <li>John Carpenter utilized it for film scores like \"Escape from New York\"</li> </ul> <p>The Prophet-5's microprocessor control system also paved the way for MIDI implementation in later synthesizers, fundamentally changing how electronic instruments could communicate and be controlled.</p>"},{"location":"prompts/11-electronic-music/#the-kurzweil-k250","title":"The Kurzweil K250","text":"<p>The Kurzweil K250 marked a significant shift in Stevie Wonder's sound during the mid-1980s. The instrument used advanced sampling technology and digital signal processing to recreate acoustic instruments with unprecedented realism.</p> <p>Wonder particularly utilized:</p> <ul> <li>The K250's realistic piano and string samples on \"In Square Circle\"</li> <li>Its ability to layer multiple sampled instruments on \"Love's in Need of Love Today\"</li> <li>The extensive MIDI implementation for complex arrangements</li> <li>The tactile controls specially designed for visually impaired users</li> </ul> <p>The K250's groundbreaking feature was its \"Contoured Sound Modeling,\" which captured the subtle variations in acoustic instrument timbre across different velocities and registers. Wonder leveraged this to create more nuanced performances than previous synthesizers allowed.</p> <p>He collaborated directly with Ray Kurzweil to refine the instrument's interface, leading to innovations in accessibility features that influenced future electronic instruments.</p>"},{"location":"prompts/11-stories/","title":"Storytelling","text":"<pre><code>Please tell a fun and engaging story about actress\nHedy Lamarr and her patents the basis for WiFi.\nMake it demonstrate the intelligence of Hedy and\nher courage to overcome being a stereotype of an\nactress with no brains.\n</code></pre>"},{"location":"prompts/11-stories/#chatgpt-response","title":"ChatGPT Response","text":""},{"location":"prompts/11-stories/#chatgpt-said-a-story-of-hedy-lamarr-beauty-brains-and-bravery","title":"ChatGPT Said: A Story of Hedy Lamarr, Beauty, Brains, and Bravery","text":"<p>In the golden age of Hollywood, there was a star whose beauty captivated millions. Hedy Lamarr, often called \"the most beautiful woman in the world,\" graced the silver screen with her presence, playing glamorous roles that showcased her elegance and charm. But behind those dazzling eyes and enchanting smile lay a mind that was anything but ordinary.</p> <p>Hedy's story is one of genius masked by stardom, a tale of how she shattered stereotypes and left a legacy far beyond the confines of a movie set.</p>"},{"location":"prompts/11-stories/#the-war-effort","title":"The War Effort","text":"<p>The year was 1940, and the world was embroiled in the chaos of World War II. Hedy, who had fled her homeland of Austria to escape the rise of Nazism, was deeply troubled by the devastation she saw. By day, she was the epitome of Hollywood glamour, adored by fans and photographers alike. By night, she worked tirelessly on ideas that could change the course of history.</p> <p>Hedy was no stranger to technology. Her first husband, Friedrich Mandl, was an Austrian arms manufacturer, and though their marriage was unhappy, Hedy had absorbed a wealth of knowledge about weaponry and communication systems during their time together. This knowledge, combined with her natural curiosity and intelligence, set her apart from her Hollywood peers.</p>"},{"location":"prompts/11-stories/#the-problem","title":"The Problem","text":"<p>One evening, as she listened to a radio broadcast about Allied ships being sunk by German torpedoes, an idea sparked in Hedy's mind. The enemy was jamming the radio signals used to guide torpedoes, rendering them ineffective. Hedy thought, What if there were a way to prevent the enemy from interfering with the signal?</p> <p>This was no idle question. Hedy, determined to contribute to the war effort, began sketching out solutions.</p>"},{"location":"prompts/11-stories/#the-partner","title":"The Partner","text":"<p>Enter George Antheil, a quirky avant-garde composer who had dabbled in mechanics. Hedy met George at a dinner party, and the two quickly bonded over their shared love of problem-solving. Hedy explained her idea: a \"frequency-hopping\" system that could prevent radio signals from being intercepted or jammed.</p> <p>Together, they worked late into the night, turning Hedy's vision into a reality. George brought his knowledge of player pianos to the table, proposing that the frequency changes could be synchronized using a punched paper roll, like the ones used in automated pianos. The result was a revolutionary concept: a secure communication system that jumped between frequencies, making it nearly impossible for enemies to jam or intercept.</p>"},{"location":"prompts/11-stories/#the-patent","title":"The Patent","text":"<p>In 1942, Hedy and George were awarded a U.S. patent for their invention, officially titled a \"Secret Communication System.\" However, when they presented their idea to the U.S. Navy, they were dismissed. The Navy couldn't fathom that an actress and a composer could contribute to military technology. Instead, they suggested Hedy use her fame to sell war bonds.</p> <p>Undeterred, Hedy threw herself into the war effort in other ways, raising millions of dollars in bonds. But she never forgot her invention, even as the world dismissed her intelligence.</p>"},{"location":"prompts/11-stories/#the-legacy","title":"The Legacy","text":"<p>Decades later, the world caught up with Hedy Lamarr. The principles of her frequency-hopping system became the foundation for modern wireless communication technologies, including Wi-Fi, Bluetooth, and GPS. Today, her contributions are celebrated not only in the world of technology but also as a reminder that brilliance knows no boundaries---be it gender, profession, or appearance.</p> <p>Hedy Lamarr proved that being a Hollywood icon and a technological pioneer were not mutually exclusive. Her story is one of courage, intelligence, and determination, an enduring reminder that the world should never underestimate a brilliant mind, no matter where it shines.</p>"},{"location":"prompts/11-stories/#epilogue","title":"Epilogue","text":"<p>In 1997, long after Hedy had retired from the spotlight, she received the prestigious Electronic Frontier Foundation Pioneer Award for her contributions to technology. When asked about her dual legacy as a star and an inventor, she famously quipped, \"Any girl can be glamorous. All you have to do is stand still and look stupid. But to be innovative---that's something else entirely.\"</p> <p>And with that, Hedy Lamarr secured her place in history---not just as a beauty, but as a trailblazer who changed the world.</p>"},{"location":"prompts/12-equations/","title":"Generating Signal Processing Equations","text":""},{"location":"prompts/12-equations/#prompt","title":"Prompt","text":"<p>Prompt</p> <p>Create a list of the 25 most commonly used equations in a college level signal processing course.</p> <p>For each equation, return the following:</p> <ol> <li>The name of the equation in markdown level 4.</li> <li>Within the body, return the equation in LaTeX format</li> <li>Surround the equation with dollar signs</li> <li>For each variable in the equation, add a \"where:\" that defines each variable</li> <li>Put blank lines around the list of variables</li> <li>Wrap the variables names in dollar signs</li> </ol> <p>Examples:</p> <p>After the first 25 equations were generated I used the following prompt:</p> <p>Prompt</p> <p>Excellent! Please continue with the next 25 most commonly used equations in a signal processing course.</p>"},{"location":"prompts/12-equations/#slope-and-intercept","title":"Slope and Intercept","text":"<p>\\(y = m * x + b\\)</p> <p>where:</p> <ul> <li>\\(y\\) is the vertical axis</li> <li>\\(x\\) is the horizontal axis</li> <li>\\(m\\) is the slope</li> <li>\\(b\\) is the intercept</li> </ul>"},{"location":"prompts/12-equations/#area-of-a-circle","title":"Area of a Circle","text":"<p>\\(A = 2\\pi r^2\\) where:</p> <ul> <li>\\(A\\) is the area of the circle</li> <li>\\(r\\) is the radius</li> </ul>"},{"location":"prompts/12-equations/#responses","title":"Responses","text":"<p>Note that the 100 top equations are group in four ranges:</p> <ol> <li>1-25</li> <li>26-50</li> <li>50-75</li> <li>75-100</li> </ol>"},{"location":"prompts/12-equations/#equations-1-25","title":"Equations 1-25","text":""},{"location":"prompts/12-equations/#discrete-fourier-transform-dft","title":"Discrete Fourier Transform (DFT)","text":"<p>\\(X[k] = \\sum_{n=0}^{N-1} x[n]e^{-j2\\pi kn/N}\\)</p> <p>where:</p> <ul> <li>\\(X[k]\\) is the frequency domain representation</li> <li>\\(x[n]\\) is the time domain signal</li> <li>\\(N\\) is the number of samples</li> <li>\\(k\\) is the frequency index</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#inverse-discrete-fourier-transform-idft","title":"Inverse Discrete Fourier Transform (IDFT)","text":"<p>\\(x[n] = \\frac{1}{N}\\sum_{k=0}^{N-1} X[k]e^{j2\\pi kn/N}\\)</p> <p>where:</p> <ul> <li>\\(x[n]\\) is the reconstructed time domain signal</li> <li>\\(X[k]\\) is the frequency domain representation</li> <li>\\(N\\) is the number of samples</li> <li>\\(k\\) is the frequency index</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#sampling-theorem-nyquist-rate","title":"Sampling Theorem (Nyquist Rate)","text":"<p>\\(f_s \\geq 2f_{max}\\)</p> <p>where:</p> <ul> <li>\\(f_s\\) is the sampling frequency</li> <li>\\(f_{max}\\) is the highest frequency component in the signal</li> </ul>"},{"location":"prompts/12-equations/#z-transform","title":"Z-Transform","text":"<p>\\(X(z) = \\sum_{n=-\\infty}^{\\infty} x[n]z^{-n}\\)</p> <p>where:</p> <ul> <li>\\(X(z)\\) is the z-domain representation</li> <li>\\(x[n]\\) is the time domain signal</li> <li>\\(z\\) is the complex variable</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#inverse-z-transform","title":"Inverse Z-Transform","text":"<p>\\(x[n] = \\frac{1}{2\\pi j}\\oint_C X(z)z^{n-1}dz\\)</p> <p>where:</p> <ul> <li>\\(x[n]\\) is the time domain signal</li> <li>\\(X(z)\\) is the z-domain representation</li> <li>\\(C\\) is the contour of integration</li> <li>\\(z\\) is the complex variable</li> </ul>"},{"location":"prompts/12-equations/#convolution-sum","title":"Convolution Sum","text":"<p>\\(y[n] = x[n] * h[n] = \\sum_{k=-\\infty}^{\\infty} x[k]h[n-k]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the output signal</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(h[n]\\) is the impulse response</li> <li>\\(k\\) is the summation index</li> </ul>"},{"location":"prompts/12-equations/#correlation","title":"Correlation","text":"<p>\\(R_{xy}[n] = \\sum_{k=-\\infty}^{\\infty} x[k]y[k+n]\\)</p> <p>where:</p> <ul> <li>\\(R_{xy}[n]\\) is the correlation sequence</li> <li>\\(x[k]\\) is the first signal</li> <li>\\(y[k]\\) is the second signal</li> <li>\\(n\\) is the lag variable</li> </ul>"},{"location":"prompts/12-equations/#power-spectral-density","title":"Power Spectral Density","text":"<p>\\(P_{xx}(e^{j\\omega}) = \\sum_{n=-\\infty}^{\\infty} R_{xx}[n]e^{-j\\omega n}\\)</p> <p>where:</p> <ul> <li>\\(P_{xx}(e^{j\\omega})\\) is the power spectral density</li> <li>\\(R_{xx}[n]\\) is the autocorrelation sequence</li> <li>\\(\\omega\\) is the angular frequency</li> <li>\\(n\\) is the lag variable</li> </ul>"},{"location":"prompts/12-equations/#first-difference-equation","title":"First Difference Equation","text":"<p>\\(y[n] = y[n-1] + x[n]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the output signal</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#moving-average-filter","title":"Moving Average Filter","text":"<p>\\(y[n] = \\frac{1}{M}\\sum_{k=0}^{M-1} x[n-k]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the filtered output</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(M\\) is the number of points in the average</li> <li>\\(k\\) is the summation index</li> </ul>"},{"location":"prompts/12-equations/#iir-filter-general-form","title":"IIR Filter General Form","text":"<p>\\(y[n] = \\sum_{k=0}^{M} b_k x[n-k] - \\sum_{k=1}^{N} a_k y[n-k]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the filter output</li> <li>\\(x[n]\\) is the filter input</li> <li>\\(b_k\\) are the feedforward coefficients</li> <li>\\(a_k\\) are the feedback coefficients</li> <li>\\(M\\) is the feedforward filter order</li> <li>\\(N\\) is the feedback filter order</li> </ul>"},{"location":"prompts/12-equations/#frequency-response","title":"Frequency Response","text":"<p>\\(H(e^{j\\omega}) = \\sum_{n=-\\infty}^{\\infty} h[n]e^{-j\\omega n}\\)</p> <p>where:</p> <ul> <li>\\(H(e^{j\\omega})\\) is the frequency response</li> <li>\\(h[n]\\) is the impulse response</li> <li>\\(\\omega\\) is the angular frequency</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#phase-response","title":"Phase Response","text":"<p>\\(\\phi(\\omega) = \\tan^{-1}\\left(\\frac{\\Im\\{H(e^{j\\omega})\\}}{\\Re\\{H(e^{j\\omega})\\}}\\right)\\)</p> <p>where:</p> <ul> <li>\\(\\phi(\\omega)\\) is the phase response</li> <li>\\(H(e^{j\\omega})\\) is the frequency response</li> <li>\\(\\omega\\) is the angular frequency</li> <li>\\(\\Im\\) represents the imaginary part</li> <li>\\(\\Re\\) represents the real part</li> </ul>"},{"location":"prompts/12-equations/#magnitude-response","title":"Magnitude Response","text":"<p>\\(|H(e^{j\\omega})| = \\sqrt{\\Re\\{H(e^{j\\omega})\\}^2 + \\Im\\{H(e^{j\\omega})\\}^2}\\)</p> <p>where:</p> <ul> <li>\\(|H(e^{j\\omega})|\\) is the magnitude response</li> <li>\\(H(e^{j\\omega})\\) is the frequency response</li> <li>\\(\\omega\\) is the angular frequency</li> <li>\\(\\Im\\) represents the imaginary part</li> <li>\\(\\Re\\) represents the real part</li> </ul>"},{"location":"prompts/12-equations/#group-delay","title":"Group Delay","text":"<p>\\(\\tau_g(\\omega) = -\\frac{d\\phi(\\omega)}{d\\omega}\\)</p> <p>where:</p> <ul> <li>\\(\\tau_g(\\omega)\\) is the group delay</li> <li>\\(\\phi(\\omega)\\) is the phase response</li> <li>\\(\\omega\\) is the angular frequency</li> </ul>"},{"location":"prompts/12-equations/#parsevals-theorem","title":"Parseval's Theorem","text":"<p>\\(\\sum_{n=-\\infty}^{\\infty} |x[n]|^2 = \\frac{1}{2\\pi}\\int_{-\\pi}^{\\pi} |X(e^{j\\omega})|^2 d\\omega\\)</p> <p>where:</p> <ul> <li>\\(x[n]\\) is the time domain signal</li> <li>\\(X(e^{j\\omega})\\) is the frequency domain representation</li> <li>\\(\\omega\\) is the angular frequency</li> </ul>"},{"location":"prompts/12-equations/#discrete-time-fourier-transform-dtft","title":"Discrete-Time Fourier Transform (DTFT)","text":"<p>\\(X(e^{j\\omega}) = \\sum_{n=-\\infty}^{\\infty} x[n]e^{-j\\omega n}\\)</p> <p>where:</p> <ul> <li>\\(X(e^{j\\omega})\\) is the frequency domain representation</li> <li>\\(x[n]\\) is the time domain signal</li> <li>\\(\\omega\\) is the angular frequency</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#window-function-hamming","title":"Window Function (Hamming)","text":"<p>\\(w[n] = 0.54 - 0.46\\cos(\\frac{2\\pi n}{N-1})\\)</p> <p>where:</p> <ul> <li>\\(w[n]\\) is the window function value</li> <li>\\(n\\) is the sample index</li> <li>\\(N\\) is the window length</li> </ul>"},{"location":"prompts/12-equations/#discrete-cosine-transform-dct","title":"Discrete Cosine Transform (DCT)","text":"<p>\\(X[k] = \\sum_{n=0}^{N-1} x[n]\\cos[\\frac{\\pi k(2n+1)}{2N}]\\)</p> <p>where:</p> <ul> <li>\\(X[k]\\) is the DCT coefficient</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(N\\) is the number of samples</li> <li>\\(k\\) is the frequency index</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#energy-of-a-signal","title":"Energy of a Signal","text":"<p>\\(E = \\sum_{n=-\\infty}^{\\infty} |x[n]|^2\\)</p> <p>where:</p> <ul> <li>\\(E\\) is the total energy</li> <li>\\(x[n]\\) is the signal</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#power-of-a-signal","title":"Power of a Signal","text":"<p>\\(P = \\lim_{N\\to\\infty} \\frac{1}{2N+1}\\sum_{n=-N}^{N} |x[n]|^2\\)</p> <p>where:</p> <ul> <li>\\(P\\) is the average power</li> <li>\\(x[n]\\) is the signal</li> <li>\\(N\\) is the number of samples</li> </ul>"},{"location":"prompts/12-equations/#decimation-equation","title":"Decimation Equation","text":"<p>\\(y[n] = x[Mn]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the decimated signal</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(M\\) is the decimation factor</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#interpolation-equation","title":"Interpolation Equation","text":"<p>\\(y[n] = \\begin{cases} x[n/L] &amp; \\text{if } n/L \\text{ is integer} \\\\ 0 &amp; \\text{otherwise} \\end{cases}\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the interpolated signal</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(L\\) is the interpolation factor</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#signal-to-noise-ratio-snr","title":"Signal-to-Noise Ratio (SNR)","text":"<p>\\(SNR = 10\\log_{10}\\left(\\frac{P_{signal}}{P_{noise}}\\right)\\)</p> <p>where:</p> <ul> <li>\\(SNR\\) is the signal-to-noise ratio in dB</li> <li>\\(P_{signal}\\) is the power of the signal</li> <li>\\(P_{noise}\\) is the power of the noise</li> </ul>"},{"location":"prompts/12-equations/#circular-convolution","title":"Circular Convolution","text":"<p>\\(y[n] = \\sum_{k=0}^{N-1} x[k]h[(n-k)_N]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the output signal</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(h[n]\\) is the impulse response</li> <li>\\(N\\) is the period of the circular convolution</li> <li>\\((n-k)_N\\) denotes modulo-N operation</li> </ul> <p>I'll continue with the next 25 common signal processing equations following the same format.</p>"},{"location":"prompts/12-equations/#equations-25-50","title":"Equations 25-50","text":""},{"location":"prompts/12-equations/#fast-fourier-transform-radix-2-decimation-in-time","title":"Fast Fourier Transform (Radix-2 Decimation in Time)","text":"<p>\\(X[k] = \\sum_{n=0}^{N/2-1} x[2n]W_N^{2nk} + W_N^k\\sum_{n=0}^{N/2-1} x[2n+1]W_N^{2nk}\\)</p> <p>where:</p> <ul> <li>\\(X[k]\\) is the frequency domain output</li> <li>\\(x[n]\\) is the time domain input</li> <li>\\(W_N^k = e^{-j2\\pi k/N}\\) is the twiddle factor</li> <li>\\(N\\) is the number of points (power of 2)</li> <li>\\(k\\) is the frequency index</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#goertzel-algorithm","title":"Goertzel Algorithm","text":"<p>\\(y[n] = 2\\cos(2\\pi f_0/f_s)y[n-1] - y[n-2] + x[n]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the filter output</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(f_0\\) is the frequency of interest</li> <li>\\(f_s\\) is the sampling frequency</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#chirp-signal","title":"Chirp Signal","text":"<p>\\(x[n] = \\cos(2\\pi(f_0n + \\frac{\\beta}{2}n^2))\\)</p> <p>where:</p> <ul> <li>\\(x[n]\\) is the chirp signal</li> <li>\\(f_0\\) is the starting frequency</li> <li>\\(\\beta\\) is the rate of frequency change</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#hilbert-transform-discrete","title":"Hilbert Transform (Discrete)","text":"<p>\\(h[n] = \\begin{cases} \\frac{2}{\\pi n} &amp; n \\text{ odd} \\\\ 0 &amp; n \\text{ even} \\end{cases}\\)</p> <p>where:</p> <ul> <li>\\(h[n]\\) is the Hilbert transform impulse response</li> <li>\\(n\\) is the time index</li> <li>\\(\\pi\\) is pi (approximately 3.14159)</li> </ul>"},{"location":"prompts/12-equations/#cross-correlation-coefficient","title":"Cross-Correlation Coefficient","text":"<p>\\(\\rho_{xy} = \\frac{R_{xy}[0]}{\\sqrt{R_{xx}[0]R_{yy}[0]}}\\)</p> <p>where:</p> <ul> <li>\\(\\rho_{xy}\\) is the correlation coefficient</li> <li>\\(R_{xy}[0]\\) is the cross-correlation at lag zero</li> <li>\\(R_{xx}[0]\\) is the autocorrelation of x at lag zero</li> <li>\\(R_{yy}[0]\\) is the autocorrelation of y at lag zero</li> </ul>"},{"location":"prompts/12-equations/#discrete-wavelet-transform","title":"Discrete Wavelet Transform","text":"<p>\\(W[j,k] = \\sum_{n} x[n]2^{-j/2}\\psi(2^{-j}n - k)\\)</p> <p>where:</p> <ul> <li>\\(W[j,k]\\) is the wavelet coefficient</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(\\psi\\) is the mother wavelet</li> <li>\\(j\\) is the scale parameter</li> <li>\\(k\\) is the translation parameter</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#kalman-filter-prediction","title":"Kalman Filter Prediction","text":"<p>\\(\\hat{x}_{k|k-1} = F_k\\hat{x}_{k-1|k-1}\\)</p> <p>where:</p> <ul> <li>\\(\\hat{x}_{k|k-1}\\) is the state prediction</li> <li>\\(F_k\\) is the state transition matrix</li> <li>\\(\\hat{x}_{k-1|k-1}\\) is the previous state estimate</li> <li>\\(k\\) is the time step</li> </ul>"},{"location":"prompts/12-equations/#kalman-filter-update","title":"Kalman Filter Update","text":"<p>\\(\\hat{x}_{k|k} = \\hat{x}_{k|k-1} + K_k(z_k - H_k\\hat{x}_{k|k-1})\\)</p> <p>where:</p> <ul> <li>\\(\\hat{x}_{k|k}\\) is the updated state estimate</li> <li>\\(K_k\\) is the Kalman gain</li> <li>\\(z_k\\) is the measurement</li> <li>\\(H_k\\) is the measurement matrix</li> <li>\\(\\hat{x}_{k|k-1}\\) is the state prediction</li> </ul>"},{"location":"prompts/12-equations/#autocorrelation-function-biased","title":"Autocorrelation Function (Biased)","text":"<p>\\(R_{xx}[m] = \\frac{1}{N}\\sum_{n=0}^{N-|m|-1} x[n]x[n+|m|]\\)</p> <p>where:</p> <ul> <li>\\(R_{xx}[m]\\) is the autocorrelation function</li> <li>\\(x[n]\\) is the signal</li> <li>\\(N\\) is the number of samples</li> <li>\\(m\\) is the lag</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#levinson-durbin-recursion","title":"Levinson-Durbin Recursion","text":"<p>\\(a_m^{(m)} = k_m\\) \\(a_i^{(m)} = a_i^{(m-1)} - k_ma_{m-i}^{(m-1)}\\)</p> <p>where:</p> <ul> <li>\\(a_i^{(m)}\\) are the reflection coefficients</li> <li>\\(k_m\\) is the mth reflection coefficient</li> <li>\\(m\\) is the order</li> <li>\\(i\\) is the coefficient index</li> </ul>"},{"location":"prompts/12-equations/#lms-adaptive-filter","title":"LMS Adaptive Filter","text":"<p>\\(w[n+1] = w[n] + \\mu e[n]x[n]\\)</p> <p>where:</p> <ul> <li>\\(w[n]\\) is the filter coefficient vector</li> <li>\\(\\mu\\) is the step size</li> <li>\\(e[n]\\) is the error signal</li> <li>\\(x[n]\\) is the input signal vector</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#nlms-adaptive-filter","title":"NLMS Adaptive Filter","text":"<p>\\(w[n+1] = w[n] + \\frac{\\mu}{||x[n]||^2}e[n]x[n]\\)</p> <p>where:</p> <ul> <li>\\(w[n]\\) is the filter coefficient vector</li> <li>\\(\\mu\\) is the step size</li> <li>\\(e[n]\\) is the error signal</li> <li>\\(x[n]\\) is the input signal vector</li> <li>\\(||x[n]||^2\\) is the squared norm of the input vector</li> </ul>"},{"location":"prompts/12-equations/#rls-adaptive-filter","title":"RLS Adaptive Filter","text":"<p>\\(w[n] = w[n-1] + k[n]e[n]\\)</p> <p>where:</p> <ul> <li>\\(w[n]\\) is the filter coefficient vector</li> <li>\\(k[n]\\) is the gain vector</li> <li>\\(e[n]\\) is the a priori error</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#bandwidth","title":"Bandwidth","text":"<p>\\(BW = f_H - f_L\\)</p> <p>where:</p> <ul> <li>\\(BW\\) is the bandwidth</li> <li>\\(f_H\\) is the upper cutoff frequency</li> <li>\\(f_L\\) is the lower cutoff frequency</li> </ul>"},{"location":"prompts/12-equations/#quality-factor","title":"Quality Factor","text":"<p>\\(Q = \\frac{f_c}{BW}\\)</p> <p>where:</p> <ul> <li>\\(Q\\) is the quality factor</li> <li>\\(f_c\\) is the center frequency</li> <li>\\(BW\\) is the bandwidth</li> </ul>"},{"location":"prompts/12-equations/#polyphase-decomposition","title":"Polyphase Decomposition","text":"<p>\\(H(z) = \\sum_{k=0}^{M-1} z^{-k}E_k(z^M)\\)</p> <p>where:</p> <ul> <li>\\(H(z)\\) is the transfer function</li> <li>\\(E_k(z)\\) are the polyphase components</li> <li>\\(M\\) is the number of phases</li> <li>\\(k\\) is the phase index</li> </ul>"},{"location":"prompts/12-equations/#instantaneous-frequency","title":"Instantaneous Frequency","text":"<p>\\(f_i[n] = \\frac{1}{2\\pi}\\frac{d\\phi[n]}{dn}\\)</p> <p>where:</p> <ul> <li>\\(f_i[n]\\) is the instantaneous frequency</li> <li>\\(\\phi[n]\\) is the instantaneous phase</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#discrete-sine-transform","title":"Discrete Sine Transform","text":"<p>\\(X[k] = \\sum_{n=0}^{N-1} x[n]\\sin[\\frac{\\pi(k+1)(n+1)}{N+1}]\\)</p> <p>where:</p> <ul> <li>\\(X[k]\\) is the transform coefficient</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(N\\) is the number of samples</li> <li>\\(k\\) is the frequency index</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#complex-envelope","title":"Complex Envelope","text":"<p>\\(z[n] = x[n] + j\\hat{x}[n]\\)</p> <p>where:</p> <ul> <li>\\(z[n]\\) is the complex envelope</li> <li>\\(x[n]\\) is the original signal</li> <li>\\(\\hat{x}[n]\\) is the Hilbert transform</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#matched-filter","title":"Matched Filter","text":"<p>\\(h[n] = s[L-1-n]\\)</p> <p>where:</p> <ul> <li>\\(h[n]\\) is the filter impulse response</li> <li>\\(s[n]\\) is the signal to be detected</li> <li>\\(L\\) is the signal length</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#peak-signal-to-noise-ratio","title":"Peak Signal-to-Noise Ratio","text":"<p>\\(PSNR = 10\\log_{10}\\left(\\frac{MAX^2}{MSE}\\right)\\)</p> <p>where:</p> <ul> <li>\\(PSNR\\) is the peak signal-to-noise ratio</li> <li>\\(MAX\\) is the maximum possible signal value</li> <li>\\(MSE\\) is the mean squared error</li> </ul>"},{"location":"prompts/12-equations/#frequency-response-of-moving-average","title":"Frequency Response of Moving Average","text":"<p>\\(H(e^{j\\omega}) = \\frac{\\sin(\\omega M/2)}{M\\sin(\\omega/2)}e^{-j\\omega(M-1)/2}\\)</p> <p>where:</p> <ul> <li>\\(H(e^{j\\omega})\\) is the frequency response</li> <li>\\(M\\) is the filter length</li> <li>\\(\\omega\\) is the angular frequency</li> </ul>"},{"location":"prompts/12-equations/#cepstrum","title":"Cepstrum","text":"<p>\\(c[n] = \\mathcal{F}^{-1}\\{\\log|\\mathcal{F}\\{x[n]\\}|\\}\\)</p> <p>where:</p> <ul> <li>\\(c[n]\\) is the cepstrum</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(\\mathcal{F}\\) represents the Fourier transform</li> <li>\\(\\mathcal{F}^{-1}\\) represents the inverse Fourier transform</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#linear-prediction","title":"Linear Prediction","text":"<p>\\(\\hat{x}[n] = -\\sum_{k=1}^{p} a_k x[n-k]\\)</p> <p>where:</p> <ul> <li>\\(\\hat{x}[n]\\) is the predicted sample</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(a_k\\) are the prediction coefficients</li> <li>\\(p\\) is the prediction order</li> <li>\\(k\\) is the coefficient index</li> </ul>"},{"location":"prompts/12-equations/#equations-50-75","title":"Equations 50-75","text":"<p>I'll continue with the next 25 common signal processing equations, focusing on more specialized topics and advanced concepts.</p>"},{"location":"prompts/12-equations/#bilinear-transform","title":"Bilinear Transform","text":"<p>\\(s = \\frac{2}{T}\\frac{1-z^{-1}}{1+z^{-1}}\\)</p> <p>where:</p> <ul> <li>\\(s\\) is the continuous-time complex frequency</li> <li>\\(z\\) is the discrete-time complex frequency</li> <li>\\(T\\) is the sampling period</li> </ul>"},{"location":"prompts/12-equations/#yule-walker-equations","title":"Yule-Walker Equations","text":"<p>\\(R_{xx}[m] = -\\sum_{k=1}^p a_k R_{xx}[m-k]\\)</p> <p>where:</p> <ul> <li>\\(R_{xx}[m]\\) is the autocorrelation sequence</li> <li>\\(a_k\\) are the AR coefficients</li> <li>\\(p\\) is the model order</li> <li>\\(m\\) is the lag</li> <li>\\(k\\) is the coefficient index</li> </ul>"},{"location":"prompts/12-equations/#zero-phase-filter","title":"Zero-Phase Filter","text":"<p>\\(H_{zp}(z) = H(z)H(z^{-1})\\)</p> <p>where:</p> <ul> <li>\\(H_{zp}(z)\\) is the zero-phase filter</li> <li>\\(H(z)\\) is the original filter</li> <li>\\(z\\) is the complex frequency variable</li> </ul>"},{"location":"prompts/12-equations/#gabor-transform","title":"Gabor Transform","text":"<p>\\(X[n,k] = \\sum_{m=-\\infty}^{\\infty} x[m]w[n-m]e^{-j2\\pi km/N}\\)</p> <p>where:</p> <ul> <li>\\(X[n,k]\\) is the time-frequency representation</li> <li>\\(x[m]\\) is the input signal</li> <li>\\(w[n]\\) is the window function</li> <li>\\(N\\) is the number of frequency points</li> <li>\\(n\\) is the time index</li> <li>\\(k\\) is the frequency index</li> </ul>"},{"location":"prompts/12-equations/#bartlett-window","title":"Bartlett Window","text":"<p>\\(w[n] = 1 - |\\frac{2n}{N-1} - 1|\\)</p> <p>where:</p> <ul> <li>\\(w[n]\\) is the window function value</li> <li>\\(n\\) is the sample index</li> <li>\\(N\\) is the window length</li> </ul>"},{"location":"prompts/12-equations/#compression-ratio","title":"Compression Ratio","text":"<p>\\(CR = \\frac{n_{bits_{original}}}{n_{bits_{compressed}}}\\)</p> <p>where:</p> <ul> <li>\\(CR\\) is the compression ratio</li> <li>\\(n_{bits_{original}}\\) is the number of bits in original signal</li> <li>\\(n_{bits_{compressed}}\\) is the number of bits after compression</li> </ul>"},{"location":"prompts/12-equations/#coherence-function","title":"Coherence Function","text":"<p>\\(\\gamma_{xy}^2(f) = \\frac{|P_{xy}(f)|^2}{P_{xx}(f)P_{yy}(f)}\\)</p> <p>where:</p> <ul> <li>\\(\\gamma_{xy}^2(f)\\) is the coherence function</li> <li>\\(P_{xy}(f)\\) is the cross-spectral density</li> <li>\\(P_{xx}(f)\\) and \\(P_{yy}(f)\\) are power spectral densities</li> <li>\\(f\\) is the frequency</li> </ul>"},{"location":"prompts/12-equations/#multi-rate-noble-identity-1","title":"Multi-Rate Noble Identity 1","text":"<p>\\(H(z^M)\u2193M = \u2193MH(z)\\)</p> <p>where:</p> <ul> <li>\\(H(z)\\) is the transfer function</li> <li>\\(M\\) is the decimation factor</li> <li>\\(\u2193M\\) represents decimation by M</li> </ul>"},{"location":"prompts/12-equations/#savitzky-golay-filter","title":"Savitzky-Golay Filter","text":"<p>\\(y[n] = \\sum_{k=-M}^{M} h[k]x[n+k]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the filtered output</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(h[k]\\) are the Savitzky-Golay coefficients</li> <li>\\(M\\) is the half-width of the window</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#phase-delay","title":"Phase Delay","text":"<p>\\(\\tau_p(\\omega) = -\\frac{\\phi(\\omega)}{\\omega}\\)</p> <p>where:</p> <ul> <li>\\(\\tau_p(\\omega)\\) is the phase delay</li> <li>\\(\\phi(\\omega)\\) is the phase response</li> <li>\\(\\omega\\) is the angular frequency</li> </ul>"},{"location":"prompts/12-equations/#kaiser-window","title":"Kaiser Window","text":"<p>\\(w[n] = \\frac{I_0(\\beta\\sqrt{1-((n-\\alpha)/\\alpha)^2})}{I_0(\\beta)}\\)</p> <p>where:</p> <ul> <li>\\(w[n]\\) is the window function value</li> <li>\\(I_0\\) is the modified Bessel function</li> <li>\\(\\beta\\) is the shape parameter</li> <li>\\(\\alpha\\) is \\((N-1)/2\\)</li> <li>\\(N\\) is the window length</li> <li>\\(n\\) is the sample index</li> </ul>"},{"location":"prompts/12-equations/#median-filter","title":"Median Filter","text":"<p>\\(y[n] = \\text{median}\\{x[n-M],...,x[n],...,x[n+M]\\}\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the filtered output</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(M\\) is the half-width of the window</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#envelope-detection","title":"Envelope Detection","text":"<p>\\(e[n] = |x[n] + j\\hat{x}[n]|\\)</p> <p>where:</p> <ul> <li>\\(e[n]\\) is the envelope</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(\\hat{x}[n]\\) is the Hilbert transform</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#total-harmonic-distortion","title":"Total Harmonic Distortion","text":"<p>\\(THD = \\sqrt{\\frac{\\sum_{n=2}^{N} V_n^2}{V_1^2}}\\)</p> <p>where:</p> <ul> <li>\\(THD\\) is the total harmonic distortion</li> <li>\\(V_n\\) is the voltage of the nth harmonic</li> <li>\\(V_1\\) is the voltage of the fundamental frequency</li> <li>\\(N\\) is the number of harmonics considered</li> </ul>"},{"location":"prompts/12-equations/#frequency-modulation","title":"Frequency Modulation","text":"<p>\\(x[n] = A\\cos(2\\pi f_cn + \\beta\\sin(2\\pi f_mn))\\)</p> <p>where:</p> <ul> <li>\\(x[n]\\) is the FM signal</li> <li>\\(A\\) is the amplitude</li> <li>\\(f_c\\) is the carrier frequency</li> <li>\\(f_m\\) is the modulating frequency</li> <li>\\(\\beta\\) is the modulation index</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#amplitude-modulation","title":"Amplitude Modulation","text":"<p>\\(x[n] = A_c(1 + \\mu m[n])\\cos(2\\pi f_cn)\\)</p> <p>where:</p> <ul> <li>\\(x[n]\\) is the AM signal</li> <li>\\(A_c\\) is the carrier amplitude</li> <li>\\(\\mu\\) is the modulation index</li> <li>\\(m[n]\\) is the modulating signal</li> <li>\\(f_c\\) is the carrier frequency</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#complementary-filter","title":"Complementary Filter","text":"<p>\\(H_1(z) + H_2(z) = 1\\)</p> <p>where:</p> <ul> <li>\\(H_1(z)\\) is the first filter transfer function</li> <li>\\(H_2(z)\\) is the second filter transfer function</li> <li>\\(z\\) is the complex frequency variable</li> </ul>"},{"location":"prompts/12-equations/#barker-code-correlation","title":"Barker Code Correlation","text":"<p>\\(R[k] = \\sum_{n=0}^{N-1} b[n]b[n+k]\\)</p> <p>where:</p> <ul> <li>\\(R[k]\\) is the autocorrelation function</li> <li>\\(b[n]\\) is the Barker sequence</li> <li>\\(N\\) is the sequence length</li> <li>\\(k\\) is the lag</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#notch-filter-transfer-function","title":"Notch Filter Transfer Function","text":"<p>\\(H(z) = \\frac{1 - 2\\cos(\\omega_0)z^{-1} + z^{-2}}{1 - 2r\\cos(\\omega_0)z^{-1} + r^2z^{-2}}\\)</p> <p>where:</p> <ul> <li>\\(H(z)\\) is the transfer function</li> <li>\\(\\omega_0\\) is the notch frequency</li> <li>\\(r\\) is the pole radius</li> <li>\\(z\\) is the complex frequency variable</li> </ul>"},{"location":"prompts/12-equations/#raised-cosine-filter","title":"Raised Cosine Filter","text":"<p>\\(H(f) = \\begin{cases} T, &amp; |f| \\leq \\frac{1-\\alpha}{2T} \\\\ \\frac{T}{2}[1 + \\cos(\\frac{\\pi T}{\\alpha}(|f| - \\frac{1-\\alpha}{2T}))], &amp; \\frac{1-\\alpha}{2T} \\leq |f| \\leq \\frac{1+\\alpha}{2T} \\\\ 0, &amp; \\text{otherwise} \\end{cases}\\)</p> <p>where:</p> <ul> <li>\\(H(f)\\) is the frequency response</li> <li>\\(T\\) is the symbol period</li> <li>\\(\\alpha\\) is the roll-off factor</li> <li>\\(f\\) is the frequency</li> </ul>"},{"location":"prompts/12-equations/#golay-complementary-sequences","title":"Golay Complementary Sequences","text":"<p>\\(G_A(z)G_A(z^{-1}) + G_B(z)G_B(z^{-1}) = 2N\\)</p> <p>where:</p> <ul> <li>\\(G_A(z)\\) is the z-transform of the first sequence</li> <li>\\(G_B(z)\\) is the z-transform of the second sequence</li> <li>\\(N\\) is the sequence length</li> <li>\\(z\\) is the complex frequency variable</li> </ul>"},{"location":"prompts/12-equations/#walsh-transform","title":"Walsh Transform","text":"<p>\\(W[k] = \\sum_{n=0}^{N-1} x[n]wal(k,n)\\)</p> <p>where:</p> <ul> <li>\\(W[k]\\) is the Walsh transform coefficient</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(wal(k,n)\\) is the Walsh function</li> <li>\\(N\\) is the number of points</li> <li>\\(k\\) is the sequency index</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#normalized-cross-correlation","title":"Normalized Cross-Correlation","text":"<p>\\(\\rho[m] = \\frac{\\sum_{n} (x[n]-\\bar{x})(y[n+m]-\\bar{y})}{\\sqrt{\\sum_{n} (x[n]-\\bar{x})^2\\sum_{n} (y[n]-\\bar{y})^2}}\\)</p> <p>where:</p> <ul> <li>\\(\\rho[m]\\) is the normalized correlation</li> <li>\\(x[n]\\) and \\(y[n]\\) are the signals</li> <li>\\(\\bar{x}\\) and \\(\\bar{y}\\) are the means</li> <li>\\(m\\) is the lag</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#zadoff-chu-sequence","title":"Zadoff-Chu Sequence","text":"<p>\\(x[n] = e^{-j\\pi un(n+1)/N}\\)</p> <p>where:</p> <ul> <li>\\(x[n]\\) is the sequence value</li> <li>\\(u\\) is the sequence root</li> <li>\\(N\\) is the sequence length</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#maximum-length-sequence","title":"Maximum Length Sequence","text":"<p>\\(s[n] = s[n-p] \\oplus s[n-q]\\)</p> <p>where:</p> <ul> <li>\\(s[n]\\) is the sequence value</li> <li>\\(p\\) and \\(q\\) are the tap positions</li> <li>\\(\\oplus\\) represents modulo-2 addition</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#equations-75-100","title":"Equations 75-100","text":"<p>I'll continue with the next 25 equations, focusing on more specialized signal processing concepts and applications.</p>"},{"location":"prompts/12-equations/#multi-channel-wiener-filter","title":"Multi-Channel Wiener Filter","text":"<p>\\(\\mathbf{W} = \\mathbf{R}_{xx}^{-1}\\mathbf{R}_{xy}\\)</p> <p>where:</p> <ul> <li>\\(\\mathbf{W}\\) is the filter coefficient matrix</li> <li>\\(\\mathbf{R}_{xx}\\) is the input correlation matrix</li> <li>\\(\\mathbf{R}_{xy}\\) is the cross-correlation matrix</li> </ul>"},{"location":"prompts/12-equations/#costas-loop-phase-error","title":"Costas Loop Phase Error","text":"<p>\\(e[n] = I[n]Q'[n] - I'[n]Q[n]\\)</p> <p>where:</p> <ul> <li>\\(e[n]\\) is the phase error signal</li> <li>\\(I[n]\\) is the in-phase component</li> <li>\\(Q[n]\\) is the quadrature component</li> <li>\\(I'[n]\\) and \\(Q'[n]\\) are the derivatives</li> </ul>"},{"location":"prompts/12-equations/#discrete-hartley-transform","title":"Discrete Hartley Transform","text":"<p>\\(H[k] = \\sum_{n=0}^{N-1} x[n]cas(\\frac{2\\pi kn}{N})\\)</p> <p>where:</p> <ul> <li>\\(H[k]\\) is the transform coefficient</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(cas(\\theta) = \\cos(\\theta) + \\sin(\\theta)\\)</li> <li>\\(N\\) is the transform length</li> <li>\\(k\\) is the frequency index</li> </ul>"},{"location":"prompts/12-equations/#exponential-moving-average","title":"Exponential Moving Average","text":"<p>\\(y[n] = \\alpha x[n] + (1-\\alpha)y[n-1]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the filtered output</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(\\alpha\\) is the smoothing factor</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#rician-k-factor","title":"Rician K-Factor","text":"<p>\\(K = \\frac{A^2}{2\\sigma^2}\\)</p> <p>where:</p> <ul> <li>\\(K\\) is the Rician K-factor</li> <li>\\(A\\) is the amplitude of the dominant signal</li> <li>\\(\\sigma^2\\) is the variance of the multipath components</li> </ul>"},{"location":"prompts/12-equations/#periodogram","title":"Periodogram","text":"<p>\\(P_{xx}(f) = \\frac{1}{N}|X(f)|^2\\)</p> <p>where:</p> <ul> <li>\\(P_{xx}(f)\\) is the power spectral density</li> <li>\\(X(f)\\) is the Fourier transform</li> <li>\\(N\\) is the number of samples</li> <li>\\(f\\) is the frequency</li> </ul>"},{"location":"prompts/12-equations/#teager-energy-operator","title":"Teager Energy Operator","text":"<p>\\(\\Psi[x[n]] = x^2[n] - x[n-1]x[n+1]\\)</p> <p>where:</p> <ul> <li>\\(\\Psi[x[n]]\\) is the Teager energy</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#adaptive-line-enhancer","title":"Adaptive Line Enhancer","text":"<p>\\(y[n] = \\mathbf{w}^T[n]\\mathbf{x}[n-\\Delta]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the filter output</li> <li>\\(\\mathbf{w}[n]\\) is the weight vector</li> <li>\\(\\mathbf{x}[n]\\) is the input vector</li> <li>\\(\\Delta\\) is the prediction delay</li> </ul>"},{"location":"prompts/12-equations/#modified-dft-filter-bank","title":"Modified DFT Filter Bank","text":"<p>\\(H_k(z) = H(zW_M^k)\\)</p> <p>where:</p> <ul> <li>\\(H_k(z)\\) is the kth bandpass filter</li> <li>\\(H(z)\\) is the prototype filter</li> <li>\\(W_M = e^{-j2\\pi/M}\\) is the twiddle factor</li> <li>\\(M\\) is the number of channels</li> </ul>"},{"location":"prompts/12-equations/#constant-q-transform","title":"Constant Q Transform","text":"<p>\\(X[k] = \\sum_{n=0}^{N_k-1} x[n]w[n]e^{-j2\\pi Qn/N_k}\\)</p> <p>where:</p> <ul> <li>\\(X[k]\\) is the transform coefficient</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(w[n]\\) is the window function</li> <li>\\(Q\\) is the quality factor</li> <li>\\(N_k\\) is the window length for bin k</li> </ul>"},{"location":"prompts/12-equations/#short-time-energy-function","title":"Short-Time Energy Function","text":"<p>\\(E[n] = \\sum_{m=-\\infty}^{\\infty} (x[m]w[n-m])^2\\)</p> <p>where:</p> <ul> <li>\\(E[n]\\) is the short-time energy</li> <li>\\(x[m]\\) is the input signal</li> <li>\\(w[n]\\) is the window function</li> <li>\\(n\\) is the frame index</li> <li>\\(m\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#zero-crossing-rate","title":"Zero-Crossing Rate","text":"<p>\\(ZCR[n] = \\sum_{m=-\\infty}^{\\infty} |\\text{sign}(x[m]) - \\text{sign}(x[m-1])|w[n-m]\\)</p> <p>where:</p> <ul> <li>\\(ZCR[n]\\) is the zero-crossing rate</li> <li>\\(x[m]\\) is the input signal</li> <li>\\(w[n]\\) is the window function</li> <li>\\(\\text{sign}()\\) is the signum function</li> </ul>"},{"location":"prompts/12-equations/#linear-predictive-coding-error","title":"Linear Predictive Coding Error","text":"<p>\\(e[n] = x[n] - \\sum_{k=1}^{p} a_k x[n-k]\\)</p> <p>where:</p> <ul> <li>\\(e[n]\\) is the prediction error</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(a_k\\) are the LPC coefficients</li> <li>\\(p\\) is the prediction order</li> <li>\\(k\\) is the coefficient index</li> </ul>"},{"location":"prompts/12-equations/#mel-frequency-scale","title":"Mel-Frequency Scale","text":"<p>\\(f_{mel} = 2595\\log_{10}(1 + \\frac{f}{700})\\)</p> <p>where:</p> <ul> <li>\\(f_{mel}\\) is the frequency in mel scale</li> <li>\\(f\\) is the frequency in Hz</li> </ul>"},{"location":"prompts/12-equations/#bark-scale","title":"Bark Scale","text":"<p>\\(z = 13\\arctan(0.00076f) + 3.5\\arctan((f/7500)^2)\\)</p> <p>where:</p> <ul> <li>\\(z\\) is the frequency in Bark scale</li> <li>\\(f\\) is the frequency in Hz</li> </ul>"},{"location":"prompts/12-equations/#phase-vocoder","title":"Phase Vocoder","text":"<p>\\(\\phi_{out}[n] = \\phi_{in}[n] + 2\\pi f_{in}\\frac{R_{out}}{R_{in}}\\)</p> <p>where:</p> <ul> <li>\\(\\phi_{out}[n]\\) is the output phase</li> <li>\\(\\phi_{in}[n]\\) is the input phase</li> <li>\\(f_{in}\\) is the input frequency</li> <li>\\(R_{out}\\) is the output rate</li> <li>\\(R_{in}\\) is the input rate</li> </ul>"},{"location":"prompts/12-equations/#wavelet-packet-transform","title":"Wavelet Packet Transform","text":"<p>\\(W_{j,k,n}[m] = 2^{j/2}w_n(2^jm - k)\\)</p> <p>where:</p> <ul> <li>\\(W_{j,k,n}[m]\\) is the wavelet packet basis</li> <li>\\(w_n\\) is the wavelet packet function</li> <li>\\(j\\) is the scale parameter</li> <li>\\(k\\) is the translation parameter</li> <li>\\(n\\) is the oscillation parameter</li> </ul>"},{"location":"prompts/12-equations/#preemphasis-filter","title":"Preemphasis Filter","text":"<p>\\(y[n] = x[n] - \\alpha x[n-1]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the filtered output</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(\\alpha\\) is the preemphasis coefficient</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#modulation-transfer-function","title":"Modulation Transfer Function","text":"<p>\\(MTF(f) = \\frac{|H(f)|}{|H(0)|}\\)</p> <p>where:</p> <ul> <li>\\(MTF(f)\\) is the modulation transfer function</li> <li>\\(H(f)\\) is the system transfer function</li> <li>\\(f\\) is the frequency</li> </ul>"},{"location":"prompts/12-equations/#karhunen-loeve-transform","title":"Karhunen-Lo\u00e8ve Transform","text":"<p>\\(\\Phi_k = \\sum_{n=1}^{N} v_k[n]x[n]\\)</p> <p>where:</p> <ul> <li>\\(\\Phi_k\\) is the KLT coefficient</li> <li>\\(v_k[n]\\) is the kth eigenvector</li> <li>\\(x[n]\\) is the input signal</li> <li>\\(N\\) is the signal length</li> </ul>"},{"location":"prompts/12-equations/#adaptive-spectral-enhancement","title":"Adaptive Spectral Enhancement","text":"<p>\\(H(z) = \\frac{1}{1 - \\sum_{k=1}^{p} a_k z^{-k}}\\)</p> <p>where:</p> <ul> <li>\\(H(z)\\) is the enhancement filter</li> <li>\\(a_k\\) are the prediction coefficients</li> <li>\\(p\\) is the filter order</li> <li>\\(z\\) is the complex frequency variable</li> </ul>"},{"location":"prompts/12-equations/#pitch-synchronous-overlap-add-psola","title":"Pitch Synchronous Overlap Add (PSOLA)","text":"<p>\\(y[n] = \\sum_{m=-\\infty}^{\\infty} x[m]h[n-mT_0]\\)</p> <p>where:</p> <ul> <li>\\(y[n]\\) is the modified signal</li> <li>\\(x[m]\\) is the input signal</li> <li>\\(h[n]\\) is the synthesis window</li> <li>\\(T_0\\) is the pitch period</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#harmonic-plus-noise-model","title":"Harmonic Plus Noise Model","text":"<p>\\(s[n] = h[n] + r[n]\\)</p> <p>where:</p> <ul> <li>\\(s[n]\\) is the total signal</li> <li>\\(h[n]\\) is the harmonic component</li> <li>\\(r[n]\\) is the noise residual</li> <li>\\(n\\) is the time index</li> </ul>"},{"location":"prompts/12-equations/#goertzel-energy","title":"Goertzel Energy","text":"<p>\\(E_k = x_1^2[N] + x_2^2[N] - 2\\cos(2\\pi k/N)x_1[N]x_2[N]\\)</p> <p>where:</p> <ul> <li>\\(E_k\\) is the energy at frequency k</li> <li>\\(x_1[N]\\) and \\(x_2[N]\\) are Goertzel algorithm outputs</li> <li>\\(N\\) is the block length</li> <li>\\(k\\) is the frequency bin</li> </ul>"},{"location":"prompts/12-equations/#adaptive-noise-cancellation","title":"Adaptive Noise Cancellation","text":"<p>\\(e[n] = d[n] - \\mathbf{w}^T[n]\\mathbf{x}[n]\\)</p> <p>where:</p> <ul> <li>\\(e[n]\\) is the error signal</li> <li>\\(d[n]\\) is the desired signal</li> <li>\\(\\mathbf{w}[n]\\) is the filter coefficient vector</li> <li>\\(\\mathbf{x}[n]\\) is the reference noise vector</li> </ul>"},{"location":"prompts/13-history-of-signal-processing/","title":"History of Signal Processing","text":"<p>Timeline of Signal Processing</p>"},{"location":"prompts/13-history-of-signal-processing/#prompt","title":"Prompt","text":"<pre><code>What were some of the most interesting stories in the\ndevelopment of modern signal processing?\nWho were the most colorful characters?\nWhat were the key breakthroughs?\n</code></pre>"},{"location":"prompts/13-history-of-signal-processing/#response","title":"Response","text":"<p>ChatGPT Thought for 8 seconds</p> <p>The development of modern signal processing is rich with intriguing stories, pioneering breakthroughs, and colorful characters who have shaped the field into what it is today. From foundational theories that revolutionized our understanding of information to algorithms that transformed computational capabilities, the journey of signal processing is a tapestry of innovation and ingenuity.</p>"},{"location":"prompts/13-history-of-signal-processing/#the-foundations-claude-shannon-and-the-birth-of-information-theory","title":"The Foundations: Claude Shannon and the Birth of Information Theory","text":"<p>One of the most pivotal moments in signal processing was Claude Shannon's 1948 paper, \"A Mathematical Theory of Communication.\" Often hailed as the \"father of information theory,\" Shannon introduced concepts that quantified information and its transmission over noisy channels. His work laid the groundwork for digital communication and data compression, fundamentally altering how we perceive and process signals.</p> <p>Colorful Character Highlight: Claude Shannon was not just a brilliant mathematician and engineer but also an eccentric inventor. He was known for his unicycle-riding antics in the halls of Bell Labs and his fascination with juggling and chess-playing machines. His playful approach to life mirrored his innovative approach to problem-solving, blending creativity with technical prowess.</p>"},{"location":"prompts/13-history-of-signal-processing/#the-nyquist-shannon-sampling-theorem","title":"The Nyquist-Shannon Sampling Theorem","text":"<p>Building on the work of Harry Nyquist, Shannon formalized the sampling theorem, which states that a continuous signal can be completely represented by its samples and reconstructed if it is band-limited and sampled at twice its highest frequency (the Nyquist rate). This theorem is fundamental to digital signal processing, enabling the conversion of analog signals to digital form without loss of information.</p>"},{"location":"prompts/13-history-of-signal-processing/#the-fast-fourier-transform-fft-cooley-and-tukeys-computational-revolution","title":"The Fast Fourier Transform (FFT): Cooley and Tukey's Computational Revolution","text":"<p>In 1965, James W. Cooley and John W. Tukey published the Fast Fourier Transform algorithm, dramatically reducing the computational complexity of Fourier Transforms from \\(O(N^2)\\) to \\(O(NlogN)\\). This breakthrough made real-time signal processing feasible and opened doors to advanced applications in telecommunications, audio processing, and image analysis.</p> <p>Interesting Story: Although Cooley and Tukey are credited with the FFT, the algorithm's roots trace back to the work of Carl Friedrich Gauss in the 19th century. The rediscovery and adaptation of these principles during the digital age exemplify how historical mathematical concepts can find new life with technological advancements.</p>"},{"location":"prompts/13-history-of-signal-processing/#wavelet-theory-and-ingrid-daubechies","title":"Wavelet Theory and Ingrid Daubechies","text":"<p>In the late 1980s and early 1990s, Ingrid Daubechies developed compactly supported orthonormal wavelets, leading to efficient algorithms for signal analysis. Wavelets allow for multi-resolution analysis of signals, which is particularly useful in image compression (like JPEG 2000) and denoising applications.</p> <p>Colorful Character Highlight: Ingrid Daubechies is notable not only for her groundbreaking work but also for her dedication to making mathematics accessible. As one of the few prominent women in her field at the time, she became a role model, actively promoting diversity and education in mathematics and engineering.</p>"},{"location":"prompts/13-history-of-signal-processing/#adaptive-filters-and-bernard-widrow","title":"Adaptive Filters and Bernard Widrow","text":"<p>Bernard Widrow introduced the Least Mean Squares (LMS) algorithm in the 1960s, which became a cornerstone of adaptive filtering. Adaptive filters adjust their parameters in real-time to minimize errors, crucial in applications like echo cancellation in telecommunications and noise reduction.</p>"},{"location":"prompts/13-history-of-signal-processing/#hamming-codes-and-error-correction","title":"Hamming Codes and Error Correction","text":"<p>Richard Hamming developed Hamming codes, a set of error-detecting and error-correcting codes that are fundamental in digital communication and data storage. His work ensures data integrity across unreliable or noisy channels, which is essential for reliable computing and communication systems.</p> <p>Colorful Character Highlight: Hamming was known for his forthright attitude and emphasis on practical problem-solving. He famously encouraged researchers to tackle \"important problems\" rather than easy ones, fostering a culture of ambition and innovation at Bell Labs.</p>"},{"location":"prompts/13-history-of-signal-processing/#compressed-sensing-sparsity-and-signal-reconstruction","title":"Compressed Sensing: Sparsity and Signal Reconstruction","text":"<p>In the early 2000s, Emmanuel Cand\u00e8s, Terence Tao, and David Donoho independently developed the theory of compressed sensing. This paradigm shift showed that signals could be reconstructed from far fewer samples than traditionally thought necessary, provided they have a sparse representation in some domain. This has profound implications for medical imaging (like MRI) and other fields where data acquisition is costly or time-consuming.</p>"},{"location":"prompts/13-history-of-signal-processing/#the-advent-of-digital-signal-processors-dsps","title":"The Advent of Digital Signal Processors (DSPs)","text":"<p>The development of specialized hardware for signal processing, such as DSP chips in the 1970s and 1980s, allowed for real-time processing of signals in consumer electronics, telecommunications, and multimedia. Companies like Texas Instruments and Analog Devices spearheaded this movement, making advanced signal processing accessible and affordable.</p>"},{"location":"prompts/13-history-of-signal-processing/#alan-v-oppenheim-and-educational-impact","title":"Alan V. Oppenheim and Educational Impact","text":"<p>Alan V. Oppenheim is renowned for his contributions to signal processing education through seminal textbooks like \"Discrete-Time Signal Processing,\" co-authored with Ronald Schafer. His work has educated generations of engineers and continues to influence teaching methodologies worldwide.</p>"},{"location":"prompts/13-history-of-signal-processing/#the-transition-to-multidimensional-signal-processing","title":"The Transition to Multidimensional Signal Processing","text":"<p>The extension of signal processing techniques to two or more dimensions enabled advancements in image and video processing. Techniques like the Discrete Cosine Transform (DCT), developed by K.R. Rao and P. Yip, became the backbone of image compression standards like JPEG, influencing how we store and transmit visual information.</p> <p>Key Breakthroughs Summarized:</p> <ul> <li>Information Theory: Quantifying information and understanding its transmission.</li> <li>Sampling Theorem: Principles governing the conversion of analog signals to digital.</li> <li>Fast Fourier Transform: Efficient computation of Fourier Transforms.</li> <li>Wavelet Theory: Multi-resolution analysis of signals.</li> <li>Adaptive Filtering: Real-time adjustment of filter parameters for optimal performance.</li> <li>Error-Correcting Codes: Ensuring data integrity in communication systems.</li> <li>Compressed Sensing: Signal reconstruction from minimal samples.</li> <li>Digital Signal Processors: Hardware enabling real-time signal processing.</li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#conclusion","title":"Conclusion","text":"<p>The evolution of modern signal processing is marked by a series of theoretical insights and practical innovations, each building upon the last. The field is not just a chronology of technical achievements but also a narrative of the individuals whose curiosity and creativity pushed the boundaries of what was possible. Their stories inspire ongoing exploration and innovation in signal processing, ensuring its continued relevance and impact on technology and society.</p>"},{"location":"prompts/13-history-of-signal-processing/#signal-processing-and-war","title":"Signal Processing and War","text":"<p>Prompt</p> <p>How has signal processing impacted wars? How have countries used signal processing technologies like radar and sonar to their advantage?</p>"},{"location":"prompts/13-history-of-signal-processing/#response_1","title":"Response","text":"<p>Signal processing has had a profound impact on warfare, particularly in the 20th and 21st centuries, where it has revolutionized the way countries conduct surveillance, detect enemies, and communicate. Technologies like radar and sonar, enabled by advances in signal processing, have become crucial for military strategy and operations. Here's an exploration of how these technologies shaped wars and how countries used them to their advantage.</p>"},{"location":"prompts/13-history-of-signal-processing/#1-radar-transforming-air-and-naval-warfare","title":"1. Radar: Transforming Air and Naval Warfare","text":"<p>Development of Radar (Radio Detection and Ranging) Radar is perhaps the most iconic military application of signal processing. Initially developed in the 1930s, radar was extensively used during World War II for detecting aircraft and ships by sending out radio waves and analyzing the reflected signals. Its ability to detect enemy planes and ships at long distances gave countries an unprecedented advantage.</p> <p>Key Impact in World War II</p> <ul> <li> <p>Battle of Britain: Radar played a pivotal role in the defense of the United Kingdom during the Battle of Britain in 1940. The British \"Chain Home\" radar system was one of the first integrated air defense systems. It allowed the Royal Air Force (RAF) to detect incoming German bombers well before they reached British airspace, providing enough time to scramble fighters and intercept the attacks. This was a critical factor in the RAF's ability to successfully defend against the larger Luftwaffe forces.</p> </li> <li> <p>D-Day Invasion: In 1944, during the Normandy invasion (D-Day), both Allied and Axis forces relied heavily on radar for naval and aerial operations. The Allies used radar for landing craft coordination, while Germany used it for coastal defenses. Signal processing improvements, such as jamming enemy radar (radar countermeasures), were crucial in allowing the Allied forces to land successfully.</p> </li> <li> <p>Naval Warfare: Radar dramatically changed naval engagements, particularly in detecting ships and submarines over vast distances. Previously, warships had to rely on visual sightings or limited-range equipment. Radar allowed navies to detect enemy vessels beyond the horizon, revolutionizing maritime strategy.</p> </li> </ul> <p>Post-War Developments After WWII, radar technology continued to evolve with improvements in signal processing algorithms and hardware, leading to advanced applications like:</p> <ul> <li> <p>Missile Defense Systems: Signal processing advancements enabled more precise radar systems capable of tracking ballistic missiles. Modern systems like the U.S.'s Aegis Combat System and Russia's S-400 rely on radar to intercept enemy projectiles.</p> </li> <li> <p>Stealth Aircraft: Signal processing has also been key in countering radar systems. Stealth technology, developed during the Cold War, aims to reduce the radar cross-section of aircraft, making them harder to detect. Countries like the U.S. invested in signal processing techniques to mitigate the ability of enemy radar systems to spot planes like the F-117 Nighthawk or B-2 Spirit.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#2-sonar-the-silent-war-below-the-waves","title":"2. Sonar: The Silent War Below the Waves","text":"<p>Development of Sonar (Sound Navigation and Ranging) Sonar, which uses sound waves to detect underwater objects, has been a critical tool in naval warfare, particularly for submarine detection. Its development in the early 20th century became a game-changer for both submarine operations and anti-submarine warfare.</p> <p>World War I and II Impact</p> <ul> <li> <p>Anti-Submarine Warfare: During WWI and WWII, submarines became powerful tools for blockades and ambushes, with Germany's U-boat campaigns wreaking havoc on Allied shipping lanes. The Allies developed sonar technology (called ASDIC during WWII) to detect enemy submarines by sending out sound pulses and analyzing the echoes from underwater objects.</p> </li> <li> <p>Convoy Protection: Sonar allowed Allied forces to detect and track German U-boats more effectively, protecting convoys from torpedo attacks. Paired with radar and depth charges, sonar-equipped ships could locate and neutralize submarines with greater accuracy, leading to the eventual defeat of the German U-boat threat in the Battle of the Atlantic.</p> </li> </ul> <p>Cold War Submarine Warfare During the Cold War, sonar became the centerpiece of submarine warfare as both the U.S. and the Soviet Union built massive nuclear submarine fleets. The development of advanced passive sonar (listening for sounds without emitting active pulses) and signal processing techniques allowed for the detection of even the quietest submarines.</p> <ul> <li> <p>SOSUS (Sound Surveillance System): The U.S. deployed the SOSUS network, an array of underwater hydrophones across the Atlantic and Pacific, to monitor Soviet submarine movements. By leveraging advanced signal processing, the U.S. Navy could detect Soviet ballistic missile submarines (SSBNs) and track their movements during the Cold War.</p> </li> <li> <p>Quiet Propulsion: In response, countries developed quieter submarines using noise-reduction techniques that could evade detection, leading to an arms race in acoustic stealth and sonar signal processing capabilities.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#3-encryption-communications-and-electronic-warfare","title":"3. Encryption, Communications, and Electronic Warfare","text":"<p>Encryption and Signal Intelligence The ability to encrypt and decrypt signals became a crucial aspect of warfare. Signal processing played an essential role in communications security and intelligence.</p> <ul> <li> <p>Enigma Machine: The German Enigma machine, used to encrypt military communications during WWII, became a critical target for Allied cryptographers. Alan Turing and his team at Bletchley Park used early signal processing and computation techniques to break the Enigma code, giving the Allies access to German military plans---a key factor in their eventual victory.</p> </li> <li> <p>Modern Signal Encryption: Signal processing continues to be at the heart of modern military communications security, enabling encryption algorithms that protect sensitive information from being intercepted.</p> </li> </ul> <p>Electronic Warfare (EW) Electronic warfare involves using the electromagnetic spectrum to disrupt or intercept enemy communications, radar, or weapons systems.</p> <ul> <li> <p>Jamming Radar and Communications: During WWII, radar jamming techniques were developed to disrupt enemy radar systems. These techniques evolved into sophisticated electronic countermeasures (ECM) used in both air and ground operations. Modern electronic warfare systems employ advanced signal processing to jam enemy radars and communications while protecting friendly systems from interference.</p> </li> <li> <p>Cyber Warfare and SIGINT (Signal Intelligence): Today, countries rely on signal intelligence (SIGINT) to intercept and analyze enemy communications, radar signals, and data. Advanced signal processing algorithms enable the analysis of vast amounts of intercepted data, providing valuable intelligence about enemy movements and intentions.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#4-key-modern-military-applications-of-signal-processing","title":"4. Key Modern Military Applications of Signal Processing","text":"<p>GPS and Satellite Tracking</p> <ul> <li> <p>Precision-Guided Munitions: Signal processing underpins the operation of GPS-guided missiles and bombs, allowing for accurate targeting. During the Gulf War, the U.S. military's use of precision-guided munitions showcased how signal processing could transform warfare, enabling strikes with minimal collateral damage.</p> </li> <li> <p>Drone Warfare: Signal processing is vital in unmanned aerial vehicles (UAVs), or drones, which rely on sophisticated algorithms for real-time image processing, navigation, and targeting. Drones have been used extensively for both surveillance and combat operations.</p> </li> </ul> <p>Intelligence, Surveillance, and Reconnaissance (ISR) Signal processing in satellite imaging, radar, and electro-optical systems allows for continuous monitoring of battlefields, providing real-time intelligence. Technologies like Synthetic Aperture Radar (SAR) use advanced signal processing techniques to create high-resolution images of ground targets through clouds or at night.</p>"},{"location":"prompts/13-history-of-signal-processing/#conclusion-a-game-changer-in-modern-warfare","title":"Conclusion: A Game-Changer in Modern Warfare","text":"<p>Signal processing technologies, from radar and sonar to encryption and electronic warfare, have reshaped the dynamics of war by giving militaries greater situational awareness, precision, and intelligence capabilities. Countries that have mastered these technologies have gained significant strategic advantages, changing the outcomes of battles and even wars.</p> <p>Today, advancements in AI-driven signal processing, quantum encryption, and cyber warfare continue to shape the future of military conflict, making signal processing a central component of modern defense strategy.</p>"},{"location":"prompts/13-history-of-signal-processing/#the-future-of-signal-processing","title":"The Future of Signal Processing","text":"<p>Prompt</p> <p>In the future, how will innovations in signal processing impact wars? How do robots and drones use signal processing?</p>"},{"location":"prompts/13-history-of-signal-processing/#response_2","title":"Response","text":"<p>Future innovations in signal processing are expected to significantly impact warfare, leading to advancements in automation, surveillance, communication, and even the nature of conflict itself. As technologies like artificial intelligence (AI), quantum computing, and edge processing evolve, the role of signal processing will become even more critical. Additionally, drones, robots, and autonomous systems will increasingly rely on sophisticated signal processing algorithms to operate in complex environments. Here's a look at how signal processing might shape the future of warfare and how it's used by robots and drones today.</p>"},{"location":"prompts/13-history-of-signal-processing/#1-autonomous-systems-and-ai-driven-warfare","title":"1. Autonomous Systems and AI-Driven Warfare","text":"<p>In the future, signal processing will play a crucial role in the rise of autonomous military systems, particularly unmanned drones, robots, and vehicles capable of performing complex tasks with minimal human intervention.</p>"},{"location":"prompts/13-history-of-signal-processing/#key-developments-in-signal-processing-for-autonomy","title":"Key Developments in Signal Processing for Autonomy:","text":"<ul> <li> <p>Real-Time Data Analysis: Future warfare will see the widespread use of autonomous systems that can analyze sensor data in real-time to make decisions. Signal processing algorithms will enable drones and robots to interpret visual, auditory, and environmental signals, allowing them to navigate battlefields, identify targets, and react to changing conditions without direct human control.</p> </li> <li> <p>Edge Computing: To reduce latency, signal processing in future military robots and drones will shift towards edge computing, where data is processed locally on the device rather than in remote servers. This will be crucial for quick decision-making in combat scenarios, especially in environments with poor or compromised communication links.</p> </li> <li> <p>AI-Enhanced Target Recognition: Signal processing coupled with AI will allow autonomous systems to identify and track targets using multiple sensor inputs, including radar, sonar, infrared, and electro-optical data. AI-powered signal processing will improve the accuracy of threat detection and reduce the chances of errors, making autonomous weaponry more effective and precise.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#swarm-technology","title":"Swarm Technology","text":"<p>Robots and drones will likely be deployed in swarms, where multiple units work together to accomplish missions. Signal processing will be essential in:</p> <ul> <li> <p>Communication and Coordination: Swarm robots or drones will use sophisticated signal processing algorithms to communicate with one another, share information, and coordinate movements in real-time. This coordination could be used for tasks like overwhelming enemy defenses, performing reconnaissance, or delivering coordinated strikes.</p> </li> <li> <p>Swarm Intelligence: Signal processing techniques inspired by biological systems (e.g., how birds fly in flocks) will allow autonomous drones to dynamically adapt to changes in their environment and their mission. Each unit in the swarm can process local signals and adapt accordingly, leading to emergent behavior that makes the entire swarm more effective.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#2-quantum-signal-processing-and-encryption","title":"2. Quantum Signal Processing and Encryption","text":"<p>Quantum computing will revolutionize signal processing by enabling faster and more secure methods of processing vast amounts of data.</p>"},{"location":"prompts/13-history-of-signal-processing/#quantum-radar-and-quantum-sensors","title":"Quantum Radar and Quantum Sensors:","text":"<ul> <li> <p>Quantum Radar: One of the most promising areas is the development of quantum radar, which uses quantum entanglement to detect objects with much greater accuracy than classical radar systems. Quantum signal processing could allow future military systems to detect stealth aircraft or submarines that are invisible to traditional radar or sonar systems.</p> </li> <li> <p>Quantum Sensors: Quantum signal processing will also enable new types of sensors that can detect minute changes in the environment, such as gravitational waves or magnetic fields. These sensors could have military applications in detecting underground tunnels, hidden submarines, or even enemy movements in space.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#quantum-encryption","title":"Quantum Encryption:","text":"<ul> <li>Unbreakable Encryption: Signal processing in the quantum realm will also enable ultra-secure communications through quantum encryption, which promises to be theoretically unbreakable. This would revolutionize military communications, ensuring that sensitive data and signals cannot be intercepted by enemy forces. Future wars will likely include a race to break, or defend, quantum communication channels.</li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#3-enhanced-surveillance-and-reconnaissance","title":"3. Enhanced Surveillance and Reconnaissance","text":"<p>Signal processing will continue to drive advancements in surveillance and reconnaissance technologies, giving militaries enhanced situational awareness in real time.</p>"},{"location":"prompts/13-history-of-signal-processing/#hyperspectral-imaging","title":"Hyperspectral Imaging","text":"<ul> <li>Multispectral Signal Processing: Future drones and satellites will use hyperspectral imaging systems to capture data across a wide range of electromagnetic frequencies, from visible light to infrared and ultraviolet. Signal processing algorithms will analyze this data to detect camouflaged or hidden objects that are invisible to the naked eye or conventional imaging systems.</li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#persistent-surveillance","title":"Persistent Surveillance:","text":"<ul> <li>Signal Processing for Continuous Monitoring: With advancements in AI and machine learning, signal processing will enable drones and satellites to monitor large areas continuously, detecting and identifying anomalies or changes in the environment that might indicate enemy activity. This could lead to early detection of troop movements, supply chain disruptions, or covert operations.</li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#4-electronic-warfare-and-cyber-defense","title":"4. Electronic Warfare and Cyber Defense","text":"<p>As warfare increasingly moves into the digital domain, electronic warfare (EW) and cyber defense will rely heavily on signal processing innovations.</p>"},{"location":"prompts/13-history-of-signal-processing/#jamming-and-anti-jamming-technologies","title":"Jamming and Anti-Jamming Technologies","text":"<ul> <li> <p>Adaptive Signal Processing: In future battles, both sides will engage in electronic warfare to disrupt enemy communications, radar, and other sensor systems. Signal processing algorithms will enable adaptive jamming technologies that can quickly detect and respond to attempts to jam communication channels, ensuring that friendly forces maintain operational integrity while disrupting enemy systems.</p> </li> <li> <p>Cognitive Radios: Signal processing will enable \"cognitive radios\" that can dynamically switch frequencies in response to jamming or interference. These radios will sense the electromagnetic spectrum in real-time, hopping to unused frequencies, thereby ensuring reliable communication in contested environments.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#cyber-signal-processing","title":"Cyber Signal Processing","text":"<ul> <li>Cyber-Physical Systems: With the increasing integration of cyber and physical systems, signal processing will help detect and respond to cyberattacks in real time. By analyzing network traffic and detecting unusual patterns, signal processing can alert military operators to potential cyber intrusions and automate defense responses to neutralize the threat.</li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#5-signal-processing-in-drones-and-robots-today","title":"5. Signal Processing in Drones and Robots Today","text":"<p>Currently, drones and robots rely on signal processing to perform many crucial functions, including navigation, target identification, and communication.</p>"},{"location":"prompts/13-history-of-signal-processing/#navigation-and-localization","title":"Navigation and Localization","text":"<ul> <li> <p>GPS and Inertial Navigation Systems: Drones and robots often use GPS for navigation, which involves signal processing to interpret satellite signals and calculate precise positioning. For environments where GPS is unavailable or jammed, inertial navigation systems (INS) are used, which require processing accelerometer and gyroscope data to estimate location.</p> </li> <li> <p>SLAM (Simultaneous Localization and Mapping): Drones and autonomous ground robots use SLAM algorithms to map unknown environments while keeping track of their own location. SLAM relies on real-time signal processing of sensor data from cameras, lidar, or radar to build maps and navigate autonomously.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#target-identification-and-tracking","title":"Target Identification and Tracking","text":"<ul> <li> <p>Image and Video Processing: Signal processing algorithms analyze visual data from cameras, infrared sensors, or radar to detect and track targets. AI-based processing is increasingly used to classify objects and distinguish between friend and foe, allowing drones to make targeting decisions autonomously or with minimal human input.</p> </li> <li> <p>Sensor Fusion: Robots and drones typically use multiple sensors (e.g., radar, lidar, and cameras) to gather data about their environment. Signal processing techniques fuse this data into a coherent picture, enabling more accurate object detection, obstacle avoidance, and threat identification.</p> </li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#communication-and-data-transmission","title":"Communication and Data Transmission","text":"<ul> <li>Encrypted Communication: Signal processing enables drones and robots to securely transmit data back to their operators or other units in the field. This includes processing for data compression, encryption, and error correction to ensure that signals are transmitted efficiently and securely in noisy environments or over long distances.</li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#6-future-role-of-signal-processing-in-autonomous-weapons","title":"6. Future Role of Signal Processing in Autonomous Weapons","text":"<p>Autonomous weapons, such as loitering munitions (also known as \"kamikaze drones\") and robotic sentries, will increasingly rely on signal processing for:</p> <ul> <li>Target Recognition and Decision-Making: Using AI-powered signal processing, these weapons can autonomously identify targets based on pre-defined criteria, such as the heat signature of a vehicle or the radar profile of an aircraft.</li> <li>Ethical and Legal Considerations: The use of autonomous systems in warfare raises ethical and legal challenges, particularly in the decision-making process of lethal autonomous weapons. Signal processing algorithms will need to ensure that these systems can distinguish between combatants and civilians, and make ethically sound decisions, which remains a significant challenge.</li> </ul>"},{"location":"prompts/13-history-of-signal-processing/#conclusion-the-future-of-warfare","title":"Conclusion: The Future of Warfare","text":"<p>In the future, innovations in signal processing will be at the core of advancements in autonomous systems, electronic warfare, surveillance, and cyber defense. As AI-driven drones and robots become more autonomous, signal processing will enable them to interpret complex sensor data, navigate dynamically changing environments, and make decisions faster and more accurately than ever before. Additionally, new frontiers like quantum signal processing will reshape communication, encryption, and detection systems, giving militaries unprecedented capabilities in both offensive and defensive operations. The future battlefield will increasingly be shaped by signal processing technologies, making it a key factor in determining the outcome of conflicts.</p>"},{"location":"prompts/15-prompt-to-create-mc-prompt/","title":"Prompt to Create a Multiple Choice Prompt","text":"<p>Prompt</p> <p>Please create a generative AI prompt for me that will create a high quality multiple choice question on a concept in the signalprocessingconcepts file.  This is a CSV file where there is one line per concept.  The prompt should help determine if the student understands the concept.</p> <p>Use the following format Output Format in the prompt you return</p>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#question-stem","title":"[Question stem]","text":"<p> 1. First item 2. Second item 3. Third item 4. Fourth item </p> Show Answer <p>The correct answer is [LETTER]. Explanation of why [LETTER] is the correct answer.</p> <p>Explanation:</p> <p>[Detailed explanation including why the correct answer is right and why each wrong answer is incorrect]</p> <p>Dependencies: [List any prerequisite concepts from the CSV]</p> <ul> <li>[Dependency 1]</li> <li>[Dependency 2]</li> </ul>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#response","title":"Response","text":"<p>I'll help create a prompt that will generate effective multiple choice questions. Let me first examine the CSV file to understand the concepts available.</p> <p>Based on the data I've examined, I'll create a prompt that will help generate high-quality multiple choice questions. Here's the prompt:</p> <p>Create a multiple choice question for the signal processing concept \"[Concept Name]\". Follow these requirements:</p>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#1-question-format","title":"1. Question Format:","text":"<ul> <li>Write a scenario-based question that tests conceptual understanding</li> <li>The question should require application of knowledge, not just definition recall</li> <li>Include real-world context where appropriate</li> <li>Target a undergraduate engineering student's knowledge level</li> </ul>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#2-answer-choices","title":"2. Answer Choices:","text":"<ul> <li>Provide exactly 4 options (A, B, C, D)</li> <li>Make all options plausible and similar in length</li> <li>Include common misconceptions as distractors</li> <li>Avoid obvious wrong answers</li> <li>Make the correct answer unambiguously right</li> <li>Format each option to complete the question stem or as a standalone answer</li> </ul>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#3-required-components","title":"3. Required Components:","text":"<ul> <li>Question stem</li> <li>4 answer choices</li> <li>Correct answer indicated</li> <li>Brief explanation of why the correct answer is right</li> <li>Brief explanations of why each wrong answer is incorrect</li> </ul>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#4-technical-requirements","title":"4. Technical Requirements:","text":"<ul> <li>Ensure all mathematical notation is clear and consistent</li> <li>If equations are used, they should be properly formatted</li> <li>Include units where applicable</li> <li>Avoid double-barreled questions</li> </ul> <p>Output Format:</p>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#question-stem_1","title":"[Question stem]","text":""},{"location":"prompts/15-prompt-to-create-mc-prompt/#question-text","title":"Question Text","text":"<ol> <li>First item</li> <li>Second item</li> <li>Third item</li> <li>Fourth item</li> </ol> <p>Correct Answer: [Letter]</p> <p>Explanation:</p> <p>[Detailed explanation including why the correct answer is right and why each wrong answer is incorrect]</p> <p>Dependencies: [List any prerequisite concepts from the CSV]</p>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#explanation","title":"Explanation","text":"<p>This prompt structure is designed to:</p> <ol> <li>Generate questions that test understanding rather than memorization</li> <li>Create plausible distractors based on common misconceptions</li> <li>Include proper context and real-world applications</li> <li>Maintain consistent technical rigor</li> <li>Provide clear explanations for learning purposes</li> </ol> <p>Would you like me to demonstrate how this prompt works with a specific concept from the CSV file?</p>"},{"location":"prompts/15-prompt-to-create-mc-prompt/#testing-the-prompt","title":"Testing the Prompt","text":"<p>Yes</p> <p>Create a multiple choice question for the signal processing concept \"Phasors\":</p> <p>Q: An electrical engineer is analyzing an AC circuit with a voltage signal V(t) = 120cos(377t + 30\u00b0) volts. Which phasor representation correctly describes this voltage signal at \u03c9 = 377 rad/s?</p> <p>A) 120\u222030\u00b0 V B) 120\u2220-30\u00b0 V C) 85\u222030\u00b0 V D) 169.7\u222030\u00b0 V</p> <p>Correct Answer: A</p> <p>Explanation:</p> <p>The correct answer is A) 120\u222030\u00b0 V because:</p> <ul> <li>The phasor representation captures the amplitude and phase angle of a sinusoidal signal</li> <li>For a cosine function A*cos(\u03c9t + \u03c6), the phasor form is A\u2220\u03c6</li> <li>The amplitude (120) and phase angle (30\u00b0) directly transfer to the phasor notation</li> <li>No additional conversion is needed for cosine functions (unlike sine functions)</li> </ul> <p>Why other answers are wrong:</p> <p>B) 120\u2220-30\u00b0 V: This represents a different signal with opposite phase shift C) 85\u222030\u00b0 V: This incorrectly converts the peak value to RMS (which isn't needed for phasor notation) D) 169.7\u222030\u00b0 V: This incorrectly multiplies the amplitude by \u221a2 (mixing up RMS conversion)</p> <p>Dependencies: Complex numbers, Euler's formula</p>"},{"location":"prompts/16-assessment-prompt/","title":"Assessment Prompt","text":"<p>Create a multiple choice question for the signal processing concept \"[Concept Name]\". Follow these requirements:</p>"},{"location":"prompts/16-assessment-prompt/#1-question-format","title":"1. Question Format:","text":"<ul> <li>Write a scenario-based question that tests conceptual understanding</li> <li>The question should require application of knowledge, not just definition recall</li> <li>Include real-world context where appropriate</li> <li>Target a undergraduate engineering student's knowledge level</li> </ul>"},{"location":"prompts/16-assessment-prompt/#2-answer-choices","title":"2. Answer Choices:","text":"<ul> <li>Provide exactly 4 options (A, B, C, D)</li> <li>Make all options plausible and similar in length</li> <li>Include common misconceptions as distractors</li> <li>Avoid obvious wrong answers</li> <li>Make the correct answer unambiguously right</li> <li>Format each option to complete the question stem or as a standalone answer</li> </ul>"},{"location":"prompts/16-assessment-prompt/#3-required-components","title":"3. Required Components:","text":"<ul> <li>Question stem</li> <li>4 answer choices</li> <li>Correct answer indicated</li> <li>Brief explanation of why the correct answer is right</li> <li>Brief explanations of why each wrong answer is incorrect</li> </ul>"},{"location":"prompts/16-assessment-prompt/#4-technical-requirements","title":"4. Technical Requirements:","text":"<ul> <li>Ensure all mathematical notation is clear and consistent</li> <li>If equations are used, they should be properly formatted</li> <li>Include units where applicable</li> <li>Avoid double-barreled questions</li> </ul> <p>Output Format:</p>"},{"location":"prompts/16-assessment-prompt/#question-stem","title":"[Question stem]","text":"<ol> <li>First item</li> <li>Second item</li> <li>Third item</li> <li>Fourth item</li> </ol> Show Answer <p>Correct Answer: [Letter]</p> <p>Explanation:</p> <p>[Detailed explanation including why the correct answer is right and why each wrong answer is incorrect]</p> <p>Dependencies: [List any prerequisite concepts from the CSV]</p>"},{"location":"prompts/17-important-circuits/","title":"Important Circuits in Signal Processing","text":"<p>Prompt</p> <p>What are the most important circuits that students should be familiar with in a signal processing course?  Include not just simple components like resistors and capacitors, but include things like OpAmps (Operational Amplifiers).</p> <p>Let me analyze the data from the signal processing concepts CSV to help provide a structured response.</p> <p>Based on my expertise in signal processing and electrical engineering, here are the most important circuits students should understand:</p>"},{"location":"prompts/17-important-circuits/#fundamental-building-blocks","title":"Fundamental Building Blocks:","text":""},{"location":"prompts/17-important-circuits/#1-rc-and-rl-circuits","title":"1. RC and RL Circuits","text":"<ul> <li>These form the basis of filtering and introduce the concept of frequency response</li> <li>Important for understanding time constants and phase relationships</li> <li>Critical for learning transfer functions</li> </ul>"},{"location":"prompts/17-important-circuits/#2-rlc-circuits","title":"2. RLC Circuits","text":"<ul> <li>Both series and parallel configurations</li> <li>Teaches resonance, bandwidth, and quality factor (Q)</li> <li>Forms the foundation for understanding filters and oscillators</li> </ul>"},{"location":"prompts/17-important-circuits/#active-circuits","title":"Active Circuits:","text":""},{"location":"prompts/17-important-circuits/#3-operational-amplifier-configurations","title":"3. Operational Amplifier Configurations","text":"<ul> <li>Inverting and non-inverting amplifiers</li> <li>Differential amplifiers</li> <li>Summing amplifiers</li> <li>Integrators and differentiators</li> <li>Unity gain buffers (voltage followers)</li> </ul>"},{"location":"prompts/17-important-circuits/#4-filter-implementations","title":"4. Filter Implementations","text":"<ul> <li>Active low-pass filters</li> <li>Active high-pass filters</li> <li>Band-pass filters</li> <li>Notch (band-stop) filters</li> <li>Looking at the base-and-treble code you provided, these concepts directly relate to audio processing</li> </ul>"},{"location":"prompts/17-important-circuits/#5-signal-generation-and-processing","title":"5. Signal Generation and Processing","text":"<ul> <li>Oscillators (Wien bridge, phase-shift)</li> <li>Voltage-controlled oscillators (VCOs)</li> <li>Phase-locked loops (PLLs)</li> <li>Schmitt triggers</li> <li>Peak detectors</li> </ul>"},{"location":"prompts/17-important-circuits/#6-data-conversion-circuits","title":"6. Data Conversion Circuits","text":"<ul> <li>Sample and hold circuits</li> <li>Voltage-to-frequency converters</li> <li>Digital-to-analog converters (basic understanding)</li> <li>Analog-to-digital converters (basic understanding)</li> </ul>"},{"location":"prompts/17-important-circuits/#7-instrumentation-circuits","title":"7. Instrumentation Circuits","text":"<ul> <li>Instrumentation amplifiers</li> <li>Current-to-voltage converters</li> <li>Bridge circuits</li> <li>Precision rectifiers</li> </ul> <p>For each of these circuits, students should understand:</p> <ul> <li>The basic circuit topology</li> <li>How to analyze the circuit mathematically</li> <li>The frequency response characteristics</li> <li>Common applications and limitations</li> <li>How to measure and troubleshoot the circuit</li> <li>The role of component non-idealities</li> </ul> <p>Special emphasis should be placed on understanding operational amplifiers as they are fundamental to modern analog signal processing. Students should be comfortable with both ideal and real OpAmp characteristics, including:</p> <ul> <li>Input and output impedance effects</li> <li>Bandwidth limitations</li> <li>Slew rate</li> <li>Common-mode rejection</li> <li>Power supply requirements</li> <li>Offset voltage and bias current</li> </ul>"},{"location":"sims/","title":"Signal Processing Sims","text":"<p>Graph Viewer</p>"},{"location":"sims/0-templates/","title":"MicroSim Template","text":"<p>Link to MicroSim Edit this MicroSim</p>"},{"location":"sims/0-templates/#about-this-microsim","title":"About this MicroSim","text":"<p>This MicroSim teaches us how to specify the drawing of a static filled circle.</p>"},{"location":"sims/0-templates/#sample-prompt","title":"Sample Prompt","text":"<pre><code>Create a single file p5.js sketch.\nDraw a green circle on a 600x400 canvas with a radius of 200.\n</code></pre>"},{"location":"sims/0-templates/#sample-response","title":"Sample Response","text":"<pre><code>let canvasHeight = 400;\nlet aspectRatio = 1.91; // Open Graph standard\nlet canvasWidth = canvasHeight * aspectRatio;\nlet radius = 200;\nfunction setup() {\nconst canvas = createCanvas(canvasWidth, canvasHeight);\n  canvas.parent('canvas-container');\n  fill(245);\n  rect(0,0, canvasWidth, canvasHeight);\n  fill('green');\n  circle(canvasWidth/2, canvasHeight/2, radius);\n}\n</code></pre>"},{"location":"sims/0-templates/#lesson-plan","title":"Lesson Plan","text":""},{"location":"sims/0-templates/#grade-level-subject-and-topic","title":"Grade Level, Subject and Topic","text":"<p>9th grade geometry. Circle and radius.</p>"},{"location":"sims/0-templates/#activities","title":"Activities","text":""},{"location":"sims/0-templates/#fill-color","title":"Fill Color","text":"<p>Change the color in the prompt.  You can specify any one of the 140 named colors.</p>"},{"location":"sims/0-templates/#border-weight","title":"Border Weight","text":"<p>Change the prompt to include a black border of width 10.</p>"},{"location":"sims/0-templates/#border-color","title":"Border Color","text":"<p>Change the prompt to make the border purple.</p>"},{"location":"sims/0-templates/#change-the-radius","title":"Change the Radius","text":"<p>Change the prompt to make the circle smaller or larger by changing the radius from 10 to 200.</p>"},{"location":"sims/0-templates/#change-the-location","title":"Change the Location","text":"<p>Change the prompt to move the circle to the left or right.</p>"},{"location":"sims/ai-pace-accelerating/","title":"The Accelerating Pace of AI","text":"<p>Use these templates to create a MicroSim that can be added to any website with just a single <code>iframe</code> HTML element.</p> <p>You can include this MicroSim in your code by copying the following into your website:</p> <pre><code>&lt;iframe src=\"/mains.html\" width=\"600px\" height=\"450px\" scrolling=\"no\"\n  style=\"overflow: hidden;\"&gt;&lt;/iframe&gt;\n</code></pre> <p></p> <p>Run the Circle Radius MicroSim</p> <p>Edit this MicroSim</p>"},{"location":"sims/analog-mod/","title":"Analog Modulation","text":"Analog Modulation Sim  Run the Analog modulation MicroSim"},{"location":"sims/analog-mod/#references","title":"References","text":"<ul> <li>Analog modulation introduction</li> </ul>"},{"location":"sims/analog-mod/#prompt","title":"Prompt","text":"<pre><code>Develop a p5.js simulation that demonstrates analog modulation examples, focusing on amplitude or frequency modulation schemes. Incorporate sliders for adjusting variables such as Ac (amplitude of the carrier signal), Am (amplitude of the modulating signal), fc (frequency of the carrier signal), and fm (frequency of the modulating signal). Ensure the ranges for these variables are selected carefully to facilitate seamless interactivity.\n</code></pre>"},{"location":"sims/base-and-treble/","title":"Base and Treble Amplifier Controls","text":"<p>To use this MicroSim on your web page, just copy this code into your web page. <pre><code>&lt;iframe src=\"/signal-processing/sims/base-and-treble/base-and-treble.html\" height=\"420\" scrolling=\"no\" style=\"overflow: hidden;\"&gt;&lt;/iframe&gt;\n</code></pre></p> <p>Run the Base and Treble MicroSim Edit the Base and Treble MicroSim</p> <pre><code>I would like to create a p5.js simulation of the frequency\nresponse of an old classic amplifier with base and treble knobs.\nInstead of knobs, use two sliders at the bottom of the canvas,\none for base and one for treble.\nThe sliders should start out in the middle.\n\nUse the following p5.js template for placement of the slider controls.\n</code></pre> <pre><code>// region drawing parameters\n// the width of the entire canvas\nlet canvasWidth = 400;\n// The top drawing region above the interactive controls\nlet drawHeight = 400;\n// control region height\nlet controlHeight = 50;\n// The total hight of both the drawing region height + the control region height\nlet canvasHeight = 450;\n// margin around the active plotting region\nlet margin = 25;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\nfunction setup {\n    const canvas = createCanvas(canvasWidth, canvasHeight);\n    // canvas.parent('canvas-container');\n    var mainElement = document.querySelector('main');\n    canvas.parent(mainElement);\n    textSize(defaultTextSize);\n\n    // create a new slider at th bottom of the canvas\n    mySlider = createSlider(0, 100, 50, 1);\n    mySlider.position(sliderLeftMargin, drawHeight + 12);\n    mySlider.style('width', canvasWidth -  sliderLeftMargin - 20 + 'px');\n\n}\n\nfunction draw() {\n    // make the background drawing region a very light blue\n    fill('aliceblue');\n    rect(0, 0, canvasWidth, drawHeight);\n    // make the background of the controls area white\n    fill('white')\n    rect(0, drawHeight, canvasWidth, controlHeight);\n\n    // get the updated slider value\n    val = mySlider.value();\n\n    // put your custom code here\n\n\n    // draw label and value\n    text(\"MySlider: \" +  val, 10, drawHeight + 25)\n}\n</code></pre>"},{"location":"sims/base-and-treble/#response","title":"Response","text":"<p>ChatGPT o1-preview Thought for 52 seconds</p> <p>Certainly! Below is the modified p5.js code that simulates the frequency response of a classic amplifier with bass and treble controls using two sliders. The sliders start in the middle and adjust the bass and treble settings. The frequency response is plotted on the canvas, showing how the settings affect the amplifier's output.</p> <pre><code>// region drawing parameters\n// the width of the entire canvas\nlet canvasWidth = 400;\n// The top drawing region above the interactive controls\nlet drawHeight = 400;\n// control region height\nlet controlHeight = 80;\n// The total height of both the drawing region height + the control region height\nlet canvasHeight = drawHeight + controlHeight;\n// margin around the active plotting region\nlet margin = 25;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\nlet bassSlider, trebleSlider;\n\nfunction setup() {\n  const canvas = createCanvas(canvasWidth, canvasHeight);\n  var mainElement = document.querySelector('main');\n  canvas.parent(mainElement);\n  textSize(defaultTextSize);\n\n  // Define slider left margin\n  let sliderLeftMargin = margin;\n\n  // Create bass slider\n  bassSlider = createSlider(0, 100, 50, 1);\n  bassSlider.position(sliderLeftMargin, drawHeight + 12);\n  bassSlider.style('width', canvasWidth - sliderLeftMargin - 20 + 'px');\n\n  // Create treble slider\n  trebleSlider = createSlider(0, 100, 50, 1);\n  trebleSlider.position(sliderLeftMargin, drawHeight + 12 + 30);\n  trebleSlider.style('width', canvasWidth - sliderLeftMargin - 20 + 'px');\n}\n\nfunction draw() {\n  // Set background color\n  background('white');\n\n  // Fill the drawing region with 'aliceblue'\n  fill('aliceblue');\n  noStroke();\n  rect(0, 0, canvasWidth, drawHeight);\n\n  // Fill the control region with 'white'\n  fill('white');\n  rect(0, drawHeight, canvasWidth, controlHeight);\n\n  // Get the updated slider values\n  let bassVal = bassSlider.value();\n  let trebleVal = trebleSlider.value();\n\n  // Normalize the slider values to range -1 to 1\n  let bassAmount = (bassVal - 50) / 50;\n  let trebleAmount = (trebleVal - 50) / 50;\n\n  // Define frequency range and number of points\n  let numPoints = 500;\n  let freqMin = 20;\n  let freqMax = 20000;\n\n  // Define EQ parameters\n  let f_bass_cutoff = 500;\n  let f_treble_cutoff = 2000;\n  let n = 4;\n  let maxGain = 12; // dB\n  let gainMin = -15; // dB\n  let gainMax = 15; // dB\n\n  // Begin shape for plotting the frequency response curve\n  noFill();\n  stroke(0);\n  beginShape();\n\n  for (let i = 0; i &lt; numPoints; i++) {\n    let fraction = i / (numPoints - 1);\n    let freq = freqMin * Math.pow(freqMax / freqMin, fraction);\n\n    // Compute lowShelf and highShelf\n    let lowShelf = 1 / (1 + Math.pow(freq / f_bass_cutoff, n));\n    let highShelf = 1 / (1 + Math.pow(f_treble_cutoff / freq, n));\n\n    // Compute gains\n    let bassGain_dB = bassAmount * maxGain * lowShelf;\n    let trebleGain_dB = trebleAmount * maxGain * highShelf;\n\n    let totalGain_dB = bassGain_dB + trebleGain_dB;\n\n    // Map frequency to x position\n    let x = map(\n      Math.log10(freq),\n      Math.log10(freqMin),\n      Math.log10(freqMax),\n      margin,\n      canvasWidth - margin\n    );\n\n    // Map gain to y position\n    let y = map(totalGain_dB, gainMin, gainMax, drawHeight - margin, margin);\n\n    // Plot the point\n    vertex(x, y);\n  }\n\n  endShape();\n\n  // Draw axes\n  stroke(150);\n  // x-axis at y = gain 0 dB\n  let yZero = map(0, gainMin, gainMax, drawHeight - margin, margin);\n  line(margin, yZero, canvasWidth - margin, yZero);\n\n  // Draw labels for frequencies\n  fill(0);\n  textAlign(CENTER, TOP);\n  text(\"Frequency Response\", canvasWidth / 2, margin / 2);\n\n  // Draw labels for sliders\n  textAlign(LEFT, CENTER);\n  fill(0);\n  text(\"Bass\", bassSlider.x + 5, bassSlider.y - 10);\n  text(\"Treble\", trebleSlider.x + 5, trebleSlider.y - 10);\n}\n`\n</code></pre> <p>Explanation:</p> <ul> <li> <p>Sliders Creation: Two sliders, <code>bassSlider</code> and <code>trebleSlider</code>, are created in the <code>setup()</code> function. They are positioned one below the other in the control area at the bottom of the canvas.</p> </li> <li> <p>Slider Values Normalization: The values from the sliders are normalized to a range of -1 to 1 to represent the adjustment from minimum to maximum gain.</p> </li> <li> <p>Frequency Response Calculation: The frequency response is calculated using shelving filter approximations for bass and treble adjustments. The gains are computed based on the slider positions and applied to low and high-frequency ranges.</p> </li> <li> <p>Plotting the Curve: The frequency response curve is plotted using <code>beginShape()</code> and <code>vertex()</code>. Frequencies are mapped logarithmically to the x-axis, and gains in decibels are mapped to the y-axis.</p> </li> <li> <p>Axes and Labels: Axes are drawn to represent 0 dB gain, and labels are added for clarity. The labels for the sliders are positioned above them.</p> </li> </ul> <p>Note: This code should be run in a p5.js environment. The canvas size and control regions are set according to the template provided. Adjustments can be made to the EQ parameters to simulate different amplifier characteristics.</p>"},{"location":"sims/base-and-treble/#refinement-of-placement-of-sliders","title":"Refinement of Placement of Sliders","text":"<pre><code>That was perfect. Now, please place the base slider\non the left and the treble slider on the right.\nPlace the labels under the sliders.\n\n## ChatGPT Response\n\nChatGPT o1-preview Thought for 31 seconds\n\nCertainly! Below is the updated p5.js code with the bass slider placed on the left and the treble slider on the right, with labels positioned under the sliders.\n\n```javascript\n// region drawing parameters\n// the width of the entire canvas\nlet canvasWidth = 400;\n// The top drawing region above the interactive controls\nlet drawHeight = 400;\n// control region height\nlet controlHeight = 80;\n// The total height of both the drawing region height + the control region height\nlet canvasHeight = drawHeight + controlHeight;\n// margin around the active plotting region\nlet margin = 25;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\nlet bassSlider, trebleSlider;\n\nfunction setup() {\n  const canvas = createCanvas(canvasWidth, canvasHeight);\n  var mainElement = document.querySelector('main');\n  canvas.parent(mainElement);\n  textSize(defaultTextSize);\n\n  // Define slider left margin\n  let sliderLeftMargin = margin;\n\n  // Define slider width (half the canvas width minus margins)\n  let sliderWidth = (canvasWidth - 3 * margin) / 2;\n\n  // Create bass slider on the left\n  bassSlider = createSlider(0, 100, 50, 1);\n  bassSlider.position(sliderLeftMargin, drawHeight + 12);\n  bassSlider.style('width', sliderWidth + 'px');\n\n  // Create treble slider on the right\n  trebleSlider = createSlider(0, 100, 50, 1);\n  trebleSlider.position(sliderLeftMargin + sliderWidth + margin, drawHeight + 12);\n  trebleSlider.style('width', sliderWidth + 'px');\n}\n\nfunction draw() {\n  // Set background color\n  background('white');\n\n  // Fill the drawing region with 'aliceblue'\n  fill('aliceblue');\n  noStroke();\n  rect(0, 0, canvasWidth, drawHeight);\n\n  // Fill the control region with 'white'\n  fill('white');\n  rect(0, drawHeight, canvasWidth, controlHeight);\n\n  // Get the updated slider values\n  let bassVal = bassSlider.value();\n  let trebleVal = trebleSlider.value();\n\n  // Normalize the slider values to range -1 to 1\n  let bassAmount = (bassVal - 50) / 50;\n  let trebleAmount = (trebleVal - 50) / 50;\n\n  // Define frequency range and number of points\n  let numPoints = 500;\n  let freqMin = 20;\n  let freqMax = 20000;\n\n  // Define EQ parameters\n  let f_bass_cutoff = 500;\n  let f_treble_cutoff = 2000;\n  let n = 4;\n  let maxGain = 12; // dB\n  let gainMin = -15; // dB\n  let gainMax = 15; // dB\n\n  // Begin shape for plotting the frequency response curve\n  noFill();\n  stroke(0);\n  beginShape();\n\n  for (let i = 0; i &lt; numPoints; i++) {\n    let fraction = i / (numPoints - 1);\n    let freq = freqMin * Math.pow(freqMax / freqMin, fraction);\n\n    // Compute lowShelf and highShelf\n    let lowShelf = 1 / (1 + Math.pow(freq / f_bass_cutoff, n));\n    let highShelf = 1 / (1 + Math.pow(f_treble_cutoff / freq, n));\n\n    // Compute gains\n    let bassGain_dB = bassAmount * maxGain * lowShelf;\n    let trebleGain_dB = trebleAmount * maxGain * highShelf;\n\n    let totalGain_dB = bassGain_dB + trebleGain_dB;\n\n    // Map frequency to x position\n    let x = map(\n      Math.log10(freq),\n      Math.log10(freqMin),\n      Math.log10(freqMax),\n      margin,\n      canvasWidth - margin\n    );\n\n    // Map gain to y position\n    let y = map(totalGain_dB, gainMin, gainMax, drawHeight - margin, margin);\n\n    // Plot the point\n    vertex(x, y);\n  }\n\n  endShape();\n\n  // Draw axes\n  stroke(150);\n  // x-axis at y = gain 0 dB\n  let yZero = map(0, gainMin, gainMax, drawHeight - margin, margin);\n  line(margin, yZero, canvasWidth - margin, yZero);\n\n  // Draw labels\n  fill(0);\n  textAlign(CENTER, TOP);\n  text(\"Frequency Response\", canvasWidth / 2, margin / 2);\n\n  // Draw labels for sliders under the sliders\n  textAlign(CENTER, TOP);\n  fill(0);\n  text(\"Bass\", bassSlider.x + bassSlider.width / 2, bassSlider.y + 20);\n  text(\"Treble\", trebleSlider.x + trebleSlider.width / 2, trebleSlider.y + 20);\n}\n</code></pre> <p>Explanation:</p> <ul> <li> <p>Slider Placement: The bass slider is placed on the left side of the control area, and the treble slider is placed on the right side. Both sliders have equal widths, calculated to fit within the canvas with appropriate margins.</p> </li> <li> <p>Slider Labels: The labels for \"Bass\" and \"Treble\" are positioned under the sliders by adjusting the <code>text()</code> function parameters in the <code>draw()</code> function.</p> </li> <li> <p>Slider Width Calculation:</p> </li> </ul> <pre><code> let sliderWidth = (canvasWidth - 3 * margin) / 2;\n ```\n\nThis calculation ensures that both sliders fit side by side within the canvas width, accounting for margins.\n\n-   **Slider Positioning:**\n\n-   **Bass Slider:**\n\n```javascript\nbassSlider.position(sliderLeftMargin, drawHeight + 12);\n</code></pre> <ul> <li>Treble Slider:</li> </ul> <pre><code> trebleSlider.position(sliderLeftMargin + sliderWidth + margin, drawHeight + 12);\n</code></pre> <ul> <li>Label Positioning: The labels are centered under each slider by using:</li> </ul> <pre><code>textAlign(CENTER, TOP);\n    text(\"Bass\", bassSlider.x + bassSlider.width / 2, bassSlider.y + 20);\n</code></pre> <ul> <li>Overall Layout: The control area at the bottom now neatly contains both sliders side by side with labels underneath, improving the user interface and meeting your requirements.</li> </ul> <p>Note: This code should work in a p5.js environment. Feel free to adjust the margins or slider widths if necessary to fit your specific layout preferences.</p>"},{"location":"sims/blooms-taxonomy/","title":"Bloom's Taxonomy MicroSim","text":"<pre><code>&lt;iframe src=\"./main.html\" height=\"600px\" width=\"600px\" scrolling=\"no\" style=\"overflow: hidden\"&gt;&lt;/iframe&gt;\n</code></pre> <p>Run the MicroSim Template Edit this MicroSim</p>"},{"location":"sims/blooms-taxonomy/#about-this-microsim","title":"About this MicroSim","text":"<p>This MicroSim teaches us how to specify the drawing of a static filled circle.</p> <p></p>"},{"location":"sims/blooms-taxonomy/#sample-prompt","title":"Sample Prompt","text":"<p>Prompt</p> <p>Create a single file p5.js sketch.   Draw a green circle on a 600x400 canvas with a radius of 200.</p>"},{"location":"sims/book-gen-workflow/","title":"Book Build Workflow","text":"<p>Use these templates to create a MicroSim that can be added to any website with just a single <code>iframe</code> HTML element.</p> <p>You can include this interactive infographic MicroSim in your textbook by adding the following HTML statement to your website:</p> <pre><code>&lt;iframe src=\"https://dmccreary.github.io/intelligent-textbooks/sims/book-gen-workflow/main.html\" height=\"610px\" scrolling=\"no\" style=\"overflow: hidden;\"&gt;&lt;/iframe&gt;\n</code></pre> <p>Run the Circle Radius MicroSim</p> <p>Edit this MicroSim</p>"},{"location":"sims/book-levels/","title":"Book Levels MicroSim","text":"<p>Use this MicroSim to create an interactive tool to view the five levels of intelligent textbooks.</p> <p>Run the Book Levels MicroSim - Responsive Version</p> <p>Edit the Book Levels MicroSim (Responsive)</p> <p>Copy this line of HTML into your website to include this MicroSim in your class website:</p> <pre><code>&lt;iframe src=\"https://dmccreary.github.io/intelligent-textbooks/sims/book-levels/main.html\" height=\"500px\" scrolling=\"no\"\n  style=\"overflow: hidden;\"&gt;&lt;/iframe&gt;\n</code></pre>"},{"location":"sims/book-levels/#how-to-use-five-levels-of-intelligent-textbooks-infographic-in-your-classroom","title":"How to Use Five Levels of Intelligent Textbooks Infographic in Your Classroom","text":"<p>This guide explains how to use the interactive \"Five Levels of Intelligent Textbooks\" MicroSim to understand the progression from traditional static textbooks to advanced AI-driven educational resources.  The iframe above makes it easy to include on any website.</p>"},{"location":"sims/book-levels/#overview","title":"Overview","text":"<p>The MicroSim presents a visual stair-step diagram showing the five levels of intelligent textbooks:</p> <ol> <li>Level 1: Static Textbooks (Red)</li> <li>Level 2: Interactive Content Textbooks (Blue)</li> <li>Level 3: Adaptive Textbooks (Teal)</li> <li>Level 4: Textbooks with Chatbots (Purple)</li> <li>Level 5: Autonomous AI Textbooks (Gold)</li> </ol>"},{"location":"sims/book-levels/#how-to-interact-with-the-microsim","title":"How to Interact with the MicroSim","text":"<ol> <li>Hover Interaction: Move your cursor over any of the five colored step levels to display detailed information about that level.</li> <li>Touch Interaction: On touch devices, tap a step to see its description.</li> <li>Responsive Design: The visualization automatically adjusts to your screen size, making it accessible on various devices.</li> </ol>"},{"location":"sims/book-levels/#understanding-each-level","title":"Understanding Each Level","text":""},{"location":"sims/book-levels/#level-1-static-textbooks","title":"Level 1: Static Textbooks","text":"<ul> <li>Characteristics: Traditional printed or digital formats with no interactive elements</li> <li>Usage: Over 90% of college textbooks remain at this level</li> <li>Applications: Suitable for simple content delivery where interaction isn't necessary</li> </ul>"},{"location":"sims/book-levels/#level-2-interactive-content-textbooks","title":"Level 2: Interactive Content Textbooks","text":"<ul> <li>Characteristics: Digital elements that engage readers beyond passive consumption</li> <li>Features: Keyword search, hyperlinks, embedded videos, simple quizzes, AI-generated MicroSims</li> <li>Benefits: Cost-effective enhancements that improve engagement with multimedia elements</li> </ul>"},{"location":"sims/book-levels/#level-3-adaptive-textbooks","title":"Level 3: Adaptive Textbooks","text":"<ul> <li>Characteristics: Dynamic content adjustment based on user input and performance</li> <li>Features: Personalized learning pathways, concept graph traversal, performance-based content selection</li> <li>Implementation: Requires data management systems and graph algorithms</li> <li>Privacy Caution: These systems collect and analyze student learning data to provide adaptivity, raising important privacy considerations that educators should address when implementing</li> </ul>"},{"location":"sims/book-levels/#level-4-textbooks-with-chatbots","title":"Level 4: Textbooks with Chatbots","text":"<ul> <li>Characteristics: Integration of intelligent conversational interfaces</li> <li>Features: LLM-powered tutoring assistants, GraphRAG architecture combining multiple AI technologies</li> <li>Implementation: Balances powerful LLMs with cost-effective smaller models</li> <li>Privacy Caution: Interactions with chatbots involve collecting potentially sensitive student questions and responses; institutions should implement proper data protection measures and transparency about how this interaction data is used</li> </ul>"},{"location":"sims/book-levels/#level-5-autonomous-ai-textbooks","title":"Level 5: Autonomous AI Textbooks","text":"<ul> <li>Characteristics: Future systems that fully understand individual learner needs</li> <li>Features: Deep understanding of student knowledge, real-time generation of customized lessons</li> <li>Current Status: Aspirational, requiring advanced hardware and more reliable LLMs</li> <li>Privacy Caution: The most advanced system would require extensive student data collection, including detailed cognitive and behavioral patterns; the educational benefits must be balanced against stringent privacy protections and ethical considerations about AI autonomy in educational settings</li> </ul>"},{"location":"sims/book-levels/#educational-applications","title":"Educational Applications","text":"<ul> <li>Comparative Analysis: Use the MicroSim to compare the features and capabilities of different textbook technologies</li> <li>Educational Planning: Help administrators understand the progression of educational technology to make informed decisions about textbook adoption</li> <li>Student Information: Introduce students to the different types of learning resources they might encounter in their educational journey</li> </ul>"},{"location":"sims/book-levels/#privacy-considerations-across-levels","title":"Privacy Considerations Across Levels","text":"<p>As textbooks advance from static (Level 1) to autonomous (Level 5), data collection and privacy concerns increase significantly:</p> <ul> <li>Level 1-2: Minimal privacy concerns as little or no student-specific data is collected</li> <li>Level 3: Begins collecting student performance and behavior data to enable adaptation</li> <li>Level 4: Stores conversation histories and student queries that may contain personal information</li> <li>Level 5: Would require comprehensive student profiling to deliver fully personalized experiences</li> </ul> <p>Educational institutions implementing higher-level intelligent textbooks should:</p> <ol> <li>Develop clear data privacy policies</li> <li>Obtain informed consent from students</li> <li>Implement robust data security measures</li> <li>Consider data minimization principles</li> <li>Provide transparency about how AI systems use student data</li> <li>Offer opt-out options where feasible</li> </ol>"},{"location":"sims/book-levels/#technical-notes","title":"Technical Notes","text":"<p>The MicroSim is built using p5.js and adapts to different screen sizes by: - Adjusting step sizes and text formatting based on screen width - Shortening labels on smaller screens for better readability - Maintaining touch functionality for mobile devices</p> <p>By exploring this MicroSim, users can gain a deeper understanding of how educational content is evolving with technology and the important considerations that come with these advancements.</p>"},{"location":"sims/convolution/","title":"Understanding Convolution: An Interactive Lesson","text":"<p>Edit this MicroSim</p>"},{"location":"sims/convolution/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this lesson, students will be able to:</p> <ol> <li>Understand convolution as a measure of overlap between two functions</li> <li>Visualize how the convolution operation works geometrically</li> <li>Connect the geometric interpretation to the mathematical definition</li> <li>Apply this understanding to basic signal processing concepts</li> </ol>"},{"location":"sims/convolution/#prerequisites","title":"Prerequisites","text":"<ul> <li>Basic understanding of functions</li> <li>Familiarity with coordinate systems</li> <li>Understanding of area calculations</li> </ul>"},{"location":"sims/convolution/#lesson-plan","title":"Lesson Plan","text":""},{"location":"sims/convolution/#part-1-introduction","title":"Part 1: Introduction","text":"<p>We define convolution informally as a way to measure how much two functions overlap as one slides over the other.</p> <p>There are many real-world applications of convolutions</p> <ul> <li>Image blurring in photo editing</li> <li>Audio echo effects</li> <li>Signal filtering in communications</li> <li>Data smoothing in statistics</li> </ul>"},{"location":"sims/convolution/#part-2-geometric-understanding","title":"Part 2: Geometric Understanding","text":""},{"location":"sims/convolution/#interactive-simulation-exploration","title":"Interactive Simulation Exploration","text":"<ol> <li> <p>Introduce the three regions of the simulation:</p> </li> <li> <p>Left: Square function f(x) (blue)</p> </li> <li>Middle: Triangle function g(x) (red)</li> <li> <p>Right: Convolution result (f * g)(x) (purple)</p> </li> <li> <p>Student Activities:</p> </li> </ol> <p>Move the slider slowly from left to right, observing:</p> <ul> <li>When does overlap begin?</li> <li>When is overlap maximum?</li> <li>How does the overlap change throughout?</li> </ul> <p>Key Observations:</p> <ul> <li>The height of the purple triangle represents the area of overlap</li> <li>Maximum overlap occurs when the square aligns with the triangle's peak</li> <li>The result is symmetric (why?)</li> </ul>"},{"location":"sims/convolution/#part-3-mathematical-connection","title":"Part 3: Mathematical Connection","text":"<p>The convolution formula:</p> \\[ (f * g)(x) = \\int f(\\tau)g(x-\\tau)d\\tau \\] <p>Connect simulation to formula: 1. f(\u03c4) is our moving square function 2. g(x-\u03c4) is our stationary triangle function 3. The integral (\u222b) represents the area of overlap 4. The slider position represents the x in our formula 5. The height of the purple triangle represents (f * g)(x) at that x position</p> <p>If we want to explicitly show the limits of integration (typically from -\u221e to \u221e for continuous convolution), we would write:</p> \\[ (f * g)(x) = \\int_{-\\infty}^{\\infty} f(\\tau)g(x-\\tau)d\\tau \\]"},{"location":"sims/convolution/#part-4-practice-and-discussion-10-minutes","title":"Part 4: Practice and Discussion (10 minutes)","text":"<p>Student Exercises:</p> <ol> <li>Predict the shape of the convolution result before sliding:</li> <li>Where will it start rising?</li> <li>Where will it peak?</li> <li> <p>Where will it return to zero?</p> </li> <li> <p>Discussion Questions:</p> </li> <li>Why is the result symmetric?</li> <li>What determines the maximum height of the result?</li> <li>How would the result change if we used two squares instead?</li> <li>How would it change with two triangles?</li> </ol>"},{"location":"sims/convolution/#assessment-questions","title":"Assessment Questions","text":"<ol> <li>What determines the height of the purple triangle at any given slider position?</li> <li>Why does the convolution result reach its maximum when the square is centered on the triangle?</li> <li>If we made the blue square wider, how would that affect the purple result?</li> <li>How does this geometric interpretation help understand the convolution formula?</li> </ol>"},{"location":"sims/convolution/#extended-learning","title":"Extended Learning","text":"<p>Challenge students to think about:</p> <ol> <li>How this relates to digital filters in signal processing</li> <li>Why convolution is useful for image blurring</li> <li>How changing the shapes of f(x) and g(x) would affect the result</li> <li>The relationship between convolution and correlation</li> </ol>"},{"location":"sims/convolution/#common-misconceptions-to-address","title":"Common Misconceptions to Address","text":"<ol> <li>The height of the result is NOT the height of overlap, but the AREA of overlap</li> <li>Convolution is NOT multiplication at a point, but integration of product over all overlapping points</li> <li>The result shape depends on BOTH input shapes, not just one</li> </ol>"},{"location":"sims/convolution/#homework-suggestions","title":"Homework Suggestions","text":"<ol> <li>Sketch predicted convolution results for different function pairs</li> <li>Find real-world examples of convolution in signal processing</li> <li>Write a brief explanation of why the convolution result is smooth even with a square input</li> </ol>"},{"location":"sims/convolution/#additional-resources","title":"Additional Resources","text":"<ul> <li>Signal processing textbook chapters on convolution</li> <li>Online visualizations of 2D convolution for image processing</li> <li>Audio processing examples using convolution for reverb effects</li> </ul>"},{"location":"sims/fft/","title":"Fast Fourier Trsnaform","text":"Fast Fourier transform Sim  Run the FFT MicroSim  <p>FFT, or Fast Fourier Transform, is an algorithm designed to compute the Discrete Fourier Transform (DFT) and its inverse efficiently. The DFT is a mathematical transformation used to convert a signal from its original domain (often time or space) into a frequency domain. FFT is widely used because it reduces the complexity of computing the DFT from \\(O(n^2)\\) to \\(O(n \\log n)\\), where \\(n\\) is the number of data points. This efficiency is critical in processing large datasets and in applications where real-time processing is required, such as audio signal processing, image analysis, and solving partial differential equations.</p> <p>The key advantage of using FFT is that it helps in analyzing the frequency characteristics of signals, filtering, and managing signals in the frequency domain more effectively. It has numerous applications in engineering, physics, applied mathematics, and computer science, making it a fundamental tool in many scientific and engineering tasks.</p>"},{"location":"sims/frequency-detection/","title":"Frequency Detection","text":"Frequency Detection MicroSim <p>Run the Frequency Detection MicroSim</p>"},{"location":"sims/graph-viewer/","title":"Graph Viewer","text":"<p>Here are a few example programs to view the learning graph using the vis.js JavaScript library.  We start with a simple </p>"},{"location":"sims/graph-viewer/#simple-graph-view-with-pinned-foundation-and-goal-nodes","title":"Simple Graph View with Pinned Foundation and Goal Nodes","text":"<p>Run the View JSON Graph MicroSim</p> <p>Here are the changes we made to a standard vis.js template to pin the foundation nodes to the left and the goal nodes to the right.</p> <pre><code>// Extract nodes from the JSON data\nconst nodes = new vis.DataSet(data.nodes);\n\n// Function to fix the x positions for foundation and goal groups after JSON load\n// and set red boxes for foundation and gold stars for goals\nnodes.forEach(function (node) {\n    if (node.group === \"found\") {\n        node.x = -900;\n        node.fixed = { x: true, y: false }; // Fix x, but let y be adjusted by physics\n        node.shape = \"box\";\n        node.color = \"red\";\n        node.font = {\"color\": \"white\"};\n    } else if (node.group === \"goal\") {\n        node.x = 900;\n        node.fixed = { x: true, y: false }; // Fix x, but let y be adjusted by physics\n        node.shape = \"star\";\n        node.color = \"gold\";\n    }\n});\n</code></pre>"},{"location":"sims/graph-viewer/#adding-styling","title":"Adding Styling","text":"<p>View JSON Graph V2</p> <p>View Leaning Graph with Sidebar V3</p>"},{"location":"sims/mobius-transform/","title":"Mobius Transform","text":"Run the Mobius Transform MicroSim"},{"location":"sims/mobius-transform/#references","title":"References","text":"<ul> <li>Mobius Transform Wikipedia</li> <li>Smith Chart and the Mobius Transform</li> <li>Desmos Implementation</li> </ul>"},{"location":"sims/mobius-transform/#prompt","title":"Prompt","text":"<p><pre><code>Create p5.js interactive script that allows the user to view and alter a mobius transform. \nGraph the coeffiecients as draggable vectors, and display a point domain of configurable scale and density.\nCreate a user drawable side canvas, map the drawn points back through the transform and displays it alongside the current point map visualization.\n</code></pre> * ChatGPT conversation history</p>"},{"location":"sims/nyquist-shannon-sampling/","title":"Nyquist-Shannon Sampling","text":"<p>Run the Nyquist-Shannon Sampling MicroSim Edit This MicroSim</p> <pre><code>Please help me create a p5.js simulation that helps\nstudents understand Sampling and Aliasing. The Nyquist-Shannon\nsampling theorem and the concept of aliasing involve understanding\nhow continuous signals are represented in discrete form. Grasping\nhow undersampling leads to frequency overlap (aliasing) can be non-intuitive.\n\nI would like an Interactive p5.js program that can demonstrate how\nvarying the sampling rate affects the reconstructed signal.\nBy adjusting parameters in real-time, students can visualize\naliasing effects and the importance of adhering to the Nyquist rate.\n\nPlease create a p5.js simulation that allows students to use a\nslider to adjust the sampling rate for a waveform using a slider.\nDisplay two waveforms. One is the input with the samples drawn\nas radius 7 red circles. The second waveform is one done from\nthe reconstruction of the sampling points.\nPlace the original on the top and the reconstruction under\nthe original.\n\nUse the following template:\n</code></pre> <pre><code>// region drawing parameters\n// the width of the entire canvas\nlet canvasWidth = 400;\n// The top drawing region above the interactive controls\nlet drawHeight = 400;\n// control region height\nlet controlHeight = 50;\n// The total hight of both the drawing region height + the control region height\nlet canvasHeight = 450;\n// margin around the active plotting region\nlet margin = 25;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\nfunction setup {\n    const canvas = createCanvas(canvasWidth, canvasHeight);\n    // canvas.parent('canvas-container');\n    var mainElement = document.querySelector('main');\n    canvas.parent(mainElement);\n    textSize(defaultTextSize);\n\n    // create a new slider at th bottom of the canvas\n    mySlider = createSlider(0, 100, 50, 1);\n    mySlider.position(sliderLeftMargin, drawHeight + 12);\n    mySlider.size(canvasWidth - 2*margin);\n\n}\n\nfunction draw() {\n    // make the background drawing region a very light blue\n    fill('aliceblue');\n    rect(0, 0, canvasWidth, drawHeight);\n    // make the background of the controls area white\n    fill('white')\n    rect(0, drawHeight, canvasWidth, controlHeight);\n\n    // get the updated slider value\n    val = mySlider.value();\n\n    // put your custom code here\n\n\n    // draw label and value\n    text(\"MySlider: \" +  val, 10, drawHeight + 25)\n}\n</code></pre>"},{"location":"sims/nyquist-shannon-sampling/#chatgpt-response","title":"ChatGPT Response","text":"<p>o1-preview Thought for 6 seconds</p> <p>Sure! Below is a p5.js simulation that demonstrates sampling and aliasing. You can adjust the sampling rate using a slider to see how it affects the reconstructed signal.</p>"},{"location":"sims/nyquist-shannon-sampling/#simulation-code","title":"Simulation Code","text":"<pre><code>// Nyquist-Shannon Sampling Rate MicroSim\n// region drawing parameters\n// the width of the entire canvas\nlet canvasWidth = 450;\n// The top drawing region above the interactive controls\nlet drawHeight = 350;\n// control region height\nlet controlHeight = 50;\n// The total height of both the drawing region height + the control region height\nlet canvasHeight = drawHeight + controlHeight;\n// margin around the active plotting region\nlet margin = 30;\n// larger text so students in the back of the room can read the labels\nlet defaultTextSize = 16;\n\nlet samplingRateSlider;\nlet samplingRate = 22; // Initial sampling rate\nlet signalFrequency = 5; // Frequency of the original signal\nlet time = [];\nlet signal = [];\nlet sampledSignal = [];\n\nfunction setup() {\n  createCanvas(canvasWidth, canvasHeight);\n  const canvas = createCanvas(canvasWidth, canvasHeight);\n  var mainElement = document.querySelector('main');\n  canvas.parent(mainElement);\n  textSize(defaultTextSize);\n\n  // slider to allow the user to select the sampling rate\n  samplingRateSlider = createSlider(1, 50, samplingRate, .1);\n  samplingRateSlider.position(20, drawHeight + 30);\n  samplingRateSlider.size(canvasWidth - margin);\n\n  // Generate time values\n  for (let t = 0; t &lt;= width; t++) {\n    time.push(t);\n  }\n\n  // Generate original signal values\n  for (let i = 0; i &lt; time.length; i++) {\n    let t = time[i];\n    signal[i] = sin(TWO_PI * signalFrequency * (t / width));\n  }\n}\n\nfunction draw() {\n  // Fill the drawing region background with 'aliceblue'\n  fill('aliceblue');\n  stroke('black');\n  rect(0, 0, canvasWidth, drawHeight);\n\n  // Fill the control region background with 'white'\n  fill('white');\n  rect(0, drawHeight, canvasWidth, controlHeight);\n\n  samplingRate = samplingRateSlider.value();\n\n  // Draw title\n  textSize(24);\n  fill('black');\n  strokeWeight(0);\n  textAlign(CENTER);\n  text('Nyquist-Shannon Sampling Rate', canvasWidth / 2, 30);\n\n  // Draw labels\n  textSize(16);\n  fill('black');\n  strokeWeight(0);\n  textAlign(CENTER);\n  text('Original Signal with Sampling Points', canvasWidth / 2, 60);\n  text('Reconstructed Signal from Samples', canvasWidth / 2, drawHeight / 2 + 45);\n  textAlign(LEFT);\n  text('Sampling Rate: ' + round(samplingRate/5,2) + ' samples per period', 20, drawHeight + 20);\n\n  // Draw original signal\n  stroke(0);\n  noFill();\n  strokeWeight(1.5);\n  beginShape();\n    for (let i = 0; i &lt; signal.length; i++) {\n      let y = map(signal[i], -1, 1, 100, 0);\n      vertex(time[i], y + 80);\n    }\n  endShape();\n\n  // Sample the signal\n  sampledSignal = [];\n  let sampleInterval = floor(width / samplingRate);\n  for (let i = 0; i &lt; time.length; i += sampleInterval) {\n    let y = map(signal[i], -1, 1, 100, 0);\n    sampledSignal.push({ x: time[i], y: y + 30 });\n    // Draw sampling points\n    fill(255, 0, 0);\n    noStroke();\n    circle(time[i], y + 80, 7);\n  }\n\n  // Reconstruct the signal from samples\n  stroke('blue');\n  strokeWeight(2);\n  noFill();\n  beginShape();\n  for (let i = 0; i &lt; sampledSignal.length; i++) {\n    vertex(sampledSignal[i].x, sampledSignal[i].y + height / 2);\n  }\n  endShape();\n\n  // Draw reconstructed signal\n  stroke(0);\n  noFill();\n  beginShape();\n  for (let i = 0; i &lt; sampledSignal.length - 1; i++) {\n    let x1 = sampledSignal[i].x;\n    let y1 = sampledSignal[i].y + height / 2;\n    let x2 = sampledSignal[i + 1].x;\n    let y2 = sampledSignal[i + 1].y + height / 2;\n    line(x1, y1, x2, y2);\n  }\n  endShape();\n}\n</code></pre>"},{"location":"sims/nyquist-shannon-sampling/#how-to-use-the-simulation","title":"How to Use the Simulation","text":"<ol> <li> <p>Adjust the Sampling Rate: Use the slider at the bottom of the canvas to change the sampling rate. The sampling rate is displayed above the slider.</p> </li> <li> <p>Observe the Top Graph: The top waveform represents the original signal. Red circles indicate the sampling points based on the current sampling rate.</p> </li> <li> <p>Observe the Bottom Graph: The bottom waveform is reconstructed from the sampled points. As you adjust the sampling rate, notice how the reconstructed signal changes.</p> </li> </ol>"},{"location":"sims/nyquist-shannon-sampling/#explanation-of-the-code","title":"Explanation of the Code","text":""},{"location":"sims/nyquist-shannon-sampling/#variables","title":"Variables","text":"<ul> <li><code>samplingRateSlider</code>: The slider control for adjusting the sampling rate.</li> <li><code>samplingRate</code>: The current sampling rate value from the slider.</li> <li><code>signalFrequency</code>: The frequency of the original signal.</li> <li><code>time</code>, <code>signal</code>, <code>sampledSignal</code>: Arrays to store time values, original signal values, and sampled signal points, respectively.</li> </ul>"},{"location":"sims/nyquist-shannon-sampling/#setup-function","title":"setup()` Function","text":"<ul> <li>Initializes the canvas and the slider.</li> <li>Generates time values and computes the original signal using a sine function.</li> </ul>"},{"location":"sims/nyquist-shannon-sampling/#draw-function","title":"<code>draw()</code> Function","text":"<ul> <li>Clears the background and updates the sampling rate from the slider.</li> <li>Draws labels and the original signal waveform.</li> <li>Samples the original signal at intervals based on the sampling rate and draws red circles at the sampling points.</li> <li>Reconstructs the signal from the sampled points and draws it in the bottom half of the canvas.</li> </ul>"},{"location":"sims/nyquist-shannon-sampling/#key-concepts-demonstrated","title":"Key Concepts Demonstrated","text":"<ul> <li> <p>Sampling Rate: The number of samples taken per period of the signal. A higher sampling rate captures the signal more accurately.</p> </li> <li> <p>Aliasing: When the sampling rate is too low (below the Nyquist rate), the reconstructed signal may differ significantly from the original, demonstrating aliasing effects.</p> </li> </ul>"},{"location":"sims/nyquist-shannon-sampling/#running-the-simulation","title":"Running the Simulation","text":"<p>To run this simulation:</p> <ol> <li>Copy the code above.</li> <li>Go to the p5.js online editor.</li> <li>Paste the code into the editor.</li> <li>Click the \"Play\" button to start the simulation.</li> </ol> <p>Feel free to experiment with different signal frequencies or modify the code to explore further concepts related to sampling and aliasing.</p>"},{"location":"sims/rc-lowpass-filter/","title":"RC Lowpass Filter","text":"<p>Creates a Bode Plot showing phase and magnitude for any inputted RC filter combination</p> <p></p> Run the RC Lowpass Filter Simulation"},{"location":"sims/sine-wave/","title":"Sine Wave","text":"<p>Run the Sine Wave MicroSim Edit the Sine Wave MicroSim</p> <p>To include this MicroSim on your web site, just copy the following line of HTML code:</p> <pre><code>&lt;iframe src=\"https://dmccreary.github.io/signal-processing/sims/sine-wave/main.html\" height=\"480px\" scrolling=\"no\"\n  style=\"overflow: hidden;\"&gt;&lt;/iframe&gt;\n</code></pre> <p>In this demo, we use three range control sliders to change  the ways a sine wave is drawn on a canvas. The three parameters are:</p> <ol> <li>amplitude</li> <li>period</li> <li>and phase</li> </ol>"},{"location":"sims/sine-wave/#prompt","title":"Prompt","text":"<pre><code>Generate a static sine wave on a grid of cartesian coordinates. \nMake (0,0) be at the center of an 600x400 canvas and larger y at the top.  \nAdd sliders for period, amplitude and phase.\nProvide the label and values to the left of the sliders.\nMake the sliders span the width less the leftSliderMargin of 100.\nDraw and label the X and Y Axis.\n</code></pre> <p>Edit This MicroSim with the P5.js Editor</p>"},{"location":"sims/sine-wave/#result","title":"Result","text":"<pre><code>// sine wave with 3 sliders\nlet width = 600;\nlet height = 400;\nlet halfWidth = width / 2\nlet halfHeight = height / 2\nlet amplitude = 100;\nlet phase = 0;\n\nlet amplitudeSlider, periodSlider, phaseSlider;\nlet labelValueMargin = 120;\n\nfunction setup() {\n  createCanvas(width, height);\n  textSize(16)\n\n  // Create sliders\n  amplitudeSlider = createSlider(0, 200, 100);\n  amplitudeSlider.position(labelValueMargin, height - 20);\n  amplitudeSlider.style('width', width - labelValueMargin + 'px')\n\n  periodSlider = createSlider(1, 100, 50);\n  periodSlider.position(labelValueMargin, height - 40);\n  periodSlider.style('width', width - labelValueMargin + 'px')\n\n  phaseSlider = createSlider(-PI*100, PI*100, 0, 0.01);\n  phaseSlider.position(labelValueMargin, height - 60);\n  phaseSlider.style('width', width - labelValueMargin + 'px')\n}\n\nfunction draw() {\n  background(240);\n\n  amplitude = amplitudeSlider.value();\n  period = periodSlider.value();\n  phase = phaseSlider.value();\n\n  // draw on the standard axis to keep text upright\n  drawAxis();\n  translate(width / 2, height / 2); // Shift origin to center\n  scale(1, -1); // Flip y-axis to make positive y up\n\n  drawSineWave(amplitude, 1/period, phase);\n}\n\nfunction setLineDash(list) {\n  drawingContext.setLineDash(list);\n}\n\nfunction drawAxis() {\n  fill('black')\n  strokeWeight(0)\n  text('y', halfWidth-20, 15)\n  text('x', width-20, halfHeight + 20)\n  stroke('gray')\n  strokeWeight(1)\n  setLineDash([5, 5])\n\n  // horizontal line\n  line(0, halfHeight, width, halfHeight)\n  // vertical line\n  line(halfWidth, 0, halfWidth, height)\n\n  stroke(0)\n  strokeWeight(0);\n  fill('black'); // Text color\n  text('Amplitude: ' + amplitude/100,    10, height - 5);\n  text('Period: '    + period,           10, height - 25);\n  text('Phase: '     + phase.toFixed(2), 10, height - 45);\n}\n\nfunction drawSineWave(amplitude, frequency, phase) {\n  stroke('blue');\n  strokeWeight(3)\n  noFill();\n  // turn off dash line\n  setLineDash([1, 0])\n  beginShape();\n    for (let x = -width / 2; x &lt; width / 2; x++) {\n      let y = amplitude * sin(frequency * (x - phase));\n      vertex(x, y);\n    }\n  endShape();\n}\n</code></pre> <p>Challenge</p> <p>Create your own trigonometry demos by drawing the cosine and tangent functions.</p>"},{"location":"sims/sine-wave/#lesson-plan","title":"Lesson Plan","text":""},{"location":"sims/sine-wave/#prompt_1","title":"Prompt","text":"<pre><code>Generate a lesson plan for a 9th grade geometry class \nthat accompanies the following p5.js demonstration:\n\nThe users see a sine wave on the screen.\nThere are three range control sliders under the sine wave.\nOne slider changes the amplitude of the sine wave.\nOne slider changes the period of the sine wave.\nOne slider changes the phase of the sine wave.\n</code></pre>"},{"location":"sims/sine-wave/#grade-level","title":"Grade Level","text":"<p>9th Grade  </p>"},{"location":"sims/sine-wave/#subject","title":"Subject","text":"<p>Geometry  </p>"},{"location":"sims/sine-wave/#duration","title":"Duration","text":"<p>1-2 class periods (40-80 minutes)  </p>"},{"location":"sims/sine-wave/#tools-needed","title":"Tools Needed","text":"<p>Computers with internet access, p5.js web editor, projector for demonstrations.</p>"},{"location":"sims/sine-wave/#objectives","title":"Objectives","text":"<ol> <li>Understand the basic properties of sine waves (amplitude, period, phase).</li> <li>Learn how to manipulate these properties using p5.js.</li> <li>Visualize the effects of changing each property on the shape of the sine wave.</li> </ol>"},{"location":"sims/sine-wave/#introduction-10-minutes","title":"Introduction (10 minutes)","text":"<ul> <li>Begin with a brief overview of sine waves and their significance in mathematics and the real world (e.g., sound waves, light waves).</li> <li>Introduce the p5.js tool and its purpose in visualizing mathematical concepts.</li> </ul>"},{"location":"sims/sine-wave/#demonstration-15-minutes","title":"Demonstration (15 minutes)","text":"<ul> <li>Project the p5.js sine wave demonstration on the screen.</li> <li>Explain each control slider and its corresponding property:</li> <li>Amplitude: Height of the wave peaks.</li> <li>Period: Distance between successive wave peaks.</li> <li>Phase: Horizontal shift of the entire wave.</li> </ul>"},{"location":"sims/sine-wave/#interactive-activity-30-minutes","title":"Interactive Activity (30 minutes)","text":"<ul> <li>Students will use the p5.js web editor to experiment with the sine wave.</li> <li>Tasks for students:</li> <li>Adjust the amplitude and observe changes.</li> <li>Modify the period and note the effects.</li> <li>Change the phase and discuss how the wave shifts.</li> <li>Encourage students to note their observations and any patterns they discover.</li> </ul>"},{"location":"sims/sine-wave/#group-discussion-10-minutes","title":"Group Discussion (10 minutes)","text":"<ul> <li>Regroup and discuss the findings.</li> <li>Ask students to explain how each parameter affects the wave.</li> <li>Discuss practical applications of sine waves.</li> </ul>"},{"location":"sims/sine-wave/#assessment-5-15-minutes","title":"Assessment (5-15 minutes)","text":"<ul> <li>Provide a short quiz or worksheet asking students to match wave diagrams with their corresponding amplitude, period, and phase settings.</li> </ul>"},{"location":"sims/sine-wave/#homework-optional","title":"Homework (optional)","text":"<ul> <li>Students create their own p5.js sketch that includes a sine wave with adjustable properties.</li> <li>They should write a brief report explaining how changing each property affects the wave and include screenshots of their sketch.</li> </ul>"},{"location":"sims/sine-wave/#extensions-optional","title":"Extensions (optional)","text":"<ul> <li>Introduce concepts of frequency and angular velocity related to sine waves.</li> <li>Explore other trigonometric functions like cosine and tangent using p5.js.</li> </ul>"},{"location":"sims/sine-wave/#resources","title":"Resources","text":"<ul> <li>Access to the p5.js web editor and basic tutorials.</li> <li>Diagrams and explanations of sine waves and their properties.</li> </ul>"},{"location":"sims/sine-wave/#references","title":"References","text":""},{"location":"sims/synth-timeline/","title":"Synth Timeline","text":"<p>Run the Synth Timeline</p>"},{"location":"sims/timeline-viewer/","title":"Signal Processing Timeline","text":"<p>Run the Timeline Event Viewer MicroSim</p> <p>View Events in vis.js events JSON Format</p>"},{"location":"sims/timeline-viewer/#references","title":"References","text":"<ul> <li>Vis.js Timeline Docs</li> <li>Timeline Prompt</li> <li>ChatGPT Dialog History</li> </ul>"},{"location":"sims/wordcloud/","title":"Wordcloud for Signal Processing","text":""},{"location":"sims/wordcloud/#version-1","title":"Version 1","text":"<p>Version 1</p> <p>Version 2</p> <p>Wordcloud App</p>"},{"location":"stories/","title":"Signal Processing Stories","text":"<p>These stories were created mostly by generative AI.  I used a generative AI to generate some story ideas and then wrote some detailed prompts that created a narrative for the stories.  Each story also included narratives that were fed into the OpenAI DALL-E 3 text to image system.  You can see examples of the narrative prompts, the image prompts and the reference prompts.</p>"},{"location":"stories/#frequency-hopping-the-untold-story-of-hedy-lamarr-engineer-and-hollywood-star","title":"Frequency Hopping: The Untold Story of Hedy Lamarr, Engineer and Hollywood Star","text":"<p>In the glittering world of 1940s Hollywood, Hedy Lamarr led an extraordinary double life - by day, she was a glamorous movie star dubbed \"the most beautiful woman in the world,\" but by night, she was a brilliant inventor whose mind would revolutionize modern technology. After escaping her controlling first husband, an Austrian arms manufacturer where she secretly absorbed technical knowledge about weapons systems, Hedy fled to America and became a film star. During World War II, she conceptualized frequency-hopping technology to prevent enemy jamming of radio-controlled torpedoes, collaborating with composer George Antheil to develop a synchronization method inspired by player pianos. Though their 1942 patent was initially dismissed by the U.S. Navy, who couldn't fathom that an actress could contribute to military technology, their groundbreaking invention eventually became the foundation for secure military communications, GPS, Bluetooth, and Wi-Fi used by billions today. Hedy's remarkable story exemplifies the qualities of a great engineer - curiosity, creativity, persistence, and courage - and stands as a powerful reminder that innovation can come from unexpected places, regardless of gender or profession.</p> <p>Read the Frequency Hopping Story</p>"},{"location":"stories/#algorithm-of-the-century-cooley-and-tukeys-fft-revolution","title":"Algorithm of the Century: Cooley and Tukey's FFT Revolution","text":"<p>This tells the story of how James Cooley and John Tukey revolutionized signal processing by developing the Fast Fourier Transform algorithm in 1965 during the Cold War. Born from the practical need to detect Soviet nuclear tests, their breakthrough reduced calculation time from N\u00b2 to N log N operations, making previously impossible computations feasible on 1960s computers. The algorithm spread rapidly across scientific disciplines after being published, enabling real-time signal analysis for applications ranging from seismology to astronomy. The FFT ultimately transformed entire industries\u2014creating the foundation for digital signal processing, enabling technologies like MRI machines, digital audio, telecommunications, and countless other innovations that shape our modern digital world. Their story illustrates how elegant mathematical solutions to efficiency problems can have far greater impact than raw computing power alone.</p> <p>Read the FFT Story</p>"},{"location":"stories/#the-wavelet-revolution-ingrid-daubechies-mathematical-journey","title":"The Wavelet Revolution: Ingrid Daubechies' Mathematical Journey","text":"<p>Ingrid Daubechies, a brilliant Belgian mathematician working in her garden in 1980, saw mathematical patterns where others saw only flowers and soil. Recognizing the limitations of traditional Fourier transforms in analyzing real-world signals that change over time, she worked tirelessly to develop a revolutionary alternative. In 1987, despite skepticism from her male-dominated field, Daubechies created the first orthogonal wavelets with compact support\u2014mathematical building blocks that could capture both frequency and time information in signals. Her breakthrough transformed numerous fields, from digital image compression to medical imaging, ultimately becoming fundamental to modern technologies like JPEG2000 and MP3 files. Breaking glass ceilings, she received the MacArthur \"Genius\" Fellowship and became the first female president of the International Mathematical Union and the first female full professor in Princeton's Mathematics Department. Beyond her mathematical contributions, Daubechies demonstrated that the qualities of great engineers and scientists\u2014persistence, creativity, courage, and connecting abstract ideas to practical needs\u2014are not limited by gender, creating waves of change that continue to inspire diverse new generations of mathematicians and engineers.</p> <p>Read the Wavelets Story</p>"},{"location":"stories/story-ideas/","title":"Story Ideas","text":"<p>Prompt</p> <p>Please consult the course-description.md file in the Project knowledge area.</p> <p>I would like to create some short graphic novels to tell stories about how individuals contributed to the field of signal processing over the last 100 years starting with the work of Claude Shannon at Bell Labs.  Each story should be understandable by high-school students and not require complex calculus to understand.  However, the stories can highlight the role of mathematics in innovation.</p> <p>I am interested in stories about how individuals were not willing to put up with the status que and were willing to be advocates for change and new ways of doing things.</p> <p>Can you please suggest some ideas for these stories?  Create a catchy title for each story and create a one paragraph description of the story.</p> <p>Let me search for some key figures in signal processing history, starting with Claude Shannon, to ensure accuracy in my suggestions.</p> <p>Let me also search for a more diverse set of signal processing pioneers to give you varied story ideas:</p> <p>Let me also search for additional signal processing pioneers to give you a more diverse set of story ideas:</p> <p>Let me search for one more pioneer to give you a diverse set of story ideas:</p> <p>Based on my research and the information provided, here are some engaging story ideas for graphic novels about signal processing pioneers who challenged the status quo. Each story is designed to be accessible to high school students while highlighting the mathematical aspects of signal processing innovations.</p>"},{"location":"stories/story-ideas/#response","title":"Response","text":"<p>I'll create some engaging stories about signal processing innovators who challenged the status quo. These graphic novels should be accessible to high school students while highlighting the mathematical aspects of their innovations.</p>"},{"location":"stories/story-ideas/#the-information-revolutionary-claude-shannons-digital-gamble","title":"\"The Information Revolutionary: Claude Shannon's Digital Gamble\"","text":"<p>Claude Shannon, a young engineer at Bell Labs in the 1940s, defies conventional thinking by reimagining how information itself can be understood through mathematics. This story follows Shannon as he develops information theory while working on wartime cryptography projects, showing how his playful nature (riding unicycles through Bell Labs hallways while juggling) and mathematical brilliance led to creating the foundation for our digital world. The story highlights how Shannon's revolutionary 1948 paper that defined \"bits\" of information transformed communication theory and laid the groundwork for computers, smartphones, and the internet we use today.</p>"},{"location":"stories/story-ideas/#wavelets-of-change-ingrid-daubechies-mathematical-revolution","title":"\"Wavelets of Change: Ingrid Daubechies' Mathematical Revolution\"","text":"<p>This story follows Belgian mathematician Ingrid Daubechies as she develops wavelet theory in the 1980s and early 90s, revolutionizing signal processing with her \"mathematical building blocks.\" Initially facing skepticism in a male-dominated field, Daubechies persevered to create compact wavelets that enabled everything from MP3 music files to medical imaging. The narrative follows her from her garden (which serves as a metaphor for her mathematical work) to her becoming the first woman to receive certain prestigious mathematics awards, showing students how abstract mathematics can solve real-world problems and break through gender barriers.</p>"},{"location":"stories/story-ideas/#algorithm-of-the-century-cooley-and-tukeys-fft-revolution","title":"\"Algorithm of the Century: Cooley and Tukey's FFT Revolution\"","text":"<p>In the midst of the Cold War, James Cooley of IBM and John Tukey of Princeton tackled what seemed like an impossible mathematical challenge - making Fourier transforms fast enough for real-time processing. Their 1965 Fast Fourier Transform (FFT) algorithm, motivated by the need to detect Soviet nuclear tests, dramatically reduced calculation time and revolutionized signal processing. The story explores how their algorithm, which rediscovered work from Gauss 160 years earlier, became one of the most important computational tools of the modern era, enabling everything from MRI machines to digital music.</p>"},{"location":"stories/story-ideas/#hyperbolic-visions-maryam-mirzakhanis-mathematical-journey","title":"\"Hyperbolic Visions: Maryam Mirzakhani's Mathematical Journey\"","text":"<p>Growing up in Iran, Maryam Mirzakhani initially wanted to be a writer before discovering her passion for mathematics. This story traces her journey from being the first Iranian woman to win gold medals at the International Mathematical Olympiad to becoming the first woman to receive the Fields Medal, mathematics' highest honor. Though her work focused on hyperbolic surfaces and complex geometry rather than direct signal processing applications, her revolutionary approaches to mathematical problems represent the kind of breakthrough thinking that has advanced all scientific fields, including signal processing.</p>"},{"location":"stories/story-ideas/#echo-chamber-breaker-the-digital-filter-revolution","title":"\"Echo Chamber Breaker: The Digital Filter Revolution\"","text":"<p>This story follows a composite character inspired by several pioneers who developed digital filtering techniques in the 1970s and 80s. Our protagonist challenges the analog signal processing establishment by creating new mathematical models for digital filters that would eventually become standard in everything from noise-canceling headphones to voice assistants. The story shows how mathematical persistence and computational thinking transformed signal processing from analog to digital realms against significant resistance from established experts.</p>"},{"location":"stories/story-ideas/#the-missing-signal-rediscovering-hidden-pioneers","title":"\"The Missing Signal: Rediscovering Hidden Pioneers\"","text":"<p>This multi-timeline story follows a modern-day student who discovers the overlooked contributions of women and minority scientists to signal processing history. As our protagonist researches the field for a school project, they uncover forgotten papers, uncredited innovations, and the social barriers that kept brilliant minds from receiving proper recognition. Through parallel storytelling, we see both the historical innovations and the modern-day quest for historical justice, showing students how mathematics has been a collaborative effort across diverse communities.</p> <p>Each of these stories emphasizes how innovation comes from challenging conventional thinking, using mathematics to solve complex problems, and persisting through obstacles both technical and social. The narratives aim to inspire high school students by showing how mathematics connects to real-world applications and how individual passion can transform entire fields.</p>"},{"location":"stories/fft/","title":"Algorithm of the Century: Cooley and Tukey's FFT Revolution","text":"Show Narrative Prompt Please generate a full story narrative for me.  It should be a detailed, fun and entertaining story about the creation of the FFT and its relevance to the entire field digital signal processing.   First put in some context.  Describe was happening in the world at the time they created the FFT.  Describe the challenges at the time and how they cleverly used efficient algorithms to solve the problem.  Describe the challenges the team faced and how they overcame these challenges.  Then talk about the short term implications of this tool.  Talk about how the efficiency of the FFT allowed new problems to be solved.  Then talk about the long-term impacts to the entire field of digital signal processing.  What types of new problems could be solved with the FFT?  Finally, generalize about the skills needed to be a great engineer and promote change.  Our goal is to have you generate the full text of the story, but to turn the story into a graphic novel with many illustrations that explain how the FFT algorithms was created.   When appropriate, suggest an wide-landscape drawing that could be inserted into the narrative to make the story a graphic novel.  Describe each image in detail and be consistent across all the images in the story for style. When you describe an image, make sure to mention that it should be a colorful, bright wide-landscape drawing suitable for consistent technology-forward optimistic graphic-novel.  Show Image Prompt Cover Image: Please create a new wide-landscape drawing using the style the bright, optimistic style of the graphic novel. This should be the cover page for the the following story:  Algorithm of the Century: Cooley and Tukey's FFT Revolution\" tells the story of how James Cooley and John Tukey revolutionized signal processing by developing the Fast Fourier Transform algorithm in 1965 during the Cold War. Born from the practical need to detect Soviet nuclear tests, their breakthrough reduced calculation time from N\u00b2 to N log N operations, making previously impossible computations feasible on 1960s computers. The algorithm spread rapidly across scientific disciplines after being published, enabling real-time signal analysis for applications ranging from seismology to astronomy. The FFT ultimately transformed entire industries\u2014creating the foundation for digital signal processing, enabling technologies like MRI machines, digital audio, telecommunications, and countless other innovations that shape our modern digital world. Their story illustrates how elegant mathematical solutions to efficiency problems can have far greater impact than raw computing power alone."},{"location":"stories/fft/#chapter-1-the-world-in-flux","title":"CHAPTER 1: THE WORLD IN FLUX","text":"Show Image Prompt Image 1: Please generate A wide-landscape drawing showing a split scene - on one side, the tense Cold War political environment with Soviet and American flags, military technology, and world leaders in serious discussion; on the other side, scientists and mathematicians at work in laboratories with early computers. The image should be rendered in a colorful, bright style with clean lines typical of an optimistic technology-focused graphic novel.  <p>The year was 1965, and the world was in the grip of the Cold War. The United States and the Soviet Union were locked in a tense standoff, each racing to develop new technologies that could provide a crucial advantage. Nuclear testing had become a primary concern. When the Soviets tested nuclear weapons, the Americans needed to know\u2014but how could they detect explosions happening thousands of miles away, behind the Iron Curtain?</p> <p>At Princeton University, mathematician John Tukey was attending a meeting of President Kennedy's Science Advisory Committee. The discussion turned to a critical problem: developing a network of seismic sensors around the Soviet Union to detect nuclear tests. The data from these sensors would need rapid analysis\u2014a problem that required processing enormous amounts of signal data with the limited computing power of the day.</p> <p>Tukey, a brilliant mathematician with a knack for practical solutions, recognized that the traditional approach to analyzing frequency components in signals\u2014the Discrete Fourier Transform (DFT)\u2014was simply too slow. The standard method required N\u00b2 calculations for N data points, making real-time analysis impossible with the computers available.</p> <p>\"There has to be a faster way,\" Tukey thought to himself as he jotted notes on a pad. The problem wasn't just theoretical\u2014it had real-world implications for national security.</p> <p></p> Show Image Prompt IMAGE 2: Please create a new drawing.  It is detailed wide-landscape panel showing John Tukey deep in thought at a meeting table, surrounded by government officials in suits. Above his head, mathematical equations float in thought bubbles, suggesting his realization about a more efficient algorithm. In the background, early computer systems with blinking lights and spinning tape reels. The drawing should maintain the colorful, optimistic technology-forward style of the graphic novel."},{"location":"stories/fft/#chapter-2-the-spark-of-insight","title":"CHAPTER 2: THE SPARK OF INSIGHT","text":"<p>A few days after the meeting, Tukey shared his insight with Richard Garwin, a physicist who worked at IBM. Garwin immediately recognized the importance of Tukey's idea, not just for monitoring Soviet tests but for his own research on 3D crystals of Helium-3. Garwin introduced Tukey to James Cooley, a talented mathematician and programmer at IBM's Watson Research Center.</p> <p>\"I think we can reduce the number of calculations from N\u00b2 to N log N,\" Tukey explained to Cooley. \"It's all about breaking down the problem into smaller pieces.\"</p> <p>Cooley was intrigued. He had been working on computational algorithms for years and understood the limitations of contemporary computers. Together, they began exploring Tukey's idea, which involved recursively breaking down a large DFT into smaller, more manageable ones.</p> <p></p> Show Image Prompt IMAGE 3:  Please create a new wide-landscape drawing. A colorful wide-landscape illustration showing Cooley and Tukey at a blackboard filled with equations, working together with energy and excitement. The blackboard should show the recursive decomposition of the DFT formula, with arrows indicating how it breaks into smaller parts. Around them, stacks of punch cards and printouts symbolize the computational limitations they were working against. The illustration should have a bright, optimistic technology-forward style.  <p>For weeks, Cooley worked on implementing the algorithm, meticulously working through the mathematics and translating it into code that would run on IBM's computers. The challenge wasn't just theoretical\u2014it was practical. How could they reorganize the calculations to minimize redundant operations? How could they leverage the limited memory of 1960s computers efficiently?</p> <p>The breakthrough came when they realized they could use a \"divide and conquer\" approach. By splitting a transform of size N into two transforms of size N/2, then splitting those further, they could dramatically reduce the computational load. The trick was in how the results from these smaller transforms were combined.</p> <p>\"It's beautiful,\" Cooley remarked one evening, looking at the recursive pattern they had discovered. \"We're not just making it faster\u2014we're revealing the mathematical structure that was hidden all along.\"</p>"},{"location":"stories/fft/#chapter-3-the-implementation","title":"CHAPTER 3: THE IMPLEMENTATION","text":"Show Image Prompt IMAGE 4:  Please create a new wide-landscape drawing. A wide-landscape scene depicting the computing environment of the 1960s: large mainframe computers filling entire rooms, with operators in white lab coats monitoring blinking console lights, paper tape output, and punch cards being fed into readers. Cooley is shown implementing the algorithm on these systems. The illustration should maintain the bright, colorful style of a technology-forward graphic novel, presenting vintage technology with an optimistic lens.  <p>Implementing the algorithm presented its own challenges. Computers in 1965 were a far cry from today's powerful machines. IBM's mainframes filled entire rooms, ran hot, and had severely limited memory. Every operation had to be carefully planned to fit within these constraints.</p> <p>Cooley spent hours optimizing the algorithm, finding clever ways to reuse memory and minimize computational steps. The algorithm required a technique called \"bit-reversal\" to reorder data properly\u2014something that added complexity but was essential for the method to work.</p> <p>\"We're not just saving time,\" Cooley explained to his colleagues. \"We're making previously impossible calculations possible.\"</p> <p>For a data set of 8,192 points, the standard DFT would require over 67 million operations. With their Fast Fourier Transform (FFT), the same calculation could be done with just about 106,000 operations\u2014a speedup of more than 600 times. Problems that would have taken weeks could now be solved in minutes.</p> <p></p> Show Image Prompt IMAGE 5:  Please create a new wide-landscape drawing. A colorful wide-landscape illustration showing a split screen with two computers side by side - one running the traditional DFT algorithm (shown struggling with smoke coming from its circuits, dials in the red zone) and the other running the new FFT algorithm (shown processing data effortlessly with happy indicator lights). Above each machine, stylized time counters show the dramatic difference in processing time. The drawing should maintain the bright, optimistic technology-forward style."},{"location":"stories/fft/#chapter-4-publication-and-immediate-impact","title":"CHAPTER 4: PUBLICATION AND IMMEDIATE IMPACT","text":"<p>In April 1965, Cooley and Tukey published \"An Algorithm for the Machine Calculation of Complex Fourier Series\" in the journal Mathematics of Computation. In just six months, they had gone from initial idea to published paper\u2014lightning speed in the academic world of the 1960s.</p> <p>The publication ignited immediate interest. Scientists and engineers quickly recognized the revolutionary nature of what became known as the Cooley-Tukey FFT algorithm. It wasn't patented\u2014IBM determined that since Tukey wasn't an IBM employee, the algorithm would go directly into the public domain.</p> <p>This decision, perhaps unintentional, was crucial to the algorithm's rapid adoption. Scientists everywhere began implementing the FFT in their work, and the results were transformative.</p> <p></p> Show Image Prompt IMAGE 6:  Please create a new wide-landscape drawing. A wide-landscape drawing showing the ripple effect of the FFT publication. The center shows the journal with the paper, and expanding outward are various scientists and engineers in different fields (acoustics, radio astronomy, medical imaging, etc.) implementing and using the algorithm. Each application should be visually distinguished by color and imagery related to its field. The illustration should use bright colors and clean lines in an optimistic technology-forward style.  <p>Seismologists could now process earthquake data in real-time. Radio astronomers could analyze signals from space with unprecedented precision. Sound engineers could visualize audio frequencies instantly. And yes, the original application\u2014detecting Soviet nuclear tests\u2014became feasible with the network of sensors placed around the USSR.</p> <p>What many didn't realize at first was that Cooley and Tukey had rediscovered a method originally developed by Carl Friedrich Gauss around 1805. Gauss had used a similar approach to calculate the trajectories of asteroids, but his work, published posthumously in Latin, had been largely forgotten until it was connected to the FFT years after Cooley and Tukey's publication.</p>"},{"location":"stories/fft/#chapter-5-transforming-digital-signal-processing","title":"CHAPTER 5: TRANSFORMING DIGITAL SIGNAL PROCESSING","text":"Show Image Prompt IMAGE 7:  Please create a new wide-landscape drawing. A colorful wide-landscape illustration showing the evolution of signal processing applications through the decades following the FFT. The timeline should flow from left to right, starting with 1960s applications (radar, sonar), through 1970s-80s (medical imaging, audio equipment), 1990s-2000s (multimedia compression, cell phones), to modern applications (AI voice recognition, virtual reality). Each era should have distinctive technology and fashion elements while maintaining the bright, optimistic style of the graphic novel.  <p>Within a decade, the FFT had become the cornerstone of an entirely new field: digital signal processing (DSP). Before the FFT, most signal processing was done with analog circuits\u2014physical electronic components that had to be designed and built for specific applications. The FFT made it practical to process signals digitally, enabling flexibility and capabilities that were previously unimaginable.</p> <p>The impact spread across industries:</p> <p>In telecommunications, the FFT enabled more efficient modulation techniques, leading to higher data rates over the same bandwidth. Modern cellular networks and Wi-Fi would be impossible without FFT-based modulation schemes like OFDM (Orthogonal Frequency Division Multiplexing).</p> <p>In medicine, the FFT became central to image reconstruction in CT scanners and MRI machines, allowing doctors to see inside the human body non-invasively and with remarkable detail.</p> <p>In audio processing, the FFT revolutionized how we analyze, manipulate, and compress sound. Every MP3 file, digital music production tool, and voice recognition system relies on FFT-based techniques.</p> <p></p> Show Image Prompt IMAGE 8:  Please create a new wide-landscape drawing. A detailed wide-landscape drawing showing multiple panels of FFT applications in everyday life - someone listening to compressed music on headphones, a patient in an MRI machine, people using smartphones, voice assistants responding to commands, and radar systems monitoring weather. The illustration should use bright colors and clean lines typical of an optimistic technology-focused graphic novel.  <p>In astronomy, the FFT enabled radio telescopes to process vast amounts of data, helping scientists detect pulsars, map distant galaxies, and even search for extraterrestrial intelligence.</p> <p>In weather forecasting, the FFT helped process radar data and implement the complex mathematical models that predict tomorrow's weather.</p> <p>Perhaps most surprising was how the FFT transformed fields that weren't even on the radar when Cooley and Tukey developed their algorithm\u2014like digital photography, where FFT-based algorithms are used for image compression and enhancement.</p>"},{"location":"stories/fft/#chapter-6-the-modern-era-and-legacy","title":"CHAPTER 6: THE MODERN ERA AND LEGACY","text":"Show Image Prompt IMAGE 9:  Please create a new wide-landscape drawing. A bright, colorful wide-landscape illustration showing modern applications of FFT in cutting-edge technology. The scene should depict autonomous vehicles using radar and lidar, smartphones with voice assistants, virtual reality headsets, medical imaging devices, and AI systems - all with subtle indications of FFT operations powering them. The illustration should maintain the optimistic technology-forward style with clean lines and vibrant colors.  <p>Today, FFT algorithms run billions of times per second on devices we carry in our pockets. Modern implementations have been optimized to run efficiently on everything from tiny microcontrollers to massive supercomputers and specialized signal processing chips.</p> <p>The FFT has become so ubiquitous that most engineers take it for granted\u2014it's built into software libraries, hardware accelerators, and development tools. But its importance cannot be overstated. Without the FFT, many of the digital technologies we rely on daily would be impractically slow or impossible.</p> <p>In a world increasingly driven by digital data, the ability to efficiently analyze signals\u2014whether they're radio waves, sound, light, or more abstract data\u2014is fundamental to technological progress. The FFT makes this possible.</p>"},{"location":"stories/fft/#chapter-7-lessons-for-future-innovators","title":"CHAPTER 7: LESSONS FOR FUTURE INNOVATORS","text":"Show Image Prompt IMAGE 10:  Please create a new wide-landscape drawing. A wide-landscape drawing showing young, diverse students and engineers studying and working with signal processing technologies. One half should show them learning about FFT in a classroom or lab setting; the other half should show them applying this knowledge to new innovations. The background should include mathematical equations and signal visualizations. The illustration should use the same bright, colorful, optimistic technology-forward style as previous images.  <p>The story of Cooley and Tukey's FFT offers several lessons for aspiring engineers and mathematicians:</p> <p>First, breakthrough innovations often come from looking at old problems in new ways. The mathematical foundation of the Fourier transform had existed for 150 years before Cooley and Tukey found a way to compute it efficiently.</p> <p>Second, some of the most important advances happen at the intersection of theory and practice. The FFT wasn't just an elegant mathematical discovery\u2014it was an algorithm designed to run efficiently on real computers with practical limitations.</p> <p>Third, understanding fundamentals can lead to widely applicable solutions. Cooley and Tukey were solving a specific problem\u2014detecting nuclear tests\u2014but their solution proved valuable across countless fields.</p> <p>Fourth, collaboration across disciplines can spark innovation. Tukey's mathematical insight combined with Cooley's programming expertise created something neither might have achieved alone.</p> <p>Finally, the most revolutionary innovations often don't appear revolutionary at first. The FFT was, at its core, a more efficient way to calculate something mathematicians already knew how to calculate. Yet this efficiency unlocked entirely new possibilities, transforming entire industries and enabling new technologies.</p> <p></p> Show Image Prompt IMAGE 11:  Please create a new wide-landscape drawing. A colorful wide-landscape drawing showing Cooley and Tukey in the foreground, looking at the modern world their algorithm helped create. Behind them should be a montage of technologies that rely on FFT - digital communication, medical imaging, space exploration, music production, and more. The style should remain consistent with previous illustrations - bright, optimistic, and technology-forward.  <p>The FFT revolution teaches us that elegant algorithms and efficient code aren't just academic exercises\u2014they're how we overcome the limitations of hardware and make the impossible possible. In our world of limited computational resources and growing data, algorithmic efficiency remains as important today as it was in 1965.</p> <p>As we face new challenges in computing, artificial intelligence, climate modeling, and other fields, we need the same kind of innovative thinking that Cooley and Tukey demonstrated\u2014the ability to find elegant, efficient solutions to complex problems.</p> <p>Their algorithm reminds us that sometimes, the most powerful tool isn't more computing power, but a smarter algorithm. An algorithm so powerful it can transform our understanding of the world\u2014one frequency at a time.</p>"},{"location":"stories/fft/#the-end","title":"THE END","text":""},{"location":"stories/fft/#references","title":"References","text":"References Prompt     Please generate ten engaging references for this story behind     the creation of the FFT algorithm.     The references should be fun and engaging articles from reputable sources that an advanced high-school senior can     understand.  Return the references in the following format:      1. [Link Label](Link URL) - date of publication - publication name - notes on why this article might be interesting.      Make sure that the links are all real working links.  Test that the links are all currently working.  <p>Here are ten engaging references about the Fast Fourier Transform that high school students would enjoy:</p> <ul> <li> <p>The FFT is Fifty - 2015 - California Consultants - A readable celebration of the FFT's 50th anniversary that explains its significance in non-technical terms and its revolutionary impact on technology.</p> </li> <li> <p>How the Cooley-Tukey FFT Algorithm Works - 2019 - DSP Related - An excellent multi-part tutorial that breaks down the algorithm step-by-step with clear explanations suitable for high school students with basic math knowledge.</p> </li> <li> <p>A Faster Fast Fourier Transform - 2012 - IEEE Spectrum - Covers modern developments in FFT algorithms and explains why the original breakthrough remains so important in digital signal processing.</p> </li> <li> <p>Fast Fourier Transform on Wikipedia - Updated 2025 - Wikipedia - A comprehensive reference with history, applications, and technical details that ambitious students can explore at their own pace.</p> </li> <li> <p>The Scientist and Engineer's Guide to Digital Signal Processing - Free online book - A completely free online textbook with an excellent chapter on the FFT that includes clear diagrams and practical examples.</p> </li> <li> <p>Understanding the Cooley-Tukey FFT - Educational resource - Features step-by-step explanations with mathematical derivations that are accessible to students with high school calculus knowledge.</p> </li> <li> <p>50 Years of FFT Algorithms and Applications - 2019 - Researchgate - A historical overview that traces the development and applications of FFT, with the full article available for download.</p> </li> <li> <p>Fast Fourier Transforms - Interactive Mathematics - Interactive Mathematics - Features interactive examples that let students see how the FFT works in practice, with visual demonstrations.</p> </li> <li> <p>FFT Demo on GitHub - GitHub - Provides actual working code examples of the FFT algorithm that programming-oriented students can experiment with directly.</p> </li> <li> <p>The Cooley-Tukey FFT and Modern Computing - MathWorks - Shows how the FFT is used in modern software like MATLAB, with examples of practical applications in signal processing.</p> </li> </ul> <p>These resources cover different aspects of the FFT, from its historical development to practical applications, and are presented at various levels of technical detail to accommodate different student interests and abilities.</p>"},{"location":"stories/hedy-lamarr/","title":"Frequency Hopping: The Untold Story of Hedy Lamarr, Engineer and Hollywood Star","text":"Show Cover Image Prompt    Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.      The illustration is a the cover artwork for this graphic novel: Frequency Hopping: The Untold Story of Hedy Lamarr, Engineer and Hollywood Star     Image generated by OpenAI DALL-E 3 in May 2025."},{"location":"stories/hedy-lamarr/#introduction","title":"Introduction","text":"Show Narrative Prompt I would like to create new graphic novel based around the story of Hedy Lamarr and her work on signal processing.  The story should have about a dozen panels of graphic-novel type drawings.  Please use an art deco style drawings that were popular around 1942.  The drawing should all be a wide-landscape format.   Your job is to write the overall narrative of the story and then describe in details the images in each story.  You are welcome to use the heady-lamarr-story-v1.md to get started. The story should show Heady Lamarr in a positive superhero-like role and her ability to overcome adversity despite being a woman.  Finally, generalize about the skills needed to be a great engineer and promote change. Our goal is to have you generate the full text of the story, but to turn the story into a graphic novel with many illustrations that explain how the Hedy invited the ideas of frequency shifting.   When appropriate, suggest an wide-landscape drawing that could be inserted into the narrative to make the story a graphic novel. Describe each image in detail and be consistent across all the images in the story for style.   When you describe an image, make sure to mention that it should be a colorful, bright wide-landscape drawing with an art deco design style.  Prompt given to Anthropic Claude 3.7 in Mat 2025. [Claude Session](https://claude.ai/share/e6c6e432-387c-404b-b5d3-3d4b231ef61f)  <p>In the glittering world of 1940s Hollywood, one woman led a double life. By day, she was Hedy Lamarr, the glamorous movie star whose beauty captivated audiences worldwide. By night, she was an ingenious inventor whose brilliant mind would change the course of technology forever.</p> <p></p> Show Image Prompt    Please generate a new wide-landscape art deco illustration as it might appear in a graphic novel.     Image 1: A wide-landscape, colorful art deco illustration showing Hedy Lamarr in a dramatic split-screen composition. On the left side, she appears as a glamorous 1940s Hollywood star under bright studio lights, wearing an elegant gown. On the right side, she's hunched over a workbench with engineering diagrams, wearing comfortable clothes, her face illuminated by a single lamp. The background should feature bold geometric art deco patterns in gold, deep blue, and burgundy. The composition should emphasize the duality of her existence through strong contrasting colors while maintaining art deco's characteristic bold lines and symmetry."},{"location":"stories/hedy-lamarr/#the-escape","title":"The Escape","text":"<p>Born Hedwig Eva Maria Kiesler in Vienna, Austria, Hedy's journey began long before Hollywood discovered her. In 1933, she starred in the controversial Czech film \"Ecstasy,\" gaining international attention. Her beauty caught the eye of Friedrich Mandl, a wealthy Austrian munitions manufacturer with ties to the fascist regimes rising across Europe.</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco illustration as it might appear in a graphic novel.  Image  2: A wide-landscape, colorful art deco illustration depicting Hedy's escape from her controlling husband. The image should show Hedy in disguise, sneaking away from a mansion at night. The mansion should have strong architectural art deco elements with sharp angles and geometric patterns. Use dramatic lighting with long shadows and a palette of deep purples, midnight blues, and golden highlights. In the distance, show the lights of Paris beckoning. The composition should convey tension and determination, with Hedy's figure small but resolute against the imposing background.  <p>Their marriage was a prison. Mandl was possessive and controlling, parading Hedy at business meetings with military officials and Nazi industrialists. But Hedy was no passive observer. With a mind sharp as a razor, she absorbed complex technical discussions about weapons systems and military communications. Little did anyone suspect that the beautiful woman they dismissed as mere decoration was memorizing their military secrets.</p> <p>In 1937, Hedy orchestrated a daring escape. Disguising herself as a maid, she fled to Paris, then London, and finally to America, where a contract with MGM Studios awaited.</p>"},{"location":"stories/hedy-lamarr/#the-hollywood-star","title":"The Hollywood Star","text":"<p>By 1940, Hedy Lamarr was one of Hollywood's brightest stars. Her exotic beauty and enigmatic presence captivated audiences in films like \"Algiers,\" \"Boom Town,\" and \"Comrade X.\" The press dubbed her \"the most beautiful woman in the world.\"</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  3: A wide-landscape, colorful art deco illustration showing Hedy on a movie set. The scene should be vibrant with studio lights creating dramatic shadows. Hedy should be in costume for a film, standing confidently at the center while directors, cameramen and other actors orbit around her. The composition should use typical art deco styling with strong geometric patterns, stepped forms, and sunburst motifs in the background. Use a color palette of rich golds, deep greens, and bright whites to capture the glamour of Golden Age Hollywood. The perspective should be slightly elevated to show the bustling activity of the whole set.  <p>Yet behind the glamour, Hedy's brilliant mind remained restless. The world was at war, and she could not stand idly by while her adopted country fought against the very regimes she had fled. Her technical knowledge, gleaned from dinner conversations with Mandl and his associates, combined with her natural gift for invention, was about to change the course of history.</p>"},{"location":"stories/hedy-lamarr/#the-problem-of-guided-torpedoes","title":"The Problem of Guided Torpedoes","text":"<p>In 1940, as the Battle of the Atlantic raged, Allied ships were being sunk at an alarming rate by German U-boats. Radio-controlled torpedoes offered a potential advantage, but there was a critical flaw: the radio signals could be easily jammed by the enemy.</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  4: A wide-landscape, colorful art deco illustration depicting the problem of radio jamming. The image should be split into two scenes - on the left, show a diagram of how radio-controlled torpedoes were supposed to work, with clean signal lines connecting a ship to a torpedo. On the right, show the reality with signal interference represented by jagged red lines disrupting the connection. Use a nautical color palette of blues and greens for the ocean, with bold red for the jamming signals. The entire composition should be framed with art deco borders featuring wave patterns and geometric naval motifs. The style should be somewhat technical but still artistic, combining diagrams with the decorative art deco aesthetic.  <p>Hedy understood the problem immediately. If the torpedo and its control system remained on a single frequency, that frequency could be found and jammed. But what if the frequency changed constantly, and in a pattern known only to the sender and receiver?</p> <p>Late at night, after shooting wrapped on her latest film, Hedy would return home and work on her idea. The concept was revolutionary: a frequency-hopping system that would make signals nearly impossible to jam or intercept.</p>"},{"location":"stories/hedy-lamarr/#the-partnership-with-george-antheil","title":"The Partnership with George Antheil","text":"<p>At a dinner party in Hollywood, Hedy met George Antheil, an avant-garde composer known for his Ballet M\u00e9canique, a piece written for sixteen player pianos operating in sync. Their conversation quickly turned to the war effort, and Hedy shared her frequency-hopping concept.</p> <p></p> Show Image Prompt  Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  5: A wide-landscape, colorful art deco illustration showing Hedy and George Antheil collaborating. They should be depicted at an elegant piano in a stylish 1940s living room, with engineering diagrams and musical scores spread between them. The piano should be a central element, with its mechanical parts partially visible, suggesting the connection to their invention. The room should have characteristic art deco features - geometric patterns in the furniture, stepped forms in the architecture, and bold contrasting colors. Use a palette of warm ambers, deep blues, and metallic gold accents. Antheil should be gesturing excitedly while Hedy points to something in the diagrams, creating a sense of intellectual partnership and shared enthusiasm.  <p>Antheil was immediately intrigued. His experience synchronizing player pianos was the perfect complement to Hedy's frequency-hopping concept. Together, they developed a system using paper rolls similar to those in player pianos to synchronize the frequency changes between the transmitter and receiver. This meant that even if enemies detected the signal, they would only hear a brief blip before it jumped to another frequency.</p>"},{"location":"stories/hedy-lamarr/#the-mechanics-of-frequency-hopping","title":"The Mechanics of Frequency Hopping","text":"<p>Their invention was elegant in its simplicity. The system would use 88 frequencies (the same as the number of keys on a piano) and both the transmitter and receiver would have identical paper rolls dictating the precise timing of frequency changes.</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  6: A wide-landscape, colorful art deco illustration explaining the frequency-hopping concept. This should be a visual diagram showing how the system works: on the left side, show a transmitter with a paper roll controlling frequency changes (similar to a player piano roll), with colorful waves emanating at different frequencies. In the center, show these waves traveling through space, constantly changing colors to represent different frequencies. On the right, show a receiver with an identical paper roll synchronized to receive each frequency at the exact right moment. The entire composition should be styled with bold art deco geometric patterns, using a vibrant color palette where each frequency is represented by a different color. The diagram should be educational but still artistic and visually striking, with the characteristic symmetry and bold lines of art deco design.  <p>The system was ingenious. Even if the enemy managed to jam one frequency, the signal would have already moved to another by the time they adjusted their jamming equipment. It was not only a secure communication system but also an early form of what we now call spread spectrum technology.</p>"},{"location":"stories/hedy-lamarr/#the-patent-and-rejection","title":"The Patent and Rejection","text":"<p>On August 11, 1942, U.S. Patent No. 2,292,387 was granted to Hedy Kiesler Markey (her married name at the time) and George Antheil for their \"Secret Communication System.\" It was a remarkable achievement for anyone, let alone a Hollywood actress and a composer.</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  7: A wide-landscape, colorful art deco illustration showing Hedy and George proudly holding their patent document in front of the U.S. Patent Office. The building should have grand art deco architecture with strong vertical lines and geometric ornamentation. Hedy should be dressed in a smart 1940s suit rather than glamorous attire, emphasizing her role as an inventor. The patent document should be visible with technical diagrams. Use a patriotic color palette of deep blues, rich reds, and metallic golds, with dramatic lighting that creates long shadows typical of art deco illustration style. The composition should convey a sense of accomplishment and historical significance.  <p>However, when they presented their invention to the U.S. Navy, they were met with dismissal. The military establishment could not take seriously the idea that a beautiful actress and an avant-garde composer could contribute anything of value to the war effort. Instead, they suggested that Hedy use her celebrity to sell war bonds.</p>"},{"location":"stories/hedy-lamarr/#the-war-effort","title":"The War Effort","text":"<p>Though disappointed by the rejection, Hedy was determined to help defeat fascism. She threw herself into selling war bonds, using her star power to raise millions of dollars for the Allied cause.</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  8: A wide-landscape, colorful art deco illustration showing Hedy at a war bond rally. She should be depicted on a stage with patriotic art deco-style banners and decorations, addressing a large crowd. The scene should be dynamic, with Hedy as the radiant focal point in a glamorous outfit, gesturing powerfully as she speaks. The crowd should show diverse Americans responding enthusiastically. Use a bold color scheme of reds, whites, and blues with gold accents, and incorporate patriotic symbols stylized in art deco fashion. The composition should capture both Hedy's star power and her passionate commitment to the war effort, with dramatic lighting creating a heroic atmosphere.  <p>\"I'm not ashamed of having sold kisses for $25,000 apiece at war bond rallies,\" she once said. \"It helped destroy Hitler.\" All the while, she never stopped believing in her invention, even as the world continued to see her only for her beauty.</p>"},{"location":"stories/hedy-lamarr/#decades-ahead-of-her-time","title":"Decades Ahead of Her Time","text":"<p>For years, Hedy's invention gathered dust, forgotten by the military establishment. It wasn't until the Cuban Missile Crisis in 1962 that the U.S. military finally began using frequency-hopping technology on naval ships.</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  9: A wide-landscape, colorful art deco illustration depicting the technological evolution of Hedy's invention. This should be a montage-style image showing the progression of frequency-hopping technology from the 1940s to modern day. On the left, show the original concept with mechanical components in a 1940s aesthetic. In the center, show military applications from the 1960s. On the right, show modern devices using WiFi, Bluetooth, and GPS. Use a progressive color scheme that transitions from the sepia tones of the past to vibrant modern colors, while maintaining art deco styling throughout with geometric patterns, symmetry, and decorative elements. The composition should communicate the forward-thinking nature of Hedy's invention and its lasting impact.  <p>By then, Hedy and George's patent had expired, and they never received a penny for their groundbreaking work. The technology they pioneered would eventually become the foundation for secure military communications, GPS, Bluetooth, and Wi-Fi\u2014technologies that billions of people use every day.</p>"},{"location":"stories/hedy-lamarr/#recognition-at-last","title":"Recognition at Last","text":"<p>It wasn't until 1997, when Hedy was 82 years old, that she finally received recognition for her technological contributions. The Electronic Frontier Foundation presented her with their Pioneer Award, acknowledging her role in developing spread spectrum technology.</p> <p></p> Show Image Prompt  Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  10: A wide-landscape, colorful art deco illustration showing an elderly Hedy receiving recognition for her invention. The scene should depict Hedy accepting an award on stage, with images of modern technology (cell phones, wireless devices) projected behind her. Despite her age, she should be portrayed with dignity and elegance, her expression showing vindication and quiet pride. The audience should be filled with modern technologists and engineers giving her a standing ovation. Use a sophisticated art deco color palette of deep purples, blues, and gold accents, with dramatic lighting highlighting Hedy as the central figure. The composition should convey the theme of long-delayed justice and recognition, with art deco styling in the stage design and decorative elements.  <p>When a reporter asked how a beautiful movie star could also be an inventor, Hedy famously replied, \"Films have a certain place in a certain time period. Technology is forever.\" And later: \"Any girl can be glamorous. All you have to do is stand still and look stupid. But to be innovative\u2014that's something else entirely.\"</p>"},{"location":"stories/hedy-lamarr/#legacy-the-engineers-mind","title":"Legacy: The Engineer's Mind","text":"<p>Hedy Lamarr's story reveals the qualities that make a great engineer: curiosity, creativity, persistence, and the courage to challenge conventional thinking. She saw a problem that others overlooked and imagined a solution that was decades ahead of its time.</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  11: A wide-landscape, colorful art deco illustration depicting \"The Engineer's Mind.\" This should be a symbolic representation of the engineering process, with Hedy's silhouette as a central element containing gears, light bulbs, mathematical equations, and interconnected ideas. Around her should be representations of the qualities of great engineers - curiosity (magnifying glass), creativity (exploding ideas), persistence (climbing steps), and courage (breaking through barriers). Use bold art deco styling with strong geometric patterns and a vibrant color palette of blues, golds, and reds. The composition should be inspirational and educational, showing how these qualities combine to create innovation.  <p>She did this without formal training, institutional support, or recognition\u2014and in spite of a society that valued her only for her appearance. Her story reminds us that innovation can come from unexpected places and that brilliance knows no boundaries of gender, profession, or background.</p>"},{"location":"stories/hedy-lamarr/#conclusion-the-superhero-we-need","title":"Conclusion: The Superhero We Need","text":"<p>Today, as we use our smartphones and wireless devices, we are all beneficiaries of Hedy Lamarr's brilliance. Her legacy lives on not just in the technologies she helped create, but in every girl and woman who dares to pursue science, technology, engineering, and mathematics despite being told that these are not fields for them.</p> <p></p> Show Image Prompt Please generate a new wide-landscape art deco inspired illustration as it might appear in a graphic novel.  Image  12: A wide-landscape, colorful art deco illustration showing Hedy's enduring legacy. The image should be split: on one side, show Hedy in the 1940s working on her invention; on the other side, show diverse modern young women working with technology, clearly inspired by her example. Between them should be visual representations of wireless signals connecting past to present. The entire composition should be framed with art deco styling using bold geometric patterns and vibrant colors. Use a triumphant color palette of bright blues, purples, and gold that suggests optimism and progress. The image should convey that Hedy's true superpower was her mind, and that her legacy continues through all who follow in her path.  <p>Hedy Lamarr was more than a beautiful face on the silver screen. She was an engineer, an inventor, and a pioneer who helped shape our modern world. In many ways, she was the superhero we needed\u2014not because she could fly or had superhuman strength, but because she had the courage to use her mind in a world that only wanted her to stand still and look beautiful.</p> <p>Her story teaches us that change doesn't always come from those with the most credentials or the loudest voices. Sometimes, it comes from those who see a problem differently, who dare to imagine solutions that others cannot see, and who persist even when the world tells them they don't belong.</p> <p>In the art deco era of the 1940s, Hedy Lamarr brought both glamour and genius to a world at war. Today, her legacy reminds us that the most powerful force for change is not beauty, fame, or even technology itself\u2014it's the brilliant, unbounded human mind.</p>"},{"location":"stories/hedy-lamarr/#references","title":"References","text":"References Prompt    Please generate ten engaging references for the story Frequency Hopping: The Untold Story of Hedy Lamarr, Engineer and Hollywood Star the creation of the  frequency hopping. The references should be fun and engaging articles from reputable sources that an advanced high-school senior can understand. Return the references in the following format:      1. [Link Label](Link URL) - date of publication - publication name - notes on why this article might be interesting.      Make sure that the links are all real working links. Test that the links are all currently working.  <ol> <li>Bombshell: The Hedy Lamarr Story - January 2018 - PBS American Masters - This award-winning documentary explores Lamarr's dual life as a glamorous Hollywood star and brilliant inventor. Includes interviews with her children and rare audio recordings of Lamarr herself discussing her inventions.</li> <li>How Hollywood Star Hedy Lamarr Invented the Tech Behind Wi-Fi - February 2024 - HISTORY - A fascinating article explaining how Lamarr's \"frequency hopping\" concept evolved from a wartime innovation to becoming fundamental technology for modern wireless communications, with engaging anecdotes about her collaboration with composer George Antheil.</li> <li>Hedy Lamarr: Mother of Wi-Fi - March 2023 - Thales Group - This article explores how Lamarr's innovative mind tackled both scientific challenges and Hollywood stereotypes, with helpful explanations of how her technology works in today's devices.</li> <li>The Hollywood Bombshell Who Invented an Indispensable War Technology - April 2016 - Smithsonian Magazine - A concise but insightful profile that captures how Lamarr's invention was initially dismissed by the Navy who told \"the actress to stick to raising money for the war effort.\"</li> <li>Random Paths to Frequency Hopping - February 2020 - American Scientist - This scholarly yet approachable article places Lamarr's invention in historical context, exploring the parallel development of similar technologies and offering a more nuanced view of technological innovation.</li> <li>Hedy Lamarr and Frequency Hopping - October 2019 - Cade Museum Podcast - A fascinating interview with Anthony Loder, Hedy Lamarr's son, who shares personal stories about his mother's inventive mind and her struggles for recognition.</li> <li>Hedy Lamarr: From Hollywood Glamour to Frequency-Hopping - September 2021 - SPIE (International Society for Optics and Photonics) - This article includes interesting quotes from experts discussing the technical significance of Lamarr's invention and why it was initially dismissed.</li> <li>Hedy Lamarr: Golden Age Film Star---and Important Inventor - 2023 - Smithsonian Institution - A concise biography that highlights how Lamarr's innovation contributed to modern wireless technologies and includes beautiful archival photographs.</li> <li>Biography: Hedy Lamarr - 2022 - National Women's History Museum - A comprehensive biography that details Lamarr's early life, marriages, Hollywood career, and inventions, with special attention to her relationship with Howard Hughes who encouraged her scientific pursuits.</li> <li>Hedy Lamarr - 2022 - National Inventors Hall of Fame - This profile from the organization that inducted Lamarr in 2014 explains the technical aspects of her frequency hopping invention in accessible language and describes its applications during the Cuban Missile Crisis.</li> </ol>"},{"location":"stories/hedy-lamarr/hedy-lamarr-story-v1/","title":"Hedy lamarr story v1","text":"<p>ChatGPT Said: A Story of Hedy Lamarr, Beauty, Brains, and Bravery In the golden age of Hollywood, there was a star whose beauty captivated millions. Hedy Lamarr, often called \"the most beautiful woman in the world,\" graced the silver screen with her presence, playing glamorous roles that showcased her elegance and charm. But behind those dazzling eyes and enchanting smile lay a mind that was anything but ordinary.</p> <p>Hedy's story is one of genius masked by stardom, a tale of how she shattered stereotypes and left a legacy far beyond the confines of a movie set.</p> <p>The War Effort The year was 1940, and the world was embroiled in the chaos of World War II. Hedy, who had fled her homeland of Austria to escape the rise of Nazism, was deeply troubled by the devastation she saw. By day, she was the epitome of Hollywood glamour, adored by fans and photographers alike. By night, she worked tirelessly on ideas that could change the course of history.</p> <p>Hedy was no stranger to technology. Her first husband, Friedrich Mandl, was an Austrian arms manufacturer, and though their marriage was unhappy, Hedy had absorbed a wealth of knowledge about weaponry and communication systems during their time together. This knowledge, combined with her natural curiosity and intelligence, set her apart from her Hollywood peers.</p> <p>The Problem One evening, as she listened to a radio broadcast about Allied ships being sunk by German torpedoes, an idea sparked in Hedy's mind. The enemy was jamming the radio signals used to guide torpedoes, rendering them ineffective. Hedy thought, What if there were a way to prevent the enemy from interfering with the signal?</p> <p>This was no idle question. Hedy, determined to contribute to the war effort, began sketching out solutions.</p> <p>The Partner Enter George Antheil, a quirky avant-garde composer who had dabbled in mechanics. Hedy met George at a dinner party, and the two quickly bonded over their shared love of problem-solving. Hedy explained her idea: a \"frequency-hopping\" system that could prevent radio signals from being intercepted or jammed.</p> <p>Together, they worked late into the night, turning Hedy's vision into a reality. George brought his knowledge of player pianos to the table, proposing that the frequency changes could be synchronized using a punched paper roll, like the ones used in automated pianos. The result was a revolutionary concept: a secure communication system that jumped between frequencies, making it nearly impossible for enemies to jam or intercept.</p> <p>The Patent In 1942, Hedy and George were awarded a U.S. patent for their invention, officially titled a \"Secret Communication System.\" However, when they presented their idea to the U.S. Navy, they were dismissed. The Navy couldn't fathom that an actress and a composer could contribute to military technology. Instead, they suggested Hedy use her fame to sell war bonds.</p> <p>Undeterred, Hedy threw herself into the war effort in other ways, raising millions of dollars in bonds. But she never forgot her invention, even as the world dismissed her intelligence.</p> <p>The Legacy Decades later, the world caught up with Hedy Lamarr. The principles of her frequency-hopping system became the foundation for modern wireless communication technologies, including Wi-Fi, Bluetooth, and GPS. Today, her contributions are celebrated not only in the world of technology but also as a reminder that brilliance knows no boundaries---be it gender, profession, or appearance.</p> <p>Hedy Lamarr proved that being a Hollywood icon and a technological pioneer were not mutually exclusive. Her story is one of courage, intelligence, and determination, an enduring reminder that the world should never underestimate a brilliant mind, no matter where it shines.</p> <p>Epilogue In 1997, long after Hedy had retired from the spotlight, she received the prestigious Electronic Frontier Foundation Pioneer Award for her contributions to technology. When asked about her dual legacy as a star and an inventor, she famously quipped, \"Any girl can be glamorous. All you have to do is stand still and look stupid. But to be innovative---that's something else entirely.\"</p> <p>And with that, Hedy Lamarr secured her place in history---not just as a beauty, but as a trailblazer who changed the world.</p>"},{"location":"stories/shannon/","title":"The Information Revolutionary: Claude Shannon's Digital Gamble","text":"Narrative Prompt Please generate a detailed narrative for a new graphic novel about Claude Shannon and his contributions to Signal Processing.  The target audience is advanced seniors in high school or freshman in college.  The story begins when Claude Shannon was a young engineer at Bell Labs in the 1940s. Describe how Bell Labs was the premier think-tank for research at the time. Describe how many innovations can from within Bell Labs that impacted not just telephones, but how we communicate with each other.  Describe how Shannon came to Bell Labs and what his initial role was.  Then describe how he defied conventional thinking by reimagining how information itself can be understood through mathematics.  This story follows Shannon as he develops information theory while working on wartime cryptography projects, showing how his playful nature (riding unicycles through Bell Labs hallways while juggling) and mathematical brilliance led to creating the foundation for our digital world.  The story highlights how Shannon's revolutionary 1948 paper that defined \"bits\" of information transformed communication theory and laid the groundwork for computers, smartphones, and the internet we use today.  Finally, generalize about the skills needed to be a great engineer and promote change. Our goal is to have you generate the full text of the story, but to turn the story into a graphic novel with many illustrations that explain how the Hedy invited the ideas of frequency shifting.  When appropriate, suggest an wide-landscape drawing that could be inserted into the narrative to make the story a graphic novel. Describe each image in detail and be consistent across all the images in the story for style.  When you describe an image, make sure to mention that it should be a colorful, bright wide-landscape illustration using a tech-forward optimistic style."},{"location":"stories/shannon/#prologue-a-world-on-the-brink-of-digital-discovery","title":"Prologue \u2013 A World on the Brink of Digital Discovery","text":"<p>In the early-1940s, long before \u201cWi-Fi,\u201d \u201csmartphones,\u201d or even \u201ccomputers\u201d as we know them, the beating heart of American innovation was Bell Telephone Laboratories in Murray Hill, New Jersey. Inside its limestone walls, Nobel laureates rubbed shoulders with tinkering technicians; ideas leapt from quantum theory to vacuum-tube amplifiers before lunch and from satellite orbits to transistorized hearing aids by dinner. The lab\u2019s mantra was simple: solve problems nobody else can even phrase.</p> <p></p> Image Prompt Image 1: Please generate a new wide-landscape illustration. A colorful, bright wide-landscape illustration in a tech-forward optimistic style showing the grand fa\u00e7ade of Bell Labs in the 1940s. Scientists in white lab coats and navy suits stream through art-deco doors while giant, translucent circuit diagrams float above the building, hinting at ideas yet to be born."},{"location":"stories/shannon/#chapter-1-enter-claude-shannon","title":"Chapter 1 \u2013 Enter Claude Shannon","text":"<p>Claude Elwood Shannon arrived at Bell Labs in 1941, fresh from completing his master\u2019s thesis at MIT that proved telephone switchboards and Boolean algebra were two sides of the same coin. Bell Labs hired the shy, 25-year-old engineer as a mathematical consultant in the \u201cRelay and Switching\u201d group\u2014hardly glamorous, but the perfect sandbox for a mind that relished puzzles.</p> <p>Shannon\u2019s first tasks were to optimize electromechanical relay circuits that routed millions of calls across the American continent. Yet, as he traced wires and contacts, he asked a question few engineers dared: \u201cWhat if signals aren\u2019t merely voltages on copper, but abstract units that obey mathematical laws?\u201d</p> <p></p> Image Prompt Image 2: Please generate a new wide-landscape illustration. Shannon, slender and boyish, studies a maze-like relay panel. Above his head, ghostly Boolean algebra symbols morph into telephone relays, blending math and machinery in a bright, wide-landscape illustration."},{"location":"stories/shannon/#chapter-2-bell-labs-a-playground-of-possibility","title":"Chapter 2 \u2013 Bell Labs: A Playground of Possibility","text":"<p>Bell Labs housed radar pioneers, wartime code-breakers, and the soon-to-be inventors of the transistor. Colleagues shared cafeterias and chalkboards, turning lunch breaks into spontaneous seminars. In this crucible, Shannon\u2019s playful genius flourished. He famously rode a unicycle down the corridor while juggling three beanbags, a grin framing his analytical eyes\u2014because for Shannon, play and discovery were the same verb.</p> <p></p> Image Prompt Image 3: Please generate a new wide-landscape illustration. A wide-landscape corridor scene: Claud Shannon pedals a unicycle beneath fluorescent lights, juggling colorful beanbags that trace rainbow arcs. Around him, astonished engineers clutch slide rules, while equations float like neon graffiti along the hallway walls."},{"location":"stories/shannon/#chapter-3-war-cryptography-and-the-birth-of-information-theory","title":"Chapter 3 \u2013 War, Cryptography, and the Birth of Information Theory","text":"<p>World War II thrust Bell Labs into cryptographic research. Shannon joined a hush-hush team crafting secure voice scramblers and analyzing enemy ciphers. Exposure to secret-keeping sharpened his conviction that communication is fundamentally the battle between signal and noise.</p> <p>Working nights, he sketched probability curves on endless yellow pads, formulating a theory where messages, no matter their medium\u2014radio waves, telegraph clicks, or drumbeats\u2014could be quantified by choices between alternatives. He dubbed the basic unit of choice a \u201cbinary digit,\u201d quickly shortened to bit.</p> <p>\u201cInformation,\u201d Shannon wrote to a colleague, \u201cis the reduction of uncertainty.\u201d</p> <p></p> Image Prompt Image 4: Please generate a new wide-landscape illustration. A tech-forward wide-landscape illustration split diagonally: left side, a dim war-room with code tapes and rotary scramblers; right side, glowing probability clouds and 0/1 bits streaming through the air, symbolizing Shannon\u2019s mental leap from hardware to abstraction."},{"location":"stories/shannon/#chapter-4-cross-currents-with-hedy-lamarrs-frequency-hopping","title":"Chapter 4 \u2013 Cross-Currents with Hedy Lamarr\u2019s Frequency Hopping","text":"<p>Around the same time, Hollywood star Hedy Lamarr and composer George Antheil patented frequency-hopping spread spectrum to thwart torpedo jamming\u2014an idea also rooted in staying ahead of noise. While Shannon and Lamarr never collaborated directly, Bell Labs engineers eagerly studied her patent. Shannon absorbed its central insight: continuous shifts in carrier frequency increase channel reliability. This resonated with his growing mathematics of channel capacity.</p> <p></p> Image Prompt Image 5: Please generate a new wide-landscape illustration. A vibrant, wide-landscape split scene: on the left, Hedy Lamarr at a piano covered in torpedo diagrams; on the right, Shannon at a chalkboard of entropy equations. In the middle, colorful radio waves hop across the spectrum, knitting the two innovators together under an optimistic glow."},{"location":"stories/shannon/#chapter-5-1948-a-mathematical-theory-of-communication","title":"Chapter 5 \u2013 1948: A Mathematical Theory of Communication","text":"<p>In July 1948 the Bell System Technical Journal published Shannon\u2019s masterpiece in two parts. Key ideas:</p> <ul> <li>Entropy (H) \u2013 a logarithmic measure of message uncertainty.</li> <li>Channel Capacity (C) \u2013 the maximum reliable data rate, dictated by bandwidth and noise.</li> <li>Redundancy &amp; Coding \u2013 adding structure allows error correction without increasing bandwidth.</li> </ul> <p>Engineers worldwide realized they could calculate, before building, the exact limits of any communication system\u2014from coaxial cables to satellite links.</p> <p></p> Image Prompt Image 6: Please generate a new wide-landscape illustration.  A bright, wide-landscape illustration of Shannon seated at a drafting table. Sheets of his 1948 paper swirl upward, morphing into today\u2019s digital icons\u2014smartphones, fiber-optic strands, satellite dishes\u2014each connected by sparkling 0s and 1s."},{"location":"stories/shannon/#chapter-6-from-bell-labs-to-the-digital-universe","title":"Chapter 6 \u2013 From Bell Labs to the Digital Universe","text":"<p>Shannon\u2019s work seeded inventions that followed: pulse-code modulation, modems, error-correcting codes, compact disks, Wi-Fi, 5G, and every compression algorithm that squeezes video into your pocket. By proving that bits\u2014not volts\u2014carry meaning, he turned communication engineering into information engineering.</p> <p></p> Image Prompt Image 7: Please generate a new wide-landscape illustration. A timeline-style wide-landscape scene: starting with a 1940s telephone pole at left, progressing through mainframes, personal computers, smartphones, and ending with a holographic internet globe at right. A single glowing thread of bits links each era."},{"location":"stories/shannon/#chapter-7-the-shannon-hartley-theorem-measuring-the-invisible","title":"Chapter 7 \u2013 The Shannon-Hartley Theorem: Measuring the Invisible","text":"<p>Shannon's most profound contribution to signal processing came through his mathematical formula that precisely defined the maximum rate at which information can be transmitted over a communications channel. This theorem, developed with Ralph Hartley, established the fundamental limits of communication, regardless of the technology used.</p> <p>In smoke-filled conference rooms at Bell Labs, Shannon would sketch probability distributions and logarithmic functions, puzzling his colleagues with his assertion that noise wasn't just an enemy to be fought\u2014it was a mathematical certainty to be quantified. \"Every channel has a capacity,\" he would explain, \"and once you know it, you can design right up to that limit.\"</p> <p></p> Image Prompt Image 8: Please generate a new wide-landscape illustration. A colorful, bright wide-landscape illustration using a tech-forward optimistic style showing Shannon at a large chalkboard filled with complex equations. The focal point is the Shannon-Hartley theorem (C = B log\u2082(1 + S/N)) glowing in vibrant blue. Around Shannon, colleagues lean forward with expressions of dawning comprehension. From the equations, translucent streams of data flow toward communication devices of increasing sophistication, from telegraphs to fiber optic cables, demonstrating how this single formula defines all communication systems. The lighting creates dramatic shadows that give depth to the scene while maintaining the optimistic, forward-looking atmosphere."},{"location":"stories/shannon/#chapter-8-the-information-gambler-shannons-theory-of-entropy","title":"Chapter 8 \u2013 The Information Gambler: Shannon's Theory of Entropy","text":"<p>Shannon borrowed the concept of entropy from thermodynamics and reimagined it for information theory. His genius was recognizing that information, like heat in physics, follows statistical laws that can be precisely calculated.</p> <p>\"Information is surprise,\" Shannon would explain to puzzled visitors in his office filled with mechanical puzzles and chess problems. \"The less likely a message is, the more information it contains.\" This insight revolutionized how engineers thought about coding and compression, turning communication into a sophisticated game of probability.</p> <p></p> Image Prompt Image 9: Please generate a new wide-landscape illustration. A colorful, bright wide-landscape illustration using a tech-forward optimistic style depicting Shannon in a casino-like setting, but instead of gambling chips, he's arranging binary digits (0s and 1s) that glow with neon intensity. Above the table floats a holographic visualization of an entropy curve (H = -\u2211p(x)log\u2082p(x)). One side of the illustration shows highly ordered, predictable information (low entropy) represented by simple, repeating patterns; the other shows complex, unpredictable information (high entropy) with rich, diverse patterns. Spectators in 1940s attire watch in amazement as Shannon confidently \"bets\" on the most efficient way to encode a message. The lighting creates a dramatic contrast between the glowing bits and the human elements, with warm highlights on faces showing expressions of wonder."},{"location":"stories/shannon/#chapter-9-the-ultimate-puzzle-shannons-information-maze","title":"Chapter 9 \u2013 The Ultimate Puzzle: Shannon's Information Maze","text":"<p>Few knew that Shannon's mathematical brilliance was matched by his love of creating mechanical devices. In 1950, he built \"Theseus,\" an electronic mouse that could learn to navigate a maze using relay circuits\u2014an early demonstration of machine learning through signal processing.</p> <p>The maze-solving mouse became a perfect metaphor for Shannon's broader vision: that properly designed systems could find optimal paths through uncertainty. This principle would later become fundamental to digital signal processing algorithms used in everything from noise cancellation to image compression.</p> <p></p> Image Prompt Image 10: Please generate a new wide-landscape illustration. A colorful, bright wide-landscape illustration using a tech-forward optimistic style showing Shannon hunched over a table with his mechanical mouse \"Theseus\" navigating an intricate metal maze. The maze glows with electric-blue pathways representing circuits, with tiny LEDs lighting up as the mouse learns the correct route. Floating above the physical maze is a translucent, virtual representation of a more abstract information maze, showing signal paths through noise represented by colorful waveforms and interference patterns. The background features blueprints and sketches of increasingly complex navigation algorithms that evolve from simple relay circuits to digital processing schematics. Shannon's face is lit from below by the maze lights, creating a sense of wonder and discovery. Around the edges of the illustration, modern applications of maze-solving algorithms appear as small vignettes: noise-canceling headphones, GPS navigation systems, and image recognition software."},{"location":"stories/shannon/#chapter-10-from-theory-to-practice-the-digital-signal-processing-revolution","title":"Chapter 10 \u2013 From Theory to Practice: The Digital Signal Processing Revolution","text":"<p>By the 1960s, Shannon's theoretical work began transforming into practical applications. His mathematics of signal and noise provided the foundation for what would become digital signal processing (DSP)\u2014a field that would revolutionize how we record, transmit, and enhance information.</p> <p>While Shannon himself moved on to other interests, engineers at Bell Labs and beyond were implementing his theories into the first digital filters, analog-to-digital converters, and signal processing algorithms. These innovations would eventually lead to crystal-clear digital telephone lines, compact discs, and the entire field of digital media.</p> <p></p> Image Prompt Image 11: Please generate a new wide-landscape illustration. A colorful, bright wide-landscape illustration using a tech-forward optimistic style depicting a timeline of digital signal processing evolution. The left side shows Shannon's theoretical papers floating above early digital circuit boards being assembled by engineers in 1960s attire. As the eye moves rightward across the illustration, the technology evolves: early digital filters transform into integrated circuits, then microprocessors, and finally modern DSP chips. Above each technology era float the real-world applications they enabled: telephone switching systems, music synthesizers, medical imaging equipment, and smartphone signal processors. Colorful waveforms flow throughout the illustration, being progressively \"cleaned\" as they pass through each generation of technology, visualizing how Shannon's mathematics improved signal quality. The lighting creates dramatic highlights on the technology while keeping human faces warm and optimistic, with expressions of determination and achievement. Blueprint-style diagrams of fundamental DSP algorithms (FFT, digital filters) connect the theoretical to the practical throughout the scene."},{"location":"stories/shannon/#chapter-11-the-digital-legacy-shannons-information-age","title":"Chapter 11 \u2013 The Digital Legacy: Shannon's Information Age","text":"<p>Shannon lived to see his theoretical work transform the world. The internet, digital communication, and modern computing all rest upon his foundational insights about information. By reimagining signals as discrete bits rather than continuous waves, he provided the conceptual bridge between the analog world and our digital future.</p> <p>Though modest about his contributions, Shannon's work touches every aspect of modern signal processing. From the noise-cancellation algorithms in your headphones to the error-correction codes protecting data in space probes, his mathematics continues to shape how humanity communicates across distances and through time.</p> <p></p> Image Prompt Image 12: Please generate a new wide-landscape illustration. A colorful, bright wide-landscape illustration using a tech-forward optimistic style showing an elderly Shannon in the 1990s sitting on a park bench, surrounded by the digital world his theories created. In the foreground, Shannon holds a modern smartphone, examining it with curious delight. Emanating from this device is a vast, vibrant network of connections that spreads across the landscape, linking to satellites, cell towers, data centers, and millions of devices. Each connection point glows with Shannon's signature binary digits. The illustration creates a dramatic contrast between Shannon's humble presence and the immense digital ecosystem he helped create. Various signal processing applications are visualized along these connections: noise filtration shown as colorful static being smoothed into clear patterns; compression algorithms depicted as expanding and contracting data streams; error correction visualized as self-healing breaks in transmission lines. The background transitions from historical communication technologies on one side to futuristic concepts on the other, suggesting his work bridges past and future. The lighting creates a warm glow around Shannon while the digital network elements have a cool, efficient blue-white luminescence, symbolizing how human creativity spawned technological precision."},{"location":"stories/shannon/#chapter-12-beyond-shannon-the-future-of-signal-processing","title":"Chapter 12 \u2013 Beyond Shannon: The Future of Signal Processing","text":"<p>Shannon's work wasn't just a series of brilliant insights\u2014it was a methodology for understanding communication at its most fundamental level. His approach of applying rigorous mathematics to previously intuitive processes continues to inspire new generations of engineers and theorists.</p> <p>As we enter an era of quantum communication, artificial intelligence, and systems that process signals beyond human perception, Shannon's principles remain relevant. His mathematics of information continues to guide researchers who are pushing the boundaries of what signals we can detect, process, and understand.</p> <p></p> Image Prompt Image 13: Please generate a new wide-landscape illustration. A colorful, bright wide-landscape illustration using a tech-forward optimistic style depicting a modern research laboratory where diverse scientists and engineers work with advanced signal processing equipment. The central focus is a holographic display showing Shannon's original information theory equations morphing into new mathematical formulations for quantum information theory, neural processing, and other cutting-edge signal processing domains. Around the lab, different research stations showcase future applications: one researcher works with brain-computer interfaces where neural signals are being processed and visualized; another team monitors environmental sensors processing subtle signals from ecosystems; others work with quantum communication devices where entangled particles transmit information. Floating above it all is a subtle, ghost-like image of Shannon himself, observing with approval as his theories evolve and expand. Light streams through large windows, creating an atmosphere of discovery and possibility. The color palette blends warm human tones with cool technological hues, emphasizing how signal processing bridges human perception and machine capabilities. Small details throughout the illustration reference Shannon's playful nature\u2014a unicycle in the corner, chess pieces on a desk\u2014reminding viewers that creativity remains essential to scientific progress.  <p>These additional chapters expand on Shannon's legacy, showing how his theoretical work transformed into practical applications that revolutionized signal processing and created the foundation for our modern digital world. The detailed image descriptions maintain consistency with the tech-forward optimistic style while providing specific guidance for creating compelling graphic novel illustrations.</p>"},{"location":"stories/shannon/#epilogue-becoming-the-next-claude-shannon","title":"Epilogue \u2013 Becoming the Next Claude Shannon","text":"<p>Shannon\u2019s legacy is more than equations; it is a blueprint for creative engineering:</p> Skill Why It Mattered to Shannon How You Can Cultivate It Playfulness Linked seemingly unrelated ideas (Boolean algebra \u2194 relays). Tinker with hobbies; let curiosity roam. Mathematical Rigor Gave his insights immutable proof. Master probability, algebra, and coding theory. Interdisciplinary Curiosity Learned cryptography, control theory, juggling! Read broadly\u2014music, biology, economics. Courage to Challenge Orthodoxy Asked \u201cWhat is information?\u201d Question first principles in any problem. Communication Wrote papers engineers and mathematicians could read. Practice explaining complex ideas clearly. <p></p> Image Prompt Final Image 14: Please generate a new wide-landscape illustration. A colorful, bright wide-landscape illustration showing a diverse group of modern students\u2014some on laptops, others dismantling gadgets\u2014surrounded by floating icons of play (unicycle), rigor (math symbols), and communication (bits). In the background, a mural of Shannon tips his hat, passing a glowing bit to the next generation."},{"location":"stories/shannon/#call-to-action","title":"Call to Action","text":"<p>Bell Labs proved that when bold thinkers share corridors, they redefine what is possible. Claude Shannon showed that mathematics can tame complexity and that joyful curiosity is as essential as calculus. Whether you dream of quantum networks or sustainable satellites, remember: every grand innovation begins as a single, well-posed question\u2014and the courage to ride your own unicycle down the hallway of convention.</p>"},{"location":"stories/wavelets/","title":"The Wavelet Revolution: Ingrid Daubechies' Mathematical Journey","text":"Narrative Summary Please generate a detailed narrative for a graph-novel about Ingrid Daubechies contribution to signal processing.  The narrative should have places for 12 panels.  It should be a detailed, fun and entertaining story about Belgian mathematician Ingrid Daubechies as she develops wavelet theory in the 1980s and early 90s, revolutionizing signal processing with her \"mathematical building blocks.\"   Initially facing skepticism in a male-dominated field, Daubechies persevered to create compact wavelets that enabled everything from MP3 music files to medical imaging.  Add panels about her work to gain acceptance and respect from her peers.  The narrative follows her from her garden (which serves as a metaphor for her mathematical work) to her becoming the first woman to receive certain prestigious mathematics awards, showing students how abstract mathematics can solve real-world problems and break through gender barriers.  Finally, generalize about the skills needed to be a great engineer and promote change.  Discuss the ability of woman to make fundamental contributions to engineering.  Our goal is to have you generate the full text of the story, but to turn the story into a graphic novel with many illustrations that explain how the FFT algorithms was created.   When appropriate, suggest an wide-landscape drawing that could be inserted into the narrative to make the story a graphic novel.  Describe each image in detail and be consistent across all the images in the story for style. When you describe an image, make sure to mention that it should be a colorful, bright wide-landscape drawing suitable for consistent technology-forward optimistic graphic-novel.  <p>I'll create a detailed narrative for a graphic novel about Ingrid Daubechies and her contributions to signal processing, with places for 12 panels as requested.</p>"},{"location":"stories/wavelets/#panel-1-the-garden-of-numbers","title":"Panel 1: The Garden of Numbers","text":"<p>In her lush Belgian garden in 1980, a young mathematician named Ingrid Daubechies kneels among flowering plants, notebook in hand. Mathematical equations float visibly in thought bubbles around her head. She sketches wave-like patterns while observing the natural rhythms of her garden.</p> <p>Narrator: \"Some see only flowers and soil. Ingrid Daubechies saw patterns, frequencies, and mathematical possibilities. In her garden outside Brussels, the young Belgian mathematician found inspiration that would one day transform how we process signals.\"</p> <p>Ingrid (thinking): \"Nature doesn't use perfect sine waves... it uses short bursts of energy that start and stop. Why can't our mathematics do the same?\"</p>  Panel 1: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing showing Ingrid in her vibrant garden with mathematical equations floating visibly around her as thought bubbles. The drawing should have a dreamy quality with both realistic garden elements and abstract mathematical symbols blending together. The style should be technology-forward and optimistic, establishing the graphic novel's visual language."},{"location":"stories/wavelets/#panel-2-the-limitations-of-fourier","title":"Panel 2: The Limitations of Fourier","text":"<p>Inside a university lecture hall, male professors crowd around a chalkboard covered in classical Fourier transform equations. Ingrid stands slightly apart, her expression thoughtful as she points to a fundamental limitation in the equations.</p> <p>Narrator: \"For two centuries, scientists relied on Fourier transforms to break down signals into sine waves. But Ingrid saw what others missed\u2014these methods struggled with real-world signals that change over time.\"</p> <p>Ingrid: \"But what about signals that contain short bursts? Musical notes that start and stop? Images with sudden edges? Fourier analysis loses this critical time information.\"</p> <p>Professor (dismissively): \"That's just how signal processing works, Dr. Daubechies. Perhaps you're overthinking the problem.\"</p>  Panel 2: Please generate a new bright wide-landscape drawing.  A colorful, bright wide-landscape drawing of a traditional academic setting with men in formal attire surrounding a massive chalkboard filled with complex equations. Ingrid should stand slightly apart, confident yet isolated, with light highlighting her figure against the darker tones of the lecture hall. Maintain the technology-forward optimistic style while conveying the gender disparity of the era."},{"location":"stories/wavelets/#panel-3-the-revelation","title":"Panel 3: The Revelation","text":"<p>Split scene showing Ingrid working late at night in her study, surrounded by stacks of research papers and a crude early computer. Through her window, we see wavelets in nature\u2014ripples in water, sound waves, heartbeats on a monitor.</p> <p>Narrator: \"While others slept, Ingrid pursued a revolutionary idea: mathematical building blocks called wavelets that could capture both frequency AND time.\"</p> <p>Ingrid (writing furiously): \"If I can create compact mathematical wavelets\u2014functions that are non-zero for only a short time\u2014I could transform signal processing forever.\"</p> <p>Computer screen shows early wavelet patterns forming as Ingrid works.</p>  Panel 3: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing showing a split scene with Ingrid working intensely at her desk on one side, and natural wavelet patterns (water ripples, sound waves, heartbeats) visible through her window on the other. The contrast between the warm light of her study and the cool blues of the night outside should create visual interest while maintaining the technology-forward optimistic aesthetic."},{"location":"stories/wavelets/#panel-4-the-breakthrough","title":"Panel 4: The Breakthrough","text":"<p>Ingrid stands triumphant in her office at AT&amp;T Bell Labs in 1987, where equations for what will become \"Daubechies wavelets\" illuminate her workspace like streams of light. Her notepad shows the first orthogonal wavelets with compact support\u2014her historic breakthrough.</p> <p>Narrator: \"In 1987, Ingrid achieved what many thought impossible\u2014she constructed the first family of wavelets that were both orthogonal and compactly supported. In simpler terms, she created perfect mathematical building blocks for analyzing signals.\"</p> <p>Ingrid: \"They're beautiful... compact, efficient, and they preserve all the information! These wavelets can decompose and rebuild signals perfectly!\"</p>  Panel 4: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing of Ingrid in her AT&amp;T Bell Labs office with streams of light-like equations flowing around her. The scene should have a triumphant feel with Ingrid at the center surrounded by mathematical diagrams of wavelets that appear to glow with potential. The technology-forward optimistic style should convey this as a moment of scientific breakthrough and discovery."},{"location":"stories/wavelets/#panel-5-facing-the-skeptics","title":"Panel 5: Facing the Skeptics","text":"<p>At a major mathematics conference, Ingrid presents her wavelet theory to a predominantly male audience. Some appear skeptical, others intrigued. Ingrid stands confidently at a podium, her wavelet equations projected behind her.</p> <p>Narrator: \"Revolutionary ideas rarely receive immediate acceptance. When Ingrid presented her wavelets, many in the mathematical establishment remained skeptical.\"</p> <p>Senior Mathematician: \"Interesting theory, Dr. Daubechies, but how would this ever have practical applications beyond theoretical mathematics?\"</p> <p>Ingrid: \"These wavelets will change how we process and compress signals. They'll transform everything from digital imaging to telecommunications.\"</p>  Panel 5: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing of a conference hall with Ingrid standing confidently at a podium, facing rows of mostly male mathematicians with varied expressions from skeptical to curious. Her wavelet diagrams should be prominently displayed on a screen behind her, glowing with potential. The style should maintain the technology-forward optimistic aesthetic while capturing the tension of the moment."},{"location":"stories/wavelets/#panel-6-from-theory-to-practice","title":"Panel 6: From Theory to Practice","text":"<p>Split panel showing multiple practical applications emerging from Ingrid's work: medical MRI machines generating clearer images, digital music files being compressed, FBI fingerprint databases, and early digital photography. Ingrid walks through these applications, touching the screens in wonder.</p> <p>Narrator: \"Ingrid didn't just theorize\u2014she built bridges between abstract mathematics and practical applications, proving her critics wrong.\"</p> <p>Ingrid: \"Mathematics isn't just about beauty\u2014it's about solving real problems. Wavelets can compress images without losing important details, make medical scans clearer, and even help store the FBI's fingerprint database.\"</p>  Panel 6: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing structured as a series of connected scenes showing various practical applications of wavelets: medical imaging equipment, digital music players, fingerprint scanning systems, and digital cameras. Ingrid should be depicted walking through this technological landscape with an expression of satisfaction. The technology-forward optimistic style should emphasize how theoretical mathematics transforms into practical applications that improve lives."},{"location":"stories/wavelets/#panel-7-the-jpeg2000-revolution","title":"Panel 7: The JPEG2000 Revolution","text":"<p>A cinematic scene showing the implementation of wavelet compression in the JPEG2000 standard. Engineers work on computer screens showing image compression algorithms while Ingrid consults with them. Before-and-after comparisons show how wavelets preserve image quality at higher compression rates.</p> <p>Narrator: \"When the world needed better ways to store and transmit digital images, Ingrid's wavelets provided the solution. The JPEG2000 standard incorporated her work, allowing images to be compressed more efficiently while preserving important details.\"</p> <p>Engineer: \"Using Daubechies wavelets, we can compress this medical scan to one-twentieth its size while keeping all the diagnostic details. This changes everything.\"</p>  Panel 7: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing showing a modern technical environment with engineers working on advanced computer systems displaying wavelet-based image compression. Side-by-side image comparisons should be visible on screens, with Ingrid collaborating with the team. The technology-forward optimistic style should emphasize the collaborative nature of applied science and the tangible impact of Ingrid's mathematical work."},{"location":"stories/wavelets/#panel-8-breaking-the-glass-ceiling","title":"Panel 8: Breaking the Glass Ceiling","text":"<p>Ingrid receiving the MacArthur \"Genius\" Fellowship in 1992 and later becoming the first female president of the International Mathematical Union. The scene shows her acceptance speech with pioneering female mathematicians from history appearing as ghostly, supportive figures behind her.</p> <p>Narrator: \"In a field historically dominated by men, Ingrid's brilliance could not be denied. In 1992, she received the prestigious MacArthur 'Genius' Fellowship, and would later become the first woman president of the International Mathematical Union.\"</p> <p>Ingrid (at podium): \"This recognition isn't just for me\u2014it's for every girl who's been told that mathematics isn't for her. We belong in this field, and we will continue to transform it.\"</p>  Panel 8: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing of an awards ceremony with Ingrid at a podium accepting her recognition. Behind her, semi-transparent figures of historical female mathematicians (like Emmy Noether, Sofia Kovalevskaya) should appear as supportive spirits. The audience should include both contemporary supporters and young girls looking inspired. The technology-forward optimistic style should emphasize this as a moment of historical significance and inspiration."},{"location":"stories/wavelets/#panel-9-the-professors-garden","title":"Panel 9: The Professor's Garden","text":"<p>At Princeton University, where Ingrid became the first female full professor in the Mathematics Department, she teaches a diverse group of students in a garden-like setting. She uses natural examples\u2014leaves, flower patterns, river waves\u2014to explain wavelet theory.</p> <p>Narrator: \"At Princeton, Professor Daubechies cultivated not just mathematical theories, but also the next generation of mathematicians\u2014especially young women who saw in her a role model.\"</p> <p>Ingrid (to students): \"Mathematics is everywhere in nature, just waiting for us to discover its patterns. My wavelets were inspired by how natural signals work\u2014they come, they go, they overlap and interact.\"</p> <p>Female student: \"So you're saying we should look to nature for mathematical inspiration?\"</p> <p>Ingrid: \"I'm saying that great mathematics, like gardening, requires both structured thinking and creative intuition.\"</p>  Panel 9: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing of an outdoor classroom setting at Princeton with Ingrid teaching a diverse group of students. The scene should have garden elements with mathematical diagrams overlaid on natural objects like leaves and flower patterns. The technology-forward optimistic style should emphasize knowledge transfer and the connection between mathematics and nature."},{"location":"stories/wavelets/#panel-10-the-digital-revolution","title":"Panel 10: The Digital Revolution","text":"<p>A dramatic visualization showing how Ingrid's wavelets underpin the modern digital world. Data streams flow through smartphones, medical devices, digital music, internet transmission, and space exploration technology\u2014all utilizing wavelet technology.</p> <p>Narrator: \"Today, Ingrid's mathematical building blocks are processing signals all around us. Every time you stream music, view digital images, or benefit from a medical scan, you're experiencing the power of Daubechies wavelets.\"</p> <p>Ingrid (observing the digital world): \"Mathematics isn't separate from everyday life\u2014it's an essential language for describing and improving our world.\"</p>  Panel 10: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing visualizing the modern digital world with flowing data streams connecting various technologies that use wavelets. The scene should show smartphones, medical imaging devices, streaming music services, and satellite communications all connected by mathematical wavelet patterns. Ingrid should be depicted observing this interconnected technological ecosystem. The technology-forward optimistic style should be at its peak here, showing the culmination of how abstract mathematics transforms modern life."},{"location":"stories/wavelets/#panel-11-the-continuing-journey","title":"Panel 11: The Continuing Journey","text":"<p>An older, distinguished Ingrid works with diverse young researchers in a modern laboratory. They're applying wavelet theory to new frontiers: artificial intelligence, climate modeling, gravitational wave detection.</p> <p>Narrator: \"Great innovations don't end with discovery\u2014they evolve and find new applications. Today, Ingrid's wavelets are being applied to challenges she never imagined.\"</p> <p>Young researcher: \"Professor, we're using your wavelet transforms to help AI systems process visual information more like humans do.\"</p> <p>Ingrid: \"That's the beauty of fundamental mathematics\u2014it gives us tools that transcend their original purposes. I'm more excited about what you'll discover than what I found.\"</p>  Panel 11: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing of a modern research facility where an older Ingrid collaborates with a diverse team of young researchers. Displays should show advanced applications of wavelets in AI visualization, climate models, and gravitational wave detection. The technology-forward optimistic style should convey the passing of knowledge to new generations and the evolution of mathematical applications."},{"location":"stories/wavelets/#panel-12-the-seeds-of-change","title":"Panel 12: The Seeds of Change","text":"<p>The final panel returns to a garden metaphor, but now it's a global garden with diverse young people\u2014particularly girls\u2014studying mathematics, engineering, and computer science around the world. Ingrid walks through this symbolic garden, nurturing the growth of new ideas.</p> <p>Narrator: \"The true measure of Ingrid Daubechies' impact isn't just in her mathematical formulas, but in how she transformed what it means to be an engineer, a mathematician, a problem-solver.\"</p> <p>Ingrid: \"The qualities that make great engineers and scientists aren't limited by gender. Persistence in the face of skepticism. Creativity in framing problems. The courage to challenge established thinking. The ability to connect abstract ideas to practical needs.\"</p> <p>Narrator: \"Through her brilliant work and unrelenting perseverance, Ingrid Daubechies didn't just create wavelets\u2014she created waves of change that continue to ripple through science, technology, and society.\"</p>  Panel 12: Please generate a new bright wide-landscape drawing. A colorful, bright wide-landscape drawing showing a symbolic global garden where diverse young people, particularly girls and young women, engage with mathematical and scientific pursuits. Ingrid should be depicted walking through this garden, symbolic of her legacy. The technology-forward optimistic style should reach its fullest expression here, representing hope for a future where science and mathematics are truly inclusive fields."},{"location":"stories/wavelets/#epilogue-the-engineers-path","title":"Epilogue: The Engineer's Path","text":"<p>\"Great engineering isn't just about technical skills\u2014it's about vision. Ingrid Daubechies showed us that the greatest contributions come from those who can see beyond current limitations, who persist when others doubt, and who understand that mathematics and science are tools for human progress.\"</p> <p>\"The story of wavelets reminds us that abstract thinking and practical application aren't opposites\u2014they're complementary forces. Women have always had the capacity for this kind of transformative thinking, even when denied the opportunity to demonstrate it.\"</p> <p>\"As we face the complex challenges of our future\u2014from climate change to healthcare, from artificial intelligence to space exploration\u2014we need diverse perspectives more than ever. The next revolutionary idea, like the wavelets that transformed our digital world, might come from someone who doesn't fit the traditional mold of what an engineer or mathematician 'should' look like.\"</p> <p>\"Ingrid Daubechies didn't just create mathematical tools\u2014she created possibilities. And in doing so, she planted seeds that continue to grow into forests of innovation.\"</p>"}]}